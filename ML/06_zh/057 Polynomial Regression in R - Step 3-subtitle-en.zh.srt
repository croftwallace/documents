1
00:00:00,360 --> 00:00:02,810
您好，欢迎来到Tauriel。

2
00:00:02,820 --> 00:00:08,280
因此，在预览教程中，我们完成了构建或提取回归模型的前两个步骤

3
00:00:08,670 --> 00:00:13,680
用来预处理数据，实际上很简单，因为我们只需要导入

4
00:00:13,680 --> 00:00:20,430
数据集并选择感兴趣的列，然后我们完全道德地将我们的数据集线性化

5
00:00:20,430 --> 00:00:23,230
回归模型和多项式回归模型。

6
00:00:23,250 --> 00:00:28,560
因此，我们在回归模型中建立了该模型，以作为多项式回归模型比较的参考

7
00:00:28,560 --> 00:00:29,660
我们也建造了

8
00:00:29,880 --> 00:00:34,650
说到比较和本教程，我们将可视化这些图形结果

9
00:00:34,650 --> 00:00:39,390
两个模型，因此我们将在此处绘制两个图，每个模型将要绘制一个图

10
00:00:39,390 --> 00:00:42,450
看到真实的观察和预测。

11
00:00:42,600 --> 00:00:47,790
正是这种辛劳让您相信多项式回归的强大性

12
00:00:47,790 --> 00:00:50,750
将模型与线性回归进行比较。

13
00:00:50,970 --> 00:00:55,200
因此，现在让我们编写代码以可视化这些结果。

14
00:00:55,440 --> 00:01:01,710
因此，如果您不遵循线性回归教程，我们将使用GG加两个来完成此操作

15
00:01:01,800 --> 00:01:02,700
在我们的。

16
00:01:02,760 --> 00:01:07,830
我只打算写一行代码将GGP安装到软件包中，以防万一

17
00:01:07,830 --> 00:01:13,830
您没有它，请检查是否需要转到此处的软件包，检查是否有GDP

18
00:01:13,880 --> 00:01:14,860
打包在这里。

19
00:01:14,940 --> 00:01:19,110
因此，如果您在此处的列表中未找到它，则需要安装它才能进行安装。

20
00:01:19,110 --> 00:01:20,200
这真的很简单。

21
00:01:20,220 --> 00:01:21,580
您只需要在这里输入。

22
00:01:21,600 --> 00:01:30,000
安装该软件包，只需在此处按Enter键，然后在引号中输入该软件包的名称即可

23
00:01:30,000 --> 00:01:31,350
是GGP了。

24
00:01:31,710 --> 00:01:36,810
然后，您只需要选择此行并执行一个伊斯兰人员指挥官控制，然后输入

25
00:01:36,810 --> 00:01:37,060
。

26
00:01:37,200 --> 00:01:41,030
这样就可以将G-G安装到软件包中，而不会出现任何问题。

27
00:01:41,190 --> 00:01:46,080
我不会这样做，因为已经安装了我的，但是您可以相信我，它将完美地工作

28
00:01:46,100 --> 00:01:46,210
。

29
00:01:46,320 --> 00:01:50,100
因此，我将通过按命令转换策略将其作为注释。

30
00:01:50,100 --> 00:01:51,050
好吧。

31
00:01:51,240 --> 00:01:55,690
现在我们可以开始可视化线性回归结果。

32
00:01:55,740 --> 00:02:01,980
因此，如您在此处的软件包中所见，此处未选择“ Juji party”软件包，因此我将需要

33
00:02:02,340 --> 00:02:03,380
在这里选择。

34
00:02:03,480 --> 00:02:08,900
因此，我可以保重，或者更好的方法是自动选择此软件包。

35
00:02:08,970 --> 00:02:15,510
多亏了脚本，为此，我们只需要添加行库，并在括号中添加名称

36
00:02:15,510 --> 00:02:17,430
没有引号的包装。

37
00:02:17,460 --> 00:02:19,880
因此，只需gg这样绘制即可。

38
00:02:19,980 --> 00:02:23,770
当实际执行此行时，我们现在可以检查它。

39
00:02:23,850 --> 00:02:26,040
如您所见G.G. 但未选中。

40
00:02:26,250 --> 00:02:27,400
我正在执行这一行。

41
00:02:27,450 --> 00:02:28,770
现在它被选中了。

42
00:02:29,130 --> 00:02:34,330
好的，现在选择我们的GOT库让我们开始构建绘图。

43
00:02:34,470 --> 00:02:39,180
因此，我们将完全像在回归中那样简单地使用G-G图函数

44
00:02:39,720 --> 00:02:42,660
然后我们将在图中添加不同的组件。

45
00:02:42,660 --> 00:02:47,390
因此，首先，我们将借助GM点功能添加真实的观察点。

46
00:02:47,580 --> 00:02:50,400
然后，我们将添加预测组件。

47
00:02:50,430 --> 00:02:52,730
得益于GM线路功能。

48
00:02:52,900 --> 00:02:57,650
然后我们将标题添加到Juji标题的plus主题中，然后使用x轴添加一个标签

49
00:02:57,660 --> 00:03:01,240
X实验室，并用y实验室标记y轴。

50
00:03:01,260 --> 00:03:06,550
非常简单，就像我们逐步制作此图之前一样。

51
00:03:06,930 --> 00:03:09,290
好的，让我们从第一步开始。

52
00:03:09,390 --> 00:03:18,430
第一步只是在此处键入带括号的DZIEDZIC图，这将启动该图。

53
00:03:18,490 --> 00:03:24,330
现在请记住，我们需要在此处添加一个加号，这就是我们开始添加不同组件的地方

54
00:03:24,330 --> 00:03:24,690
。

55
00:03:24,690 --> 00:03:31,220
所以第一个组件是真实的观察点，我们用GM点函数绘制它们

56
00:03:31,220 --> 00:03:31,260
。

57
00:03:31,260 --> 00:03:37,050
因此，让我们在此处添加GM点GM下划线点实际上就是这里。

58
00:03:37,110 --> 00:03:39,710
我们可以将参数放在括号中。

59
00:03:39,970 --> 00:03:43,680
好的，所以首先要记住的是美学功能。

60
00:03:43,800 --> 00:03:50,040
因此，在该函数中，我们将输入观察点的x坐标以及

61
00:03:50,040 --> 00:03:51,500
y坐标。

62
00:03:51,540 --> 00:03:53,070
因此，让我们这样做。

63
00:03:53,130 --> 00:03:55,450
他要求设置功能。

64
00:03:55,500 --> 00:04:03,450
所以这是一个静态函数，我们需要将X放到今晚，将所有或10个观测值的y坐标放

65
00:04:03,450 --> 00:04:04,170
点。

66
00:04:04,170 --> 00:04:06,060
因此，让我们看看这些坐标是什么。

67
00:04:06,090 --> 00:04:07,940
让我们看一下我们的数据集。

68
00:04:07,980 --> 00:04:13,380
因此，我们的10个观察点以其水平和薪水为特征。

69
00:04:13,380 --> 00:04:20,400
x坐标对应于此处为级别列的自变量，而我们的y坐标对应

70
00:04:20,400 --> 00:04:25,140
这是我们这10个级别的10个薪水。

71
00:04:25,140 --> 00:04:28,960
因此，简而言之，x坐标是自变量值。

72
00:04:29,040 --> 00:04:33,780
即此处的10个级别，y坐标为因变量值。

73
00:04:33,780 --> 00:04:35,730
那就是张量在这里。

74
00:04:36,000 --> 00:04:37,900
好的，让我们结束。

75
00:04:38,160 --> 00:04:44,530
因此，这里的X是级别，Y是薪水。

76
00:04:44,550 --> 00:04:51,870
但是，由于我们没有在此处指定数据是数据集，因此我们需要指定在哪里

77
00:04:51,870 --> 00:05:00,650
我们将获取薪水水平和薪水，并指定我们需要在此处添加数据集$

78
00:05:00,990 --> 00:05:06,310
我们了解到，我们正在此处获取数据集数据集的级别。

79
00:05:06,440 --> 00:05:11,710
因此，对于为什么我们要指定我们要使用该列的薪水，这将是相同的

80
00:05:11,730 --> 00:05:14,910
我们数据中的薪水就是这种方式。

81
00:05:14,900 --> 00:05:15,620
完善。

82
00:05:15,930 --> 00:05:22,710
现在我们可以添加另一个参数，因为它是一个静态函数，是此几何的第一个参数

83
00:05:22,700 --> 00:05:23,700
点功能。

84
00:05:23,750 --> 00:05:30,000
记住，我们可以添加第二个参数，因为我们想为点添加颜色

85
00:05:30,260 --> 00:05:34,730
然后区分真实的观察点和预测。

86
00:05:34,820 --> 00:05:36,910
因此，我们将选择红色。

87
00:05:36,920 --> 00:05:44,070
因此，在这里我将添加color参数并将其设置为等于红色的引号。

88
00:05:44,060 --> 00:05:44,410
好吧。

89
00:05:44,400 --> 00:05:49,020
现在，我们不要忘记在GM点函数处关闭圆括号，因为该圆括号

90
00:05:49,010 --> 00:05:53,790
是为了美学功能，现在我们一切都很好。

91
00:05:53,880 --> 00:05:54,350
大。

92
00:05:54,360 --> 00:05:58,380
现在让我们添加第二个组成部分，即预测。

93
00:05:58,440 --> 00:06:02,590
因此，我将在此处添加一个加号，并在此处添加第二个组件。

94
00:06:02,730 --> 00:06:08,210
所以第二个组件就是我刚才所说的预测，我们将添加这些预测组件

95
00:06:08,510 --> 00:06:10,520
具有GM线路功能。

96
00:06:10,580 --> 00:06:13,270
因此，就像我们在回归中简单所做的一样。

97
00:06:13,560 --> 00:06:19,040
因此，Jim Line在得分线上加了加括号，为他加油。

98
00:06:19,130 --> 00:06:24,800
再一次，我们将把静态函数组合到调用者中。

99
00:06:24,810 --> 00:06:31,260
所以我只想复制所有这些内容并将其粘贴到我的GM line函数中。

100
00:06:31,250 --> 00:06:31,630
好吧。

101
00:06:31,690 --> 00:06:33,990
现在，我们当然要进行一些更改。

102
00:06:34,050 --> 00:06:40,920
所以首先让我们从最简单的开始更改颜色，我们将选择蓝色进行预测

103
00:06:40,920 --> 00:06:41,780
。

104
00:06:41,780 --> 00:06:42,560
开始了。

105
00:06:42,690 --> 00:06:48,310
现在，我们需要更改的是预测点的坐标。

106
00:06:48,420 --> 00:06:54,290
所以我们的预测点的x坐标仍将是水平本身，因为我们

107
00:06:54,300 --> 00:06:58,530
只是预测我们数据集中10个级别的薪水。

108
00:06:58,520 --> 00:07:02,860
因此，在这里显然我们需要获取数据集中的唯一级别。

109
00:07:03,140 --> 00:07:06,680
因此，我们将数据设置为美元水平。

110
00:07:06,930 --> 00:07:12,550
但是，对于y坐标，这里当然会发生变化，因为通过获取数据集

111
00:07:12,560 --> 00:07:16,940
美元薪水，这里我们取10个级别的实际薪水。

112
00:07:17,000 --> 00:07:20,750
那就是我们此处数据集的薪金列中的薪水。

113
00:07:21,240 --> 00:07:26,130
因此，我们当然需要删除它，并用其他东西代替它。

114
00:07:26,250 --> 00:07:28,240
这又是什么。

115
00:07:28,400 --> 00:07:33,920
当然，根据线性关系，这将是对10个级别的薪水的预测

116
00:07:33,930 --> 00:07:39,700
回归模型并获得这些预测，我们将当然使用预测功能。

117
00:07:39,930 --> 00:07:45,240
因此，实际上，这与我们在此漂亮函数中进行回归时的简单操作完全相同

118
00:07:45,240 --> 00:07:47,340
需要指定回归变量。

119
00:07:47,510 --> 00:07:52,850
因此，这些回归变量称为Lin rag，因为您知道我们正在播放线性回归结果，并且

120
00:07:52,860 --> 00:07:55,860
我们的线性回归模型称为Lin rag。

121
00:07:55,940 --> 00:08:01,880
那就是我们的回归者在这里领先，现在我记得的第二个论点是新数据。

122
00:08:01,980 --> 00:08:04,320
所以这里有新数据。

123
00:08:04,500 --> 00:08:08,380
这实际上是我们要进行预测的数据点。

124
00:08:08,510 --> 00:08:14,990
非常简单，因为我们想要获得10个级别的薪水预测

125
00:08:15,060 --> 00:08:16,090
我们的数据集。

126
00:08:16,160 --> 00:08:19,790
因此，将数据集放在此处。

127
00:08:20,000 --> 00:08:20,770
完善。

128
00:08:20,850 --> 00:08:26,270
所以我们很好，因为我们已经为预测输入了蓝色。

129
00:08:26,430 --> 00:08:27,260
大。

130
00:08:27,260 --> 00:08:31,900
现在，通过在此处添加加号来快速完成此图。

131
00:08:32,100 --> 00:08:37,100
然后您知道我们曾经是G.G. 标题功能添加标题。

132
00:08:37,130 --> 00:08:40,550
您能看到它变得多么简单，现在开始变得非常直观。

133
00:08:40,560 --> 00:08:45,420
您知道我们正在使用GM点函数规划实际的观测点，然后进行预测

134
00:08:45,410 --> 00:08:51,710
带有GM行功能，现在带有DG标题功能的标题，一切似乎都变得容易了

135
00:08:51,720 --> 00:08:53,060
更方便

136
00:08:53,460 --> 00:09:01,340
因此，对于标题，我们将添加azen，但事实或虚张声势只是为了给我们起一个有趣的名字

137
00:09:01,350 --> 00:09:01,980
问题。

138
00:09:02,250 --> 00:09:07,710
我们将在这里指定我们对线性回归结果表示赞赏，因此我们只需要指定

139
00:09:07,710 --> 00:09:11,820
这里是线性回归。

140
00:09:11,900 --> 00:09:12,710
好吧。

141
00:09:12,720 --> 00:09:13,960
标题就是这样。

142
00:09:13,980 --> 00:09:17,590
现在，我们添加一个X标签和一个白色标签。

143
00:09:17,600 --> 00:09:25,140
因此，对于X标签，我们将在此处在X实验室括号中添加一些引号，然后进行平整，因为

144
00:09:25,130 --> 00:09:38,190
我们的x轴将包含级别，然后加上y实验室括号引号和薪水，并进行线性

145
00:09:38,180 --> 00:09:44,780
回归结果已准备好绘制，因此我们不再等待，让我们立即看一下

146
00:09:44,800 --> 00:09:45,050
。

147
00:09:45,300 --> 00:09:47,120
所以我要选择所有这一切。

148
00:09:47,370 --> 00:09:50,400
我不需要选择它，因为情节已经很重要。

149
00:09:50,690 --> 00:09:57,800
现在让我们按Commander Control按Enter执行并听到其他线性回归结果

150
00:09:57,800 --> 00:09:57,930
。

151
00:09:57,950 --> 00:10:01,320
因此，让我们放大一下，并对其进行解释。

152
00:10:01,380 --> 00:10:03,650
好，那么这里首先要了解的是什么。

153
00:10:03,920 --> 00:10:09,230
好了，最重要的是要理解的是，我们需要区分

154
00:10:09,240 --> 00:10:12,620
真正的观察点是这里的红点。

155
00:10:12,620 --> 00:10:19,430
每个人对应一个特定级别，并且在y轴上与该级别相关联的实际工资

156
00:10:19,430 --> 00:10:19,930
这里。

157
00:10:20,120 --> 00:10:25,790
然后我们在这张幻灯片上有我们的预测，例如，对于每个级别，

158
00:10:26,270 --> 00:10:31,510
当我们在此直线上将第5级投影到此处时，将第5级。

159
00:10:31,580 --> 00:10:38,040
这实际上是我们的预测点，我们可以通过预测该点来获得预期的薪水

160
00:10:38,030 --> 00:10:41,050
这样在y轴上。

161
00:10:41,220 --> 00:10:44,590
因此，我们得到的收益少于$ 250000。

162
00:10:44,700 --> 00:10:44,950
好。

163
00:10:44,960 --> 00:10:49,520
所以首先要了解红色点是真实的观察点

164
00:10:49,520 --> 00:10:52,260
蓝色直线上的是预测点。

165
00:10:52,430 --> 00:10:52,910
好的。

166
00:10:53,000 --> 00:10:58,520
现在要了解的第二件事是，我们的预测结果实际上是一条直线

167
00:10:58,520 --> 00:10:58,710
。

168
00:10:58,860 --> 00:11:03,780
它是一条直线的事实是由于特定原因，它是线性回归

169
00:11:03,770 --> 00:11:07,100
模型显然是线性模型。

170
00:11:07,310 --> 00:11:11,990
每次建立二维线性模型时，都会得到一条直线。

171
00:11:12,170 --> 00:11:17,090
我要强调这一点，因为我们将要可视化结果的下一个模型将是

172
00:11:17,100 --> 00:11:22,550
多项式回归我的角色，这个模型原来是非线性回归模型，

173
00:11:22,550 --> 00:11:25,290
将会看到它不再是一条直线。

174
00:11:25,670 --> 00:11:27,410
现在让我们进行一些解释。

175
00:11:27,440 --> 00:11:33,290
首先，我们可以看到以蓝色直线表示的线性回归模型

176
00:11:33,290 --> 00:11:34,840
这里不合适。

177
00:11:34,860 --> 00:11:40,680
亲爱的说得很好，因为正如您所看到的一些观察点，预测实际上是

178
00:11:40,670 --> 00:11:43,330
与实际观察结果相差甚远。

179
00:11:43,350 --> 00:11:46,390
这一点就是这种情况，而Zimpher也是如此。

180
00:11:46,580 --> 00:11:48,670
这一点，尤其是这一点。

181
00:11:48,750 --> 00:11:50,630
让我们看看这一点。

182
00:11:50,690 --> 00:11:59,510
虽然这是真正的观察点，但它对应于10个级别和100万美元的薪水

183
00:11:59,510 --> 00:11:59,920
。

184
00:11:59,930 --> 00:12:02,260
因此，这绝对是首席执行官的薪水。

185
00:12:02,300 --> 00:12:04,220
这就是实际工资。

186
00:12:04,250 --> 00:12:08,870
现在，如果您想获得该特定观察点的预计工资，

187
00:12:08,870 --> 00:12:09,940
首席执行官

188
00:12:09,950 --> 00:12:15,680
我们需要做的是将此点投影在此蓝色直线上，这就是我们的线性回归

189
00:12:15,680 --> 00:12:18,180
模型以实际获得预测点。

190
00:12:18,200 --> 00:12:24,110
现在，要获得首席执行官的预期薪水，我们需要将该预测点再次投影到

191
00:12:24,120 --> 00:12:27,110
包含所有薪水的y轴。

192
00:12:27,500 --> 00:12:35,130
因此，根据我们的线性模型，我们得出CEO的预测薪水实际上是620000美元。

193
00:12:35,250 --> 00:12:36,630
回归模型。

194
00:12:36,650 --> 00:12:41,120
因此，想象一下我们正在与一名即将被雇用的未来员工进行谈判。

195
00:12:41,300 --> 00:12:44,000
那是之前公司的首席执行官。

196
00:12:44,000 --> 00:12:49,040
想象一下，如果我们告诉这个人我们相信自己在虚张声势，那么这个人会多么生气。

197
00:12:49,040 --> 00:12:55,610
我们认为它的薪水大约是$ 600000，而以前的薪水实际上是一百万

198
00:12:55,620 --> 00:12:55,770
。

199
00:12:55,760 --> 00:12:58,680
谈判可能真的很糟糕。

200
00:12:58,940 --> 00:13:05,270
因此，这是该模型如何产生不良结果并可能产生非常负面影响的第一个示例

201
00:13:05,450 --> 00:13:09,490
关于我们目前正在进行的谈判等情况。

202
00:13:09,530 --> 00:13:16,110
因此，让我们看看谈判是否会真正改变我们未来的实际情况

203
00:13:16,130 --> 00:13:21,860
即将被雇用，并且它的水平为6.5，正在通过说其工资来协商其工资

204
00:13:21,870 --> 00:13:25,860
以前在那家公司的薪水是一百六十点还可以。

205
00:13:26,030 --> 00:13:31,470
好吧，让我们看看6.5水平几乎与此水平相对应。

206
00:13:31,670 --> 00:13:37,040
当我们将此水平投影到我们的回归模型时，这里是蓝色直线，如果您

207
00:13:37,040 --> 00:13:42,100
再次在这一点上，我们将获得预期的薪水。

208
00:13:42,380 --> 00:13:44,300
好吧，它超过了30万美元。

209
00:13:44,300 --> 00:13:45,650
绝对是这样。

210
00:13:45,650 --> 00:13:50,600
实际上，我们远远超过了该雇员所说的以前的工资。

211
00:13:50,610 --> 00:13:56,690
所以实际上在这种情况下，在我们的实际情况下，谈判对我们来说会很好，但仍然

212
00:13:56,780 --> 00:14:02,120
我们希望获得准确的预测，并且显然需要这样做，因此我们需要改进模型并做出

213
00:14:02,120 --> 00:14:07,940
非线性模型将更适合此处的观察点，即我们将做出一些

214
00:14:07,940 --> 00:14:12,650
这种曲线会更好地接近此处所有已读取的观察点。

215
00:14:12,870 --> 00:14:19,490
因此，让我们关闭线性回归结果，并开始可视化多项式

216
00:14:19,490 --> 00:14:25,610
回归结果，您现在将看到从线性回归结果中得出的结果是多么容易

217
00:14:25,620 --> 00:14:33,830
多项式回归结果，因为这里要做的就是选择并粘贴

218
00:14:33,900 --> 00:14:38,300
现在，我们将看到我们只需要改变很少的事情。

219
00:14:38,300 --> 00:14:46,170
因此，像往常一样，让我们​​从最简单的方法开始，用多项式OK替换线性函数。

220
00:14:46,370 --> 00:14:47,690
现在我们需要改变什么。

221
00:14:47,750 --> 00:14:51,310
好的，所以我们需要更改基因组点功能。

222
00:14:51,310 --> 00:14:55,070
当然不是，因为我们要保持相同的真实观察结果。

223
00:14:55,140 --> 00:14:56,250
这样就可以了。

224
00:14:56,470 --> 00:14:59,620
然后我们需要更改基因组谱系功能。

225
00:14:59,620 --> 00:15:06,910
当然可以，因为在这里我们根据数据集预测了10个级别的薪水

226
00:15:06,900 --> 00:15:08,750
线性回归模型

227
00:15:08,980 --> 00:15:11,450
因此，根据您的情况，我们需要在此处进行更改。

228
00:15:11,520 --> 00:15:12,370
很简单

229
00:15:12,460 --> 00:15:18,890
好吧，实际上我们只需要在函数中更改攻击者，而不是使用DeLynn Raggatt

230
00:15:18,900 --> 00:15:25,010
这是线性侵略器，我们将拉动我们称为POLLI齿条的阻遏器

231
00:15:25,480 --> 00:15:26,260
就是这样。

232
00:15:26,470 --> 00:15:31,290
实际上，这是我们要做的所有工作，以可视化回归结果的拉动，您将看到

233
00:15:31,290 --> 00:15:34,020
在下一节中，它实际上将是相同的。

234
00:15:34,020 --> 00:15:41,230
我们将只需要更改一个或两个回归以及未来回归器的新图形结果。

235
00:15:41,320 --> 00:15:42,700
因此，这非常好。

236
00:15:42,700 --> 00:15:46,000
实际上，我们现在已经准备好可视化结果。

237
00:15:46,090 --> 00:15:47,950
因此，让我们无需等待即可执行此操作。

238
00:15:47,950 --> 00:15:54,310
我要选择此选项，然后按Command和Control键并执行。

239
00:15:54,930 --> 00:15:55,990
在这里。

240
00:15:55,990 --> 00:15:59,460
如您所见，这不再是一条直线。

241
00:15:59,710 --> 00:16:02,200
让我们放大图表。

242
00:16:02,270 --> 00:16:02,890
好吧。

243
00:16:02,880 --> 00:16:08,860
因此，正如我刚才提到的，作为机器或任何科学家的第一个反射是，这不是

244
00:16:08,860 --> 00:16:10,280
线性模型了。

245
00:16:10,300 --> 00:16:15,870
顺便说一句，恭喜您刚建立了第一个非线性模型。

246
00:16:16,210 --> 00:16:19,490
在本课程中，我们将看到大量其他非线性模型。

247
00:16:19,620 --> 00:16:20,970
但这是您的第一个。

248
00:16:21,100 --> 00:16:22,830
恭喜你

249
00:16:22,840 --> 00:16:30,120
因此，您可以看到它不是一条直线，而是一条曲线，我们可以立即看到曲线是

250
00:16:30,370 --> 00:16:34,050
更好地接近所有读取的观察点。

251
00:16:34,060 --> 00:16:37,240
特别是对于这里的CEO，CEO不会生气。

252
00:16:37,240 --> 00:16:43,300
现在，如果我们与他协商，那是新公司的未来薪水，因为现在的预测是

253
00:16:43,300 --> 00:16:45,240
更接近迷恋点。

254
00:16:45,510 --> 00:16:54,000
让我们检查一下即将被录用的员工，并且在6.5左右的水平时该员工的水平为6.5

255
00:16:54,000 --> 00:16:54,690
这里。

256
00:16:55,020 --> 00:17:02,320
当我们在由蓝色曲线表示的Paul Newman回归模型上投影6.5时，我们得到

257
00:17:02,590 --> 00:17:06,390
我在这里预测薪水，将点投影在曲线上。

258
00:17:06,630 --> 00:17:13,380
再回到薪资获取上，我们实际上得到的薪水与薪水更加接近

259
00:17:13,380 --> 00:17:17,710
由争议员工提及，此处大约为16万。

260
00:17:17,720 --> 00:17:22,320
好吧，我们在这里没有得到准确的预测，因为这是我们在下一个教程中要做的

261
00:17:22,350 --> 00:17:22,510
。

262
00:17:22,740 --> 00:17:27,250
但是绝对可以肯定的是，这个模型已经变得更好了。

263
00:17:27,310 --> 00:17:32,980
现在，为了好玩，让我们添加一个新的度数，以查看该模型如何仍可以大大改进并几乎

264
00:17:32,970 --> 00:17:37,190
随着我们增加度数，所有点都非常准确地通过。

265
00:17:37,360 --> 00:17:38,110
因此，让我们检查一下。

266
00:17:38,130 --> 00:17:40,840
让我们关闭它，然后添加一个新学位。

267
00:17:40,840 --> 00:17:49,420
非常简单，我们要做的是通过复制粘贴在此处的行在此处添加新学位，然后

268
00:17:49,410 --> 00:17:55,030
我们将在数据数据集4级中添加一个新列，该列将对应于

269
00:17:55,040 --> 00:17:57,900
不可估量的水平和力量。

270
00:17:58,120 --> 00:18:05,350
因此，在这里，我们需要通过获取该电平的四次方来以这种方式进行计算。

271
00:18:05,590 --> 00:18:11,600
现在，让我们执行此行，以在数据集中添加第4级列。

272
00:18:11,620 --> 00:18:14,470
现在，您可以检查一下这里是否完美。

273
00:18:14,530 --> 00:18:20,470
现在，我们将其重置为以第四个角度在回归模型上重建新的民意测验

274
00:18:20,470 --> 00:18:20,510
。

275
00:18:20,560 --> 00:18:24,610
因此，将执行所有新的多项式回归。

276
00:18:24,760 --> 00:18:26,650
现在让我们看一下结果。

277
00:18:26,670 --> 00:18:31,770
因此，这些是先前的结果，对应于具有三次方的多项式回归模型

278
00:18:31,790 --> 00:18:31,900
。

279
00:18:31,990 --> 00:18:34,670
现在，让我们看一下四年级的情况。

280
00:18:34,710 --> 00:18:37,900
因此，我将选择并执行。

281
00:18:37,890 --> 00:18:44,560
这是四次多项式回归模型的多项式回归结果

282
00:18:44,580 --> 00:18:44,890
。

283
00:18:45,180 --> 00:18:45,520
好。

284
00:18:45,520 --> 00:18:51,340
如您所见，如果您愿意，我们可以放大它，因为您看到这条线实际上是严格通过的

285
00:18:51,340 --> 00:18:53,250
由所有的红色反对派代表。

286
00:18:53,260 --> 00:18:56,560
而现在，今年的谈判将更加愉快。

287
00:18:56,640 --> 00:19:03,270
或者我应该说更少愤怒，因为现在的预测实际上与真实观察几乎相同

288
00:19:03,280 --> 00:19:03,770
点。

289
00:19:03,790 --> 00:19:08,980
那是预测工资，几乎与实际工资相同。

290
00:19:09,490 --> 00:19:10,120
好。

291
00:19:10,380 --> 00:19:16,810
当我们在曲线上投影此6.5级员工时，对于6.5级员工也是如此。

292
00:19:16,990 --> 00:19:22,020
然后在y轴上再次投影，即薪资获取，我们得到他所说的价值

293
00:19:22,030 --> 00:19:23,820
那是160 k。

294
00:19:23,970 --> 00:19:28,140
对于那些对在此之前和之后拥有更连续曲线感兴趣的人

295
00:19:28,300 --> 00:19:33,240
我将在我们的文件中添加该作业的代码，在该部分提供的内容中，您可以将其签出来很有趣

296
00:19:33,240 --> 00:19:33,510
。

297
00:19:33,630 --> 00:19:38,590
这就是他们再次用来获得对这个以前的薪水的准确预测

298
00:19:38,590 --> 00:19:44,160
将要雇用的新员工，我们将其与他假装的薪水进行比较

299
00:19:44,290 --> 00:19:50,370
在其先前的公司中，并最终告诉我们最终的判决是真实还是虚张声势。

300
00:19:50,380 --> 00:19:52,940
因此，我期待在下一个教程中与您一起这样做。

301
00:19:52,990 --> 00:19:54,910
在此之前，请享受机器学习。

