1
00:00:00,300 --> 00:00:02,660
您好，欢迎来到本Python教程。

2
00:00:02,970 --> 00:00:08,580
因此，在上一个教程中，我们进行了预处理阶段，我们导入了创建矩阵的数据

3
00:00:08,580 --> 00:00:16,140
X的特征，这些特征X只是由先前称为10个位置等级的等级组成

4
00:00:16,140 --> 00:00:22,440
我们将要雇用的员工的公司和因变量向量Y

5
00:00:22,440 --> 00:00:28,760
包含与要素X矩阵的10个不同级别相关的10个薪水。

6
00:00:28,860 --> 00:00:29,750
那么好吧。

7
00:00:29,910 --> 00:00:34,710
然后，我们不需要将数据集分为训练集和测试集，因为

8
00:00:34,710 --> 00:00:40,950
只是我们没有太多信息，如果您可以的话也不需要回复，因为我们要

9
00:00:40,950 --> 00:00:46,170
使用与线性回归相同的库，该库具有以下功能

10
00:00:46,170 --> 00:00:51,960
让自己做出更准确的预测，因此无需首先在此处应用功能

11
00:00:51,980 --> 00:00:52,160
。

12
00:00:52,350 --> 00:00:57,360
好的，现在在本教程中，我们将做两件事，以建立线性回归

13
00:00:57,360 --> 00:01:02,730
完全像我们在上一节中所做的那样建模，当然，我们还将建立

14
00:01:02,910 --> 00:01:06,200
多项式回归模型并适合数据集。

15
00:01:06,210 --> 00:01:08,540
那么为什么在这里创建这两个模型。

16
00:01:08,580 --> 00:01:10,710
好吧，只是将它们进行比较。

17
00:01:10,710 --> 00:01:16,380
我们只是将这个线性回归模型作为参考，然后就可以比较

18
00:01:16,380 --> 00:01:22,160
多项式回归的结果到此线性回归参考空间的结果。

19
00:01:22,170 --> 00:01:26,140
因此，让我们构建这两个模型，然后看看会发生什么。

20
00:01:26,160 --> 00:01:31,530
因此，我们将很快建立线性回归模型，因为这正是我们所做的

21
00:01:31,530 --> 00:01:33,110
在前面的部分中。

22
00:01:33,120 --> 00:01:39,510
因此，您还记得我们需要从标量和线性法线库中导入线性回归类

23
00:01:39,520 --> 00:01:39,580
。

24
00:01:39,630 --> 00:01:42,870
因此，让我们从Eskay开始。

25
00:01:42,900 --> 00:01:51,450
了解线性模型导入线性回归的知识。

26
00:01:51,870 --> 00:01:52,250
好的。

27
00:01:52,260 --> 00:01:53,410
这就是我们的班级。

28
00:01:53,610 --> 00:01:59,120
现在，我们将创建此类的对象，该对象将是Lynnie或aggressor对象。

29
00:01:59,340 --> 00:02:04,620
只有这次，我们才不会像上一节那样将其称为回归器，因为

30
00:02:04,620 --> 00:02:08,500
我们将在这里使用回归变量，因此我们需要区分它们。

31
00:02:08,610 --> 00:02:12,860
因此，我们将称为第一个回归或亚麻抹布。

32
00:02:13,020 --> 00:02:19,710
第二个也是因为您知道第二个多项式回归将基于线性回归

33
00:02:19,730 --> 00:02:22,280
在其上将添加一些多项式项。

34
00:02:22,320 --> 00:02:27,540
因此，这里用于多项式回归的回归称为Lin。

35
00:02:27,990 --> 00:02:33,750
但是这里我们简单回归的第一个简单的名字叫Lin REYK，我想那是我们的

36
00:02:33,750 --> 00:02:35,260
第一名空中侵略者。

37
00:02:35,430 --> 00:02:37,310
现在您知道该怎么办了。

38
00:02:37,350 --> 00:02:44,150
我们需要将Clast称为线性回归，这意味着我们只是导入了。

39
00:02:44,670 --> 00:02:45,350
这里是。

40
00:02:45,360 --> 00:02:47,280
不要忘记括号。

41
00:02:47,280 --> 00:02:49,230
无需在此处输入任何参数。

42
00:02:49,230 --> 00:02:50,140
我们都很好。

43
00:02:50,280 --> 00:02:54,490
现在，我们当然需要在我们的回归对象中解决这个问题。

44
00:02:54,510 --> 00:03:00,870
这次，Lynn Raggatt将数据添加到了由多余的额外NY NY组成的数据集中。

45
00:03:00,870 --> 00:03:06,180
但是X和Y是因为我们没有对数据集，训练集和测试集进行任何拆分

46
00:03:06,190 --> 00:03:06,460
。

47
00:03:06,720 --> 00:03:13,360
好的，因此要使Lendrick对象适合x和y，我们通常需要使用fit方法。

48
00:03:13,470 --> 00:03:20,190
因此，我们在此处添加Dot，然后在此处选择fit方法，然后在此方法中，我们需要将x和

49
00:03:20,190 --> 00:03:27,990
y如此处所示，因此出现特征矩阵x r，并且y是因变量矢量

50
00:03:28,000 --> 00:03:28,240
。

51
00:03:28,470 --> 00:03:34,380
好的，现在在我们的回归模型中很简单，只需使用这三个简单的行即可创建

52
00:03:34,380 --> 00:03:34,620
。

53
00:03:34,650 --> 00:03:35,930
因此，让我们这样做。

54
00:03:35,940 --> 00:03:38,280
我要选择这个。

55
00:03:38,280 --> 00:03:41,100
老派美国人专注并执行。

56
00:03:41,220 --> 00:03:44,030
在这里，您的回归模型很简单。

57
00:03:44,070 --> 00:03:45,320
做得好。

58
00:03:45,590 --> 00:03:49,220
好的，现在让我们建立一个多项式回归模型。

59
00:03:49,800 --> 00:03:55,530
好的，因此要创建此模型，我们将导入一个新类，该类将为您提供

60
00:03:55,530 --> 00:04:01,680
我们提供了将一些多项式项包含到线性回归方程中的工具，此类是

61
00:04:01,680 --> 00:04:04,550
称为实际多项式特征。

62
00:04:04,970 --> 00:04:08,280
好，让我们导入这个类，然后看看会发生什么。

63
00:04:08,280 --> 00:04:11,630
因此，此类实际上在预处理库中。

64
00:04:11,670 --> 00:04:18,720
因此，这里我们将按标量和点预处理进行键入。

65
00:04:18,720 --> 00:04:19,370
这里是。

66
00:04:19,380 --> 00:04:19,960
输入。

67
00:04:20,220 --> 00:04:20,600
好吧。

68
00:04:20,610 --> 00:04:24,780
因此，预处理实际上是我们已经用于特征缩放的库。

69
00:04:24,780 --> 00:04:29,700
但这一次不是导入标准比例尺类，而是仅合并要素类

70
00:04:29,720 --> 00:04:29,850
。

71
00:04:29,940 --> 00:04:39,470
好了，说到这，让我们先导入，再导入，然后是多项式特征。

72
00:04:39,960 --> 00:04:45,930
现在，像往常一样，当我们创建一个类时，我们创建了该类的一个对象，并且该对象我们要

73
00:04:45,930 --> 00:04:49,260
称之为下划线。

74
00:04:49,560 --> 00:04:53,270
OK，那么这个多边形Reg对象将是什么。

75
00:04:53,520 --> 00:05:00,230
这个多态对象将成为一个转换工具，它将转换我们的特征矩阵

76
00:05:00,390 --> 00:05:07,050
X变成新的特征矩阵，我们将其称为X poly，这将是新的特征矩阵

77
00:05:07,050 --> 00:05:12,920
不仅包含此自变量x 1，还包含x 1平方。

78
00:05:13,010 --> 00:05:19,340
如果我们想让X-1等于3的幂x等于任何事物的X之一的幂

79
00:05:19,340 --> 00:05:20,060
我们想要。

80
00:05:20,370 --> 00:05:27,620
因此，基本上它将只是将仅由一种类型组成的X转换为新矩阵X Puli

81
00:05:27,950 --> 00:05:33,250
由自变量和新的自变量组成，这将是该自变量

82
00:05:33,250 --> 00:05:37,290
2或3或4或5等的幂。

83
00:05:37,680 --> 00:05:38,150
好。

84
00:05:38,310 --> 00:05:39,790
这就是它的作用。

85
00:05:39,810 --> 00:05:41,570
因此，让我们立即创建它。

86
00:05:41,730 --> 00:05:47,640
因此，我们将像往常一样将此类称为多项式特征。

87
00:05:47,690 --> 00:05:51,070
因此，将其粘贴到此处，当然我们要添加一些括号。

88
00:05:51,080 --> 00:05:52,170
至于任何班级。

89
00:05:52,190 --> 00:05:54,680
现在让我们看看我们可以在此处输入什么参数。

90
00:05:54,990 --> 00:05:56,300
所以我要发表评论。

91
00:05:56,360 --> 00:05:59,500
我需要检查多项式fut。 类。

92
00:05:59,810 --> 00:06:02,020
在这里，我得到了所有信息。

93
00:06:02,660 --> 00:06:08,300
因此，我们唯一感兴趣的参数是度数的第一个参数，因为

94
00:06:08,310 --> 00:06:13,890
参数将指定我们未来的特征矩阵中多项式特征的程度。

95
00:06:14,690 --> 00:06:21,710
首先，让我们实际选择默认值2，以便在此处输入。

96
00:06:21,710 --> 00:06:25,180
学位等于2。

97
00:06:25,690 --> 00:06:26,290
好。

98
00:06:26,610 --> 00:06:27,570
所以这是第一步。

99
00:06:27,560 --> 00:06:29,700
创建此多边形对象。

100
00:06:29,690 --> 00:06:34,480
现在，我们需要做的是实际创建这个X策略矩阵。

101
00:06:34,500 --> 00:06:36,330
我一直在和你谈论很多。

102
00:06:36,410 --> 00:06:40,010
因此，让我们创建它，并找出它的外观。

103
00:06:40,050 --> 00:06:44,840
因此，请在这里熟练地使用这种方式进行调用。

104
00:06:44,850 --> 00:06:49,040
因此，现在当然要使用刚刚创建的bullyrag对象。

105
00:06:49,190 --> 00:06:56,700
所以在这里bullyrag，所以您知道，正如我告诉您的那样，Reyk是一种可以转换矩阵的工具

106
00:06:56,690 --> 00:07:04,200
通过将额外的多项式项添加到

107
00:07:04,190 --> 00:07:05,190
矩阵X。

108
00:07:05,370 --> 00:07:10,140
现在，由于次数等于2，所以我们只增加了一个多项式项。

109
00:07:10,160 --> 00:07:18,050
但是由于我们将X转换为X Bully，因此在这里将使用第五种转换方法，因为

110
00:07:18,380 --> 00:07:23,360
首先，我们需要将对象适合X，然后可能将X转换为X。

111
00:07:23,570 --> 00:07:29,560
因此，这就是我们用于变换的一个模型，因此此处不适合进行变换。

112
00:07:29,570 --> 00:07:32,010
我们输入课程x。

113
00:07:32,150 --> 00:07:34,160
因此，让我们开始吧。

114
00:07:34,230 --> 00:07:39,890
我要在这里选择这三条线，并与布雷斯克美军一起执行死刑。

115
00:07:39,950 --> 00:07:40,890
开始了。

116
00:07:41,100 --> 00:07:41,910
完美创建。

117
00:07:41,900 --> 00:07:45,510
现在，让我们转到圣经资源管理器，让我们看看前党。

118
00:07:45,750 --> 00:07:48,580
而且我还将打开x进行比较。

119
00:07:49,060 --> 00:07:49,400
好。

120
00:07:49,400 --> 00:07:51,260
因此，让我们看看这里发生了什么。

121
00:07:51,620 --> 00:07:57,910
首先，我们在原始列中输入原始自变量，即变量

122
00:07:57,910 --> 00:08:02,680
前雇员公司的10个职位级别中的10个级别。

123
00:08:03,090 --> 00:08:06,870
现在在这个新的前公开矩阵中，我们有三列。

124
00:08:06,870 --> 00:08:13,040
因此，我们首先注意到X的位置级别实际上是中间的列，

125
00:08:13,040 --> 00:08:15,960
对应于圣经中的x 1

126
00:08:16,130 --> 00:08:21,910
然后我们注意到这里的第二列是这里的第一列的平方。

127
00:08:22,070 --> 00:08:27,990
所以这实际上是多项式项，即您知道我们将此自变量x1称为。

128
00:08:28,160 --> 00:08:34,110
这个变量是X1平方，因为您可以看到每个值都是该值的平方

129
00:08:34,110 --> 00:08:34,570
这里。

130
00:08:34,760 --> 00:08:35,860
好吧，我们明白了。

131
00:08:35,880 --> 00:08:38,350
现在这里的第一列是什么。

132
00:08:38,450 --> 00:08:43,830
好了，当我们实施向后淘汰时，请记住我们回归作业中的倍数

133
00:08:44,100 --> 00:08:50,500
我们必须手动添加一列您知道的值，以便在我们的倍数中包含常量零

134
00:08:50,570 --> 00:08:51,810
回归方程。

135
00:08:52,010 --> 00:08:53,570
好吧，这里是完全一样的。

136
00:08:53,590 --> 00:09:00,840
这破坏了我们创建的对象，在此处自动创建了这一列，以包括

137
00:09:00,840 --> 00:09:04,410
常数为零，并且为回归方程式的倍数。

138
00:09:04,400 --> 00:09:09,590
因此，它会自动执行此操作，以防万一我们需要使用一些需要使

139
00:09:09,600 --> 00:09:13,950
这里包含在我们的功能矩阵中。

140
00:09:13,980 --> 00:09:14,750
好吧。

141
00:09:14,750 --> 00:09:21,770
现在我们只剩下要做一件事，就是将这种拟合实际纳入多元回归

142
00:09:21,770 --> 00:09:28,460
模型并执行此操作，我们将创建一个新的线性回归对象，我们将其称为

143
00:09:28,480 --> 00:09:34,020
Lynn认为这就是为什么我将第一个线性回归对象的Lynn Regg用于构建的原因

144
00:09:34,010 --> 00:09:40,650
在我们的回归中，现在我们必须创建一个新的线性回归对象，以免造成任何混淆

145
00:09:40,640 --> 00:09:41,580
与第一个。

146
00:09:41,690 --> 00:09:47,910
第二个线性回归对象的目的将包括我们在此处所做的拟合

147
00:09:47,900 --> 00:09:48,830
用我们的滑轮正确。

148
00:09:48,890 --> 00:09:55,300
对象与被驱逐多项式fut的矩阵。 进入我们的线性回归模型。

149
00:09:55,740 --> 00:10:06,010
因此，在这里让我们创建Lynn rag两个等于线性回归括号。

150
00:10:06,420 --> 00:10:12,810
现在，我们需要将此线性回归对象专业地和y拟合。

151
00:10:12,840 --> 00:10:15,700
因此，我们再次在这里使用fit方法。

152
00:10:16,080 --> 00:10:21,700
在Wigan的输入X Puli和Y中。

153
00:10:22,010 --> 00:10:25,920
好的，现在正在创建模型。

154
00:10:25,940 --> 00:10:32,190
因此，一开始它看起来可能有些混乱，但是基本上，当我们退后一步时，实际上

155
00:10:32,180 --> 00:10:39,590
非常简单和合乎逻辑，因为我们用这三行代码实际上转换了原始矩阵

156
00:10:39,600 --> 00:10:46,350
未来主义者X融入我们的新功能矩阵，专业地包含原始自变量

157
00:10:46,350 --> 00:10:50,700
位置级别及其相关的多项式项。

158
00:10:51,090 --> 00:10:57,870
然后，一旦专业地创建了这个新的多项式特征矩阵，我们就创建了一个新的线性回归

159
00:10:57,870 --> 00:11:05,010
对象Lendrick，我们将其拟合到这个新矩阵X Bouley和现在的原始因变量矢量

160
00:11:05,000 --> 00:11:05,580
y。

161
00:11:05,610 --> 00:11:11,100
就像您知道我们正在建立线性回归模型一样，首先

162
00:11:11,100 --> 00:11:17,000
这个X滑轮矩阵在这里包含两个独立变量，位置水平和平方

163
00:11:17,000 --> 00:11:18,320
位置级别。

164
00:11:18,750 --> 00:11:21,570
好的，现在让我们看看我们需要在这里执行什么。

165
00:11:21,600 --> 00:11:25,350
我们在这里执行了此代码部分的前三行。

166
00:11:25,460 --> 00:11:31,460
因此，现在我们需要选择最后九个来完成其余压制的许多控制器，并

167
00:11:31,520 --> 00:11:39,000
执行一切好，现在正在使用回归模型，并准备揭示真相或

168
00:11:39,000 --> 00:11:39,740
虚张声势。

169
00:11:39,770 --> 00:11:43,830
这就是我们将在下一个教程中做的事情，我期待在那里与您见面。

170
00:11:43,830 --> 00:11:45,310
在那之前享受学习

