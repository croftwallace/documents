1
00:00:00,390 --> 00:00:02,540
您好，欢迎来到本美术教程。

2
00:00:02,580 --> 00:00:08,430
因此，在英国Statoil公司，我们进行了预处理，我们导入了数据集并仅选择了

3
00:00:08,430 --> 00:00:13,550
将他和薪水列调平，然后我们就不必花一天的时间将其发送到训练集中，

4
00:00:13,570 --> 00:00:18,900
之所以进行验证，是因为您可以看到该数据集是一个很小的数据集，只有10个观测值。

5
00:00:18,900 --> 00:00:22,310
最后，我们不必应用缩放。

6
00:00:22,470 --> 00:00:25,210
这样就使第一个预处理步骤变得非常容易。

7
00:00:25,260 --> 00:00:30,420
现在我们准备进行下一步，将多项式模型拟合到数据集

8
00:00:30,420 --> 00:00:30,750
。

9
00:00:30,760 --> 00:00:37,200
但是，我想向您展示多项式回归模型如何在以下方面更强大

10
00:00:37,200 --> 00:00:43,320
我们的情况和向您显示此情况的最佳方法是将其与基准模型（例如

11
00:00:43,310 --> 00:00:46,940
参考基础模型，这将是我们的线性回归模型。

12
00:00:46,980 --> 00:00:51,720
这就是为什么在Statoil中我们将建立两个模型，即线性回归模型和

13
00:00:51,720 --> 00:00:52,600
回归模型。

14
00:00:52,860 --> 00:00:58,220
然后，我们将比较结果，还将比较图形结果和预测。

15
00:00:58,260 --> 00:01:03,450
因此，您将确信，轮询和回归模型对于

16
00:01:03,450 --> 00:01:04,290
这个问题。

17
00:01:04,350 --> 00:01:08,780
主要原因是我们的问题是一个非线性问题。

18
00:01:09,270 --> 00:01:14,900
好的，让我们开始构建线性模型，因为它实际上非常快

19
00:01:14,910 --> 00:01:15,670
做过这个。

20
00:01:15,810 --> 00:01:20,820
因此，您知道我们从创建或回归开始，这次我们将不调用回归，因为

21
00:01:20,820 --> 00:01:24,920
我们将建立两个线性回归器和多项式回归器。

22
00:01:24,990 --> 00:01:27,750
因此，我们称其为林岩。

23
00:01:27,780 --> 00:01:28,560
开始了。

24
00:01:28,770 --> 00:01:32,630
然后，您知道以后我们将我们的多项式称为后悔可能是错误的。

25
00:01:32,970 --> 00:01:38,120
因此，Liberec等于，然后记住我们必须使用L.N. 式。

26
00:01:38,190 --> 00:01:44,850
因此，我们需要在此处添加一些括号，然后让我们自己提醒我们需要输入什么

27
00:01:44,850 --> 00:01:47,850
在这里按F可以查看参数。

28
00:01:47,850 --> 00:01:50,870
好的，所以请记住第一个参数是公式。

29
00:01:50,910 --> 00:01:59,780
因此，公式很简单，就是已经固定为Tilda的工资。

30
00:01:59,910 --> 00:02:05,010
因此，我将其散布开，然后在此处加一个点以获取所有自变量。

31
00:02:05,010 --> 00:02:12,120
但是实际上只有一个自变量，所以这里的点与写时严格等效

32
00:02:12,210 --> 00:02:12,860
水平。

33
00:02:13,050 --> 00:02:16,520
好，对于第一个参数，然后第二个参数是完美的。

34
00:02:16,680 --> 00:02:18,580
数据就是数据。

35
00:02:18,600 --> 00:02:20,400
好，让我们添加这个参数。

36
00:02:20,400 --> 00:02:22,590
数据相等。

37
00:02:22,650 --> 00:02:23,430
现在让我们看看。

38
00:02:23,430 --> 00:02:23,690
好。

39
00:02:23,700 --> 00:02:30,870
因此，在线性回归部分，我们实际上使用了此处的训练集作为训练的数据参数

40
00:02:30,930 --> 00:02:32,630
我们的线性回归模型。

41
00:02:32,700 --> 00:02:37,580
但是，正如我们之前在此处说明的那样，我们没有将数据集加速到测试集的训练中心。

42
00:02:37,590 --> 00:02:43,530
所以我们只是要在整个数据集本身上训练模型，因为它是一个很小的数据集

43
00:02:43,530 --> 00:02:46,970
无论如何，我们希望获得最准确的预测。

44
00:02:46,980 --> 00:02:50,640
因此，在这里我们仅输入数据集即可。

45
00:02:51,210 --> 00:02:54,430
好的，我们的线性回归模型已经准备就绪。

46
00:02:54,500 --> 00:03:00,740
我们实际上已经准备好构建它，所以让我们构建线性回归模型并按

47
00:03:00,760 --> 00:03:03,070
和指挥官控制加号并执行。

48
00:03:03,120 --> 00:03:05,450
好吧，我们进行了侵略。

49
00:03:05,460 --> 00:03:09,420
我们可以在这里快速浏览一下摘要。

50
00:03:09,550 --> 00:03:15,170
让reg这样在控制台中键入一些内容，然后按Enter。

51
00:03:15,450 --> 00:03:18,470
这是该模型的统计结果。

52
00:03:18,490 --> 00:03:22,500
我们正在这样做，因为正如您所看到的那样，按字节数确实很容易，因此我们需要

53
00:03:22,500 --> 00:03:24,420
导入一个类创建一个对象。

54
00:03:24,480 --> 00:03:29,900
在这里真的很简单，所以我们来看一下，我们可以看到该关卡必须将我们存储在这里

55
00:03:29,910 --> 00:03:35,080
的意义水平，实际上不是一个不好的薪水预测指标。

56
00:03:35,220 --> 00:03:40,650
让我们等待多项式模型，看看它比线性回归要好得多。

57
00:03:41,030 --> 00:03:43,320
好的，现在让我们进入下一个级别。

58
00:03:43,320 --> 00:03:46,400
那是更好的模型多项式回归。

59
00:03:46,500 --> 00:03:47,880
然后构建它。

60
00:03:48,010 --> 00:03:53,670
好的，所以正如我提到的，我们将这种回归称为下标或Poley下划线Greg。

61
00:03:53,770 --> 00:03:54,770
这边请。

62
00:03:54,960 --> 00:04:00,600
而且您知道，因为多项式回归模型实际上是我们的攻击模型中的倍数，

63
00:04:00,600 --> 00:04:06,300
其中自变量实际上是一个自变量的多项式特征。

64
00:04:06,300 --> 00:04:12,240
正如Carroll在直觉教程中解释的那样，我们将再次使用L.M.函数。

65
00:04:12,240 --> 00:04:13,770
做了线性回归。

66
00:04:13,770 --> 00:04:19,530
所以在这里，我将以括号中的L-N函数开始，我们将输入

67
00:04:19,530 --> 00:04:20,750
我们的两个论点。

68
00:04:20,770 --> 00:04:26,950
公式等于薪水直到结束。

69
00:04:27,170 --> 00:04:31,860
然后，这里的多莉点实际上代表了其他东西。

70
00:04:31,880 --> 00:04:37,110
到目前为止，我只是点点滴滴，您了解接下来会发生什么，这将使我们

71
00:04:37,110 --> 00:04:39,810
多项式回归正确建立。

72
00:04:40,200 --> 00:04:45,450
所以接着说来，然后我们添加第二个参数，它仍然是数据等于数据

73
00:04:45,450 --> 00:04:50,720
设置是因为我们要在整个数据集上训练我们的多项式回归模型。

74
00:04:50,900 --> 00:04:56,130
好吧，现在您必须告诉自己等等，但这与线性回归完全相同。

75
00:04:56,280 --> 00:05:02,610
没错，这就是为什么我们需要在此处添加一些内容以使该模型成为多项式

76
00:05:02,610 --> 00:05:07,980
回归模型和我们要添加的一些小东西实际上是您的特征的提取

77
00:05:07,990 --> 00:05:08,030
。

78
00:05:08,560 --> 00:05:13,400
多项式特征实际上是一些额外的自变量，它们将是

79
00:05:13,400 --> 00:05:19,800
级别平方级别立方级别到第四级别到第五级别，直到您想要的任何程度。

80
00:05:19,820 --> 00:05:22,430
这些是这些附加的独立变量。

81
00:05:22,430 --> 00:05:27,920
将以某种方式组成新的指标或功能，这些实际上将是矩阵

82
00:05:28,130 --> 00:05:34,550
然后将应用多个线性回归模型，这将使​​整个模型成为多项式回归

83
00:05:34,550 --> 00:05:35,270
模型。

84
00:05:35,270 --> 00:05:42,110
因此，简而言之，多项式回归模型是由一个独立的

85
00:05:42,110 --> 00:05:48,170
变量和根据此第一个自变量拉出的其他自变量

86
00:05:48,180 --> 00:05:48,460
。

87
00:05:48,770 --> 00:05:54,000
好的，现在我们有了这个想法，您将完全理解我们现在将要做什么。

88
00:05:54,050 --> 00:06:00,680
建立多项式回归模型时，因为我们要做的是建立该多项式

89
00:06:00,680 --> 00:06:07,010
术语，在某种程度上，我们要做的就是专门添加，然后在此处称呼它们

90
00:06:07,010 --> 00:06:10,010
在此数据集中将是级别的平方。

91
00:06:10,010 --> 00:06:15,650
所以我们将这个新的自变量称为2级，现在就添加此新列

92
00:06:15,670 --> 00:06:15,990
。

93
00:06:16,310 --> 00:06:21,840
因此，要在数据框中添加一列，我们需要采用数据框，使其成为数据集。

94
00:06:21,860 --> 00:06:28,130
在这里，然后我们需要在此处添加一个美元符号，然后我们可以在此处添加将创建的任何名称

95
00:06:28,280 --> 00:06:31,740
该名称的新列并将其添加到我们的数据集中。

96
00:06:31,790 --> 00:06:37,760
因此，我们将其称为2级，因为我们采用的是10级的平方

97
00:06:37,760 --> 00:06:38,450
。

98
00:06:38,450 --> 00:06:44,660
然后我们添加等于，然后我们实际上需要给出该级别的值的公式才能进入

99
00:06:44,660 --> 00:06:51,060
的数据集，此公式适用于数据集中的级别和2的幂。

100
00:06:51,200 --> 00:06:58,040
因此，非常简单，我们将通过获取数据集并进行相同的添加来获取数据集的所有级别

101
00:06:58,040 --> 00:07:02,800
这美元在这里是水平列，在这里我只需要按Enter键。

102
00:07:03,020 --> 00:07:08,210
因此，通过执行此操作，我将级别称为他，这是我们数据集中级别列的所有值

103
00:07:08,290 --> 00:07:08,670
。

104
00:07:08,870 --> 00:07:15,350
现在，我将在数据集中采用所有这些级别的平方，因此非常简单地执行此操作

105
00:07:15,350 --> 00:07:22,520
我只是添加帽子，并说我们将创建一个新列，其中将包含正方形

106
00:07:22,520 --> 00:07:24,490
数据集中10个级别中的10个

107
00:07:24,500 --> 00:07:29,890
现在让我们看看我的数据集仅包含两列级别和薪水。

108
00:07:30,170 --> 00:07:32,940
如果我执行此操作。

109
00:07:33,530 --> 00:07:34,400
开始了。

110
00:07:34,400 --> 00:07:37,370
现在，让我们看一下您所看到的数据集。

111
00:07:37,400 --> 00:07:41,250
我现在有薪水和薪金两级的三列。

112
00:07:41,450 --> 00:07:47,000
如您所见，调用它们的值和级别是值和级别的平方

113
00:07:47,000 --> 00:07:47,720
柱。

114
00:07:48,080 --> 00:07:49,040
好。

115
00:07:49,430 --> 00:07:55,520
现在我们可以建立多项式回归模型，因为现在在这里完成它不仅包含

116
00:07:55,520 --> 00:07:58,760
级别栏也叫他级别。

117
00:07:58,760 --> 00:08:05,540
因此，这将在我们的回归模型中建立一个倍数，其中自变量是原始变量。

118
00:08:05,540 --> 00:08:10,440
自变量和该第一个独立可行项的多项式项。

119
00:08:10,610 --> 00:08:15,740
而且，如果您想在回归模型中以更高的程度构建项目符号，那么您将需要做

120
00:08:15,740 --> 00:08:23,240
同样，您知道我们可以复制此行并将其粘贴到此处，只需添加第3级列即可

121
00:08:23,240 --> 00:08:30,070
在数据集的原始自变量级别中包含级别的多维数据集。

122
00:08:30,080 --> 00:08:31,800
如您所见，这将非常容易。

123
00:08:31,940 --> 00:08:38,230
我只需要执行此行，这将在我们的数据集中添加一个3级列。

124
00:08:38,240 --> 00:08:45,020
因此，现在这个小点将成为笔可变水平中的原始点

125
00:08:45,020 --> 00:08:50,770
我们的级别和级别2以及我们级别的多维数据集值，并将其称为级别3。

126
00:08:50,990 --> 00:08:55,280
您可以根据需要添加任意多个级别的幂，但也许我们会在这里停止。

127
00:08:55,310 --> 00:08:58,610
我们将看到对我们的模型而言最好的多项式回归。

128
00:08:58,700 --> 00:09:00,670
因此，我们将看到我们将从中获得什么。

129
00:09:00,800 --> 00:09:04,330
现在，让我们实际构建多项式回归模型。

130
00:09:04,370 --> 00:09:10,430
如果我们选择此项并执行按命令和控制，则执行并完成多项式

131
00:09:10,430 --> 00:09:13,250
还创建了回归模型。

132
00:09:13,250 --> 00:09:20,590
因此，我们将在控制台poly reg中看到类型为summary的外观，让我们按Enter和

133
00:09:20,590 --> 00:09:21,700
让我们来看看。

134
00:09:21,990 --> 00:09:27,860
好了，现在我们可以看到的是我们创建的2级和3级多项式项是

135
00:09:27,860 --> 00:09:33,800
实际统计上的重要变量，但实际上这是此表，未显示实际

136
00:09:33,800 --> 00:09:37,120
解决我们的问题的多项式回归模型。

137
00:09:37,160 --> 00:09:42,230
在下一个教程中，您将更有说服力，在此我们将可视化图形结果

138
00:09:42,530 --> 00:09:47,660
您将完全理解为什么要进行非线性模型的回归

139
00:09:47,660 --> 00:09:53,180
与线性回归模型相比，预测我们的目标要好得多，因为它是

140
00:09:53,180 --> 00:09:54,610
线性模型。

141
00:09:54,770 --> 00:09:56,820
因此，我们将在下一个教程中进行检查。

142
00:09:56,870 --> 00:09:58,610
在那之前享受机器学习

