1
00:00:00,980 --> 00:00:03,090
您好，欢迎回到机器学习课程。

2
00:00:03,140 --> 00:00:06,920
今天，我们谈论的是先验算法背后的直觉。

3
00:00:07,040 --> 00:00:08,650
因此，让我们开始吧。

4
00:00:08,860 --> 00:00:11,410
我们将从讲故事开始。

5
00:00:11,420 --> 00:00:19,820
这是一个众所周知的数据科学或宗教传说，在某种意义上您可能拥有

6
00:00:19,820 --> 00:00:22,720
听说这个所谓的说法不是神话。

7
00:00:22,730 --> 00:00:23,950
真的发生了

8
00:00:23,970 --> 00:00:31,970
但是，正如您所知，很久以前发生的事情然后时间流逝，事实得到了

9
00:00:31,970 --> 00:00:32,330
故事。

10
00:00:32,330 --> 00:00:39,620
但是我会告诉你我关于这个传说的故事，它可能并不完全正确，但这就是我所知道的

11
00:00:40,160 --> 00:00:41,670
关于以及我如何听说的。

12
00:00:41,840 --> 00:00:50,330
那么您认为这两种产品帮宝适，尿布和啤酒之间的共同点是什么？

13
00:00:50,330 --> 00:00:56,880
您认为它们有什么共同点，为什么会成为这个城市传奇的一部分。

14
00:00:56,900 --> 00:00:58,600
它们为什么是科学状态的一部分。

15
00:00:59,330 --> 00:01:02,420
随着故事的发展。

16
00:01:02,690 --> 00:01:10,490
我们不打算将公司命名为公司，而是实际上像便利店的公司

17
00:01:10,490 --> 00:01:17,760
存储并围绕人们购买的产品进行了一些分析。

18
00:01:18,280 --> 00:01:23,030
因此，他们在看着您时，知道人们正在使用哪些工具。

19
00:01:23,030 --> 00:01:27,830
有什么共同点，他们分析了成千上万的交易，因此

20
00:01:27,830 --> 00:01:34,220
成千上万的人实际检查了几万，他们发现一个非常有趣的

21
00:01:34,220 --> 00:01:43,250
人们通常在一天中的某些时间在下午6点到6点之间购物的东西

22
00:01:43,790 --> 00:01:45,210
晚上9点

23
00:01:45,410 --> 00:01:54,050
买尿布的人也买啤酒，那就像是天翻地覆

24
00:01:54,080 --> 00:01:57,680
为什么这两个价格完全不相连呢。

25
00:01:57,680 --> 00:02:03,320
为什么有人在购买尿布时会购买啤酒，或者为什么在购买啤酒时会购买尿布。

26
00:02:03,380 --> 00:02:03,620
对。

27
00:02:03,620 --> 00:02:11,060
因此，事实就是它们确实出现在数据和解释中。

28
00:02:11,060 --> 00:02:18,800
可能的解释之一是，丈夫在下午或晚上

29
00:02:18,800 --> 00:02:26,520
回家，他们看起来像他，尽管她的丈夫和妻子正在照顾他们的孩子。

30
00:02:26,630 --> 00:02:31,730
他们有时会发现尿布用完了，谁必须去捡所有丈夫的尿布

31
00:02:31,730 --> 00:02:33,050
必须去捡尿布。

32
00:02:33,050 --> 00:02:33,680
对。

33
00:02:33,680 --> 00:02:38,040
或者，妻子派一个丈夫去捡尿布，而他正在捡尿布，因为

34
00:02:38,040 --> 00:02:40,310
确实是下班后的几个小时。

35
00:02:40,370 --> 00:02:42,260
他还已经在便利店里了。

36
00:02:42,260 --> 00:02:43,970
他还捡了些啤酒。

37
00:02:44,060 --> 00:02:44,490
对。

38
00:02:44,510 --> 00:02:51,080
因此，这可能是一个合理的解释，可能并非如此，但听起来很合理，

39
00:02:51,170 --> 00:02:54,970
基于此，您便可以真正想到它了。

40
00:02:54,980 --> 00:02:56,050
但这来自数据。

41
00:02:56,060 --> 00:02:56,430
对。

42
00:02:56,450 --> 00:03:01,350
然后，您可以决定如何在商店中安排产品。

43
00:03:01,400 --> 00:03:07,310
因此，有些商店可能会决定让这两家公司更接近，以吸引人们在购买啤酒时购买啤酒

44
00:03:07,310 --> 00:03:07,630
尿布。

45
00:03:07,640 --> 00:03:11,030
但是实际上很多商店都相反。

46
00:03:11,030 --> 00:03:19,520
有很多商店会分开啤酒和尿布，就像他们试图分开一样，您可能

47
00:03:19,520 --> 00:03:26,030
从您的便利店注意到这一点，他们尝试将面包和牛奶尽可能分开。

48
00:03:26,030 --> 00:03:26,360
为什么。

49
00:03:26,360 --> 00:03:31,060
因为这样他们才真正知道这两种产品是一起购买的。

50
00:03:31,310 --> 00:03:36,400
因此，您实际上必须遍历整个商店才能提货。

51
00:03:36,410 --> 00:03:40,190
您知道您已经拾起面包，然后要获取牛奶，您必须一直

52
00:03:40,190 --> 00:03:44,220
整个商店到商店的完全对角。

53
00:03:44,270 --> 00:03:49,640
因此，当您在商店中漫步时，会看到更多其他产品，并且更有可能提货

54
00:03:49,700 --> 00:03:53,990
您第一次进入商店时实际上并没有计划购买的其他商品

55
00:03:53,990 --> 00:03:54,170
地点。

56
00:03:54,190 --> 00:03:57,790
因此，有很多有趣的基于这些数据的营销策略。

57
00:03:57,800 --> 00:04:00,180
但是问题是如何获得这些数据。

58
00:04:00,290 --> 00:04:04,070
实现此目标的方法之一是先验算法。

59
00:04:04,130 --> 00:04:07,880
因此，让我们现在讨论先验知识和更多细节。

60
00:04:07,880 --> 00:04:08,310
好吧。

61
00:04:08,340 --> 00:04:15,330
所以这实际上是关于买了东西也买了东西或也看了东西的人

62
00:04:15,340 --> 00:04:21,860
或其他做某事的人也做了其他事，因此它进行了分析，并且整个联想

63
00:04:22,250 --> 00:04:29,600
规则学习的一部分当然是关于分析事物何时成对出现，一式三份或成对出现。

64
00:04:29,790 --> 00:04:38,240
在C中不是按顺序排列的，而是出于某种原因将它们组合在一起以查找那些规则和那些

65
00:04:38,330 --> 00:04:40,940
发生这种情况的方式。

66
00:04:41,000 --> 00:04:44,050
好吧，让我们来看一个例子。

67
00:04:44,050 --> 00:04:45,050
电影推荐权。

68
00:04:45,050 --> 00:04:49,150
这样您就拥有了用户ID，并且获得了人们喜欢的两部电影。

69
00:04:49,280 --> 00:04:53,530
电影1 2 3 4第二个人的电影1和2，依此类推。

70
00:04:53,750 --> 00:04:59,600
从这里开始，即使不了解关联规则学习，也可以通过查看它

71
00:04:59,600 --> 00:05:06,130
或先验先验算法，您实际上可以说，存在一些可能的规则可以

72
00:05:06,130 --> 00:05:09,490
因此，例如每个看电影的人。

73
00:05:09,610 --> 00:05:15,730
每个人，但看电影的人或喜欢电影的人也可能会喜欢

74
00:05:15,730 --> 00:05:16,920
电影第二。

75
00:05:17,140 --> 00:05:22,270
喜欢电影第二的人很可能也喜欢继续前进。

76
00:05:22,510 --> 00:05:27,260
看起来像一部电影的人也很可能像第三部电影。

77
00:05:27,260 --> 00:05:32,080
因此，您可以提出许多不同的潜在规则，但有些规则会变得更强大

78
00:05:32,080 --> 00:05:37,360
一些将变得更弱，我们希望找到非常强大的以建立我们的业务

79
00:05:37,360 --> 00:05:42,190
决定或关于这些规则的其他决定。

80
00:05:42,200 --> 00:05:48,330
我们可以在数据中看到正确的信息，我们不必走问别人，嘿，您喜欢第一部电影吗？

81
00:05:48,340 --> 00:05:50,070
因为这个原因，你想看第二部电影吗？

82
00:05:50,060 --> 00:05:53,850
您喜欢第二部电影还是喜欢它的口味和喜好，我们可以从数据中看到这件事

83
00:05:53,850 --> 00:05:59,260
我们想提取这些信息，只要我们知道我们有足够大的样本量

84
00:05:59,500 --> 00:06:05,350
我们正在分析的不只是五个人（如果是50000或500000人）

85
00:06:05,560 --> 00:06:08,740
相当可靠的规则。

86
00:06:08,740 --> 00:06:19,410
好的，这是另一个例子，我们有一个购物篮，所以有人在买食品杂货

87
00:06:19,420 --> 00:06:25,050
不只是杂货，更像是餐馆或外卖店。

88
00:06:25,150 --> 00:06:29,300
在这里您可以看到汉堡和薯条之间显然存在联系。

89
00:06:29,320 --> 00:06:29,790
有趣。

90
00:06:29,800 --> 00:06:31,120
蔬菜和水果。

91
00:06:31,120 --> 00:06:33,530
人们想要成为健康的汉堡薯条和番茄酱。

92
00:06:33,760 --> 00:06:37,440
同样，这些都是潜在的规则，不一定是我们将从那里拿走的那些规则。

93
00:06:37,450 --> 00:06:43,370
这仅是您可以通过查看缺陷来直观观察的示例。

94
00:06:44,020 --> 00:06:44,310
好吧。

95
00:06:44,320 --> 00:06:47,130
那么先验算法是如何工作的。

96
00:06:47,260 --> 00:06:49,990
那么先验算法包括三个部分。

97
00:06:50,020 --> 00:06:53,660
它得到了支持的信心和提升。

98
00:06:53,710 --> 00:06:59,160
因此，我们将开始提供支持，您将看到它与我们所提供的服务非常相似

99
00:06:59,190 --> 00:07:00,010
已经讨论过了。

100
00:07:00,010 --> 00:07:09,470
这与我们谈论北京针对海军基础分类器的直觉的方式非常相似。

101
00:07:09,580 --> 00:07:10,680
因此，让我们在这里看看。

102
00:07:10,730 --> 00:07:20,170
我们对电影的建议是对电影M的支持，该数字定义为

103
00:07:20,170 --> 00:07:23,670
看过的电影除以用户总数。

104
00:07:23,680 --> 00:07:24,240
对。

105
00:07:24,550 --> 00:07:27,380
与市场Buskin优化相同。

106
00:07:27,610 --> 00:07:32,970
包含项目I的交易次数除以交易总数。

107
00:07:33,040 --> 00:07:40,930
让我们看一个例子，这里有100个人，所以我们有5行20列

108
00:07:40,930 --> 00:07:43,870
人类。

109
00:07:44,080 --> 00:07:50,340
让我们看看其中有多少是我们在谈论一部电影。

110
00:07:50,590 --> 00:07:54,690
我将举一个我最喜欢的电影《机械男》的例子。

111
00:07:54,760 --> 00:07:57,000
而且，如果您还没有看到它，肯定要检查一下。

112
00:07:57,040 --> 00:07:59,050
这全都与AI和机器学习有关。

113
00:07:59,170 --> 00:08:04,030
因此，我们来看看其中有多少人实际见过ex machina。

114
00:08:04,300 --> 00:08:05,110
所以我们走了。

115
00:08:05,110 --> 00:08:10,800
在100人中有10个人看过ex machina。

116
00:08:10,810 --> 00:08:11,710
那是什么意思。

117
00:08:11,710 --> 00:08:15,070
这意味着我们在这里的支持率是10％。

118
00:08:15,160 --> 00:08:15,770
好。

119
00:08:15,940 --> 00:08:17,630
现在，我们继续第二步。

120
00:08:17,680 --> 00:08:20,450
第二步是我们需要找到信心。

121
00:08:20,530 --> 00:08:21,430
有什么信心？

122
00:08:21,430 --> 00:08:25,080
可信度定义为数字。

123
00:08:25,090 --> 00:08:25,990
去看电影吧。

124
00:08:25,990 --> 00:08:32,070
因此，看过电影并希望与他们分道扬of的人数。

125
00:08:32,080 --> 00:08:33,350
人们看过电影。

126
00:08:33,370 --> 00:08:39,490
所以在这里，我们假设我们正在测试一条规则，我们正在测试一条规则，假设人们

127
00:08:39,490 --> 00:08:46,240
谁看过星际，我们有一个假设说人们看过星际。

128
00:08:46,330 --> 00:08:55,500
在所有这些方面，他们也或曾经喜欢星际也很可能喜欢MSXML。

129
00:08:55,540 --> 00:09:01,810
如果有人看过星际游戏也可能看过前机械人，我们就去吧。

130
00:09:02,200 --> 00:09:06,370
所以基本上这是第一和第二部电影

131
00:09:08,830 --> 00:09:13,110
星际电影是我们要说的一部。

132
00:09:13,230 --> 00:09:17,110
因此，要带走星际中的每个人，我们将要检查其中有多少人

133
00:09:17,110 --> 00:09:17,840
前机械师。

134
00:09:18,070 --> 00:09:19,980
这正是我们在这里所做的。

135
00:09:19,990 --> 00:09:24,460
和Marquis Buskin优化一样，您可以想到一个炸薯条和汉堡的示例

136
00:09:24,460 --> 00:09:24,820
实例。

137
00:09:24,820 --> 00:09:30,570
人们吃了汉堡，我们点了汉堡，还可能点了薯条，所以在顶部

138
00:09:30,580 --> 00:09:34,000
人们点了汉堡和炸薯条，出现在底部。

139
00:09:34,000 --> 00:09:39,190
您有已经点了汉堡的人，无论他们是否已经点了汉堡

140
00:09:39,510 --> 00:09:40,730
不点炸薯条。

141
00:09:40,990 --> 00:09:44,300
用插图更容易谈论这个。

142
00:09:44,350 --> 00:09:51,970
假设那些染成绿色的伟人是发生过星际暴动的人，

143
00:09:53,260 --> 00:09:54,450
看了这部电影。

144
00:09:54,490 --> 00:09:59,890
现在，我们不想知道整个人口，而是想知道那些已经看过或卖过的人

145
00:09:59,900 --> 00:10:03,100
或其中有多少人看过机械制造商

146
00:10:03,100 --> 00:10:08,920
因此，他们当中有七个人也曾看过X台机器，所以只有七个人

147
00:10:08,920 --> 00:10:11,700
看过两部电影，这就是我们所追求的。

148
00:10:11,740 --> 00:10:16,420
因此，按照定义，我们的信心将是7除以40。

149
00:10:16,420 --> 00:10:18,210
这就是我的计算方式。

150
00:10:18,250 --> 00:10:24,880
有40个人亲自看过影片，而这40个人中有7个人实际上也曾看过电影。

151
00:10:24,880 --> 00:10:29,630
所以这里的会议好了百分之十七点五。

152
00:10:29,890 --> 00:10:34,070
接下来的部分或第三步也是最后一步是升力，升力是什么。

153
00:10:34,180 --> 00:10:35,550
举升又很简单。

154
00:10:35,590 --> 00:10:44,950
这将与我们在海军海湾中使用的非常相似，它们已成为该算法的分类器

155
00:10:44,950 --> 00:10:46,300
当我们讨论它时。

156
00:10:46,330 --> 00:10:51,450
因此，转换提升基本上是信心除以支持。

157
00:10:51,610 --> 00:10:57,430
因此，我们在第2步中计算得出的结果与在第1步中计算得出的结果相同，下面仅在

158
00:10:57,430 --> 00:11:00,960
插图，因为那样会更有意义。

159
00:11:00,970 --> 00:11:03,270
这就是我们的人口。

160
00:11:03,310 --> 00:11:08,650
绿色的人是看过星际的人，红色的人都是

161
00:11:08,650 --> 00:11:10,310
曾经看过X机的人。

162
00:11:10,310 --> 00:11:19,180
所以基本上我们的举升是可以的，所以如果我们只是随机地随机建议一个人观看

163
00:11:19,210 --> 00:11:20,230
前机械师。

164
00:11:20,230 --> 00:11:20,690
对。

165
00:11:20,860 --> 00:11:27,940
他们会知道这对他们来说是电影的可能性是多少，而不是在电影中

166
00:11:27,940 --> 00:11:33,980
这个人口喜欢这个人口，我们知道，在100个人中，只有10个实际上步行了6个

167
00:11:34,000 --> 00:11:37,810
机器，我们将假设在这里观看和喜欢是可以互换的。

168
00:11:37,810 --> 00:11:41,640
因此，我们将假设，如果他们不看，他们还是不会喜欢它的。

169
00:11:41,830 --> 00:11:52,450
因此，如果我们再取一个随机总体，那么我们建议随机抽样的可能性是多少

170
00:11:52,450 --> 00:11:58,390
该人群中的新人群会推荐他们Ex Machina电影是什么

171
00:11:58,390 --> 00:12:00,400
他们会喜欢它的可能性。

172
00:12:00,400 --> 00:12:06,880
好吧，可能性是10％，因为我们只有100个人，实际上只有10个人

173
00:12:06,880 --> 00:12:07,940
喜欢那部电影。

174
00:12:08,230 --> 00:12:14,050
但是现在的问题是，我们是否可以通过使用一些先验知识来证明结果。

175
00:12:14,050 --> 00:12:21,610
这就是为什么该算法在新人群中被称为先验Ken的原因，所以我们只推荐ex machina

176
00:12:21,880 --> 00:12:24,220
给已经看过星际的人。

177
00:12:24,280 --> 00:12:29,260
因此，在此人口中被标记为绿色的人，所以我们只会找出。

178
00:12:29,260 --> 00:12:34,030
我们只问您是否看过星际，然后他们会推荐下一台机器的可能性是多少

179
00:12:34,330 --> 00:12:38,580
如果我们这样推荐的话，一个人实际上会喜欢ex machina。

180
00:12:38,620 --> 00:12:45,350
那么在这种情况下，我们从绿色人群中算出的可能性不仅是在绿色人群中

181
00:12:45,350 --> 00:12:49,510
年仅17％的受访者实际上很喜欢ex machina。

182
00:12:49,690 --> 00:12:55,220
因此，提升是您预测的改进。

183
00:12:55,330 --> 00:12:59,950
因此，如果您只是随便带一个人，那么您最初的预测是欧洲政客的10％对

184
00:12:59,950 --> 00:13:04,510
从您的新人群中推荐他们喜欢的下一个任务，可能性为10％

185
00:13:05,050 --> 00:13:09,850
如果您先问这个问题，您是否看过并喜欢星际游戏。

186
00:13:10,000 --> 00:13:15,740
如果他们回答“是”，那么您会向您推荐在中国成功推荐的可能性

187
00:13:15,760 --> 00:13:17,190
是百分之十七点五。

188
00:13:17,320 --> 00:13:21,600
因此，根据定义，举升是1点75。

189
00:13:21,610 --> 00:13:22,000
好了

190
00:13:22,000 --> 00:13:26,110
这就是电梯的定义。

191
00:13:26,500 --> 00:13:31,640
这几乎就是整个先验算法所涉及的步骤。

192
00:13:31,660 --> 00:13:40,570
现在，我们将通过一种逐步的方法将所有内容放在一起，因此第一步

193
00:13:40,570 --> 00:13:43,860
需要建立起最低限度的支持和信任权。

194
00:13:43,870 --> 00:13:48,860
所以您只想因为有太多不同的建议。

195
00:13:48,870 --> 00:13:55,720
我们只看了一个例子，一个特定的例子来简化我们谈论过的关于ex machina和

196
00:13:56,230 --> 00:13:56,800
星际。

197
00:13:56,800 --> 00:14:02,050
但是正如您在前面的示例中看到的那样，您可能会喜欢100部不同的电影，

198
00:14:02,050 --> 00:14:09,220
先验组合实际上是一个很慢的算法，因为它会经历所有这些不同的过程

199
00:14:09,250 --> 00:14:14,590
所有这些不同组合的算法，因此它说如果一部电影是不错的推荐该怎么办

200
00:14:14,590 --> 00:14:20,080
从一部电影到一部电影，意味着一个人会喜欢我，而一个人则意味着一个像电影的个人，三

201
00:14:20,380 --> 00:14:25,630
一部电影四部，然后实际上结合了更多，并说电影《你和电影》可能意味着

202
00:14:25,630 --> 00:14:27,520
个人喜欢电影3等。

203
00:14:27,510 --> 00:14:30,300
因此，它实际上结合了很多很多微调。

204
00:14:30,550 --> 00:14:32,050
不是三胞胎。

205
00:14:32,080 --> 00:14:38,370
就像它将四五个六七个项目合为一组，依此类推。

206
00:14:38,750 --> 00:14:46,120
因此它变得很大，因此您需要设置某种限制，因此需要设置一个

207
00:14:46,120 --> 00:14:46,950
最低支持。

208
00:14:46,960 --> 00:14:55,350
例如，您可能不想查看支持率低于20％的产品

209
00:14:55,360 --> 00:15:01,770
您甚至可能不想考虑它们，因为您不想浪费时间为某些事物建立模型

210
00:15:01,770 --> 00:15:07,050
单靠成功率只有20％。

211
00:15:07,080 --> 00:15:15,630
因此，或者您可能限制为5％，那么您可能还希望限制其置信度，因此在我们的示例中

212
00:15:15,840 --> 00:15:18,200
会议是正确的百分之十七点。

213
00:15:18,210 --> 00:15:23,970
那就是喜欢某部电影的人会喜欢另一部电影的人，也许您可​​能想要限制

214
00:15:23,970 --> 00:15:28,590
少于12％。

215
00:15:28,590 --> 00:15:34,770
您不想看它，因为它不是足够强大的事实，因为您还不够强大

216
00:15:34,770 --> 00:15:40,160
为您服务，因为此算法的输出将有很多不同的规则。

217
00:15:40,180 --> 00:15:44,490
您已经知道自己将拥有更强大的能力，因此您不想考虑任何比这更小的能力

218
00:15:44,490 --> 00:15:50,370
超过您在该特定情况下要设置的12％或20％或任何百分比。

219
00:15:50,850 --> 00:15:56,940
然后，一旦设置了这些，就将交易中所有子集的支持程度都高于最小需求。

220
00:15:57,360 --> 00:15:59,840
那么最小的Sopore会采用子集的所有规则。

221
00:15:59,850 --> 00:16:03,820
具有较高的置信度和平均参加会议的态度，基本上会将其应用于您设置的下限。

222
00:16:04,050 --> 00:16:08,540
然后在课程的最后，按照递减的升序对规则进行排序。

223
00:16:08,550 --> 00:16:10,110
这就是电梯的来历。

224
00:16:10,230 --> 00:16:17,310
根据这些标准，最高升力规则将是最强规则，那就是

225
00:16:17,310 --> 00:16:19,390
您可能要研究第一个权利。

226
00:16:19,470 --> 00:16:25,770
就像我不知道某人是否购买汉堡和薯条，那么他们可能会购买番茄

227
00:16:25,770 --> 00:16:27,730
调味酱或番茄酱。

228
00:16:27,930 --> 00:16:32,630
而且因为您知道，有时候这是很有意义的，因为您需要番茄酱

229
00:16:32,970 --> 00:16:38,580
很多人喜欢吃汉堡和薯条，所以忙着找

230
00:16:38,580 --> 00:16:43,330
最高的升程，是前十名或前五名中的那些，您认为的是

231
00:16:43,330 --> 00:16:48,630
实际执行业务决策并将其立足于此。

232
00:16:48,840 --> 00:16:52,900
因此，这几乎就是先验算法的工作原理。

233
00:16:53,130 --> 00:16:57,060
这是一个很长的故事，但是我认为我们在这里玩得很开心。

234
00:16:57,170 --> 00:17:02,340
这是我想与您分享的另一个例子。

235
00:17:02,860 --> 00:17:03,350
好。

236
00:17:03,360 --> 00:17:09,540
因此，我只想提及推荐系统，例如Amazon News和

237
00:17:09,570 --> 00:17:18,030
其他人和Netflix等，它们就像是一个好东西，或者它们将是一个很好的例子

238
00:17:18,300 --> 00:17:19,370
使用先验。

239
00:17:19,360 --> 00:17:25,110
先验会在那很好，但是当然它们不仅比先验还要复杂得多。

240
00:17:25,110 --> 00:17:33,900
他们实际上使用组合是非常特定或专门设计的算法，所以我只是不

241
00:17:33,900 --> 00:17:35,860
希望您对先验感到困惑。

242
00:17:35,980 --> 00:17:37,480
这意味着一切都使用祈祷。

243
00:17:37,550 --> 00:17:43,460
祈祷只是解决此问题的一种基本直接方法。

244
00:17:43,470 --> 00:17:50,060
这是一个很好的例子，您知道如何做到，但是当然还有其他方法可以做到。

245
00:17:50,060 --> 00:17:55,560
例如，我们将看看其他一些方法，实际上是我们

246
00:17:55,560 --> 00:17:59,580
已经使用的也可以用于构建推荐系统。

247
00:17:59,580 --> 00:17:59,850
好吧。

248
00:17:59,850 --> 00:18:01,260
因此，请注意。

249
00:18:01,450 --> 00:18:10,170
感谢您的关注，然后我们去吃午餐，看看如何在我们的Python中编写先验代码

250
00:18:10,290 --> 00:18:11,610
下次再见。

251
00:18:11,610 --> 00:18:13,160
在此之前，我们乐于分析。

