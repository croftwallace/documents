1
00:00:00,210 --> 00:00:02,410
您好，欢迎来到Tauriel艺术。

2
00:00:02,670 --> 00:00:07,680
因此，在预览过程中，我们先导入数据集，然后再进行数据预处理

3
00:00:07,680 --> 00:00:13,590
阅读器函数的方式，但随后我们解释了我们需要创建一个包含以下内容的稀疏矩阵

4
00:00:13,650 --> 00:00:18,900
整个一周内在商店中发生的所有交易并建立稀疏矩阵，我们

5
00:00:18,900 --> 00:00:24,480
用于读取包含r.m重复项参数的交易功能，以删除所有重复项

6
00:00:24,780 --> 00:00:29,980
而这个解析矩阵正是我们在数据集上训练先验模型所需要的。

7
00:00:30,090 --> 00:00:34,060
这就是我们将在本教程中制定的规则。

8
00:00:34,110 --> 00:00:35,240
如果我能这么说。

9
00:00:35,560 --> 00:00:41,790
好的，现在借助艾弗利（Avril）的软件包，培训将变得非常简单，因为我们将

10
00:00:41,790 --> 00:00:47,690
使用一个函数，该函数被称为只有两个参数的先验函数。

11
00:00:47,760 --> 00:00:48,680
因此，让我们开始吧。

12
00:00:48,690 --> 00:00:54,900
我们将创建一个新变量，并将其称为规则，因为该变量将包含在某些变量中。

13
00:00:54,900 --> 00:00:58,350
解决我们业务问题的不同规则。

14
00:00:58,350 --> 00:01:04,680
因此，这里的规则然后等于，这就是我们将先验函数与不同参数一起使用的地方

15
00:01:04,680 --> 00:01:05,040
。

16
00:01:05,040 --> 00:01:11,250
因此，我们将放置两个参数，第一个参数将是我们的数据集，第二个参数

17
00:01:11,250 --> 00:01:17,790
将成为参数参数，其中将包含最小支持和选择的选择

18
00:01:17,790 --> 00:01:19,130
充满信心的支持。

19
00:01:19,320 --> 00:01:20,660
因此，让我们看一下这些参数。

20
00:01:20,660 --> 00:01:26,700
我要在这里按一下，这里有一些有关主要功能的信息。

21
00:01:26,700 --> 00:01:29,130
如您所见，第一个参数是数据。

22
00:01:29,140 --> 00:01:30,400
因此，让我们说吧。

23
00:01:30,400 --> 00:01:33,130
现在，这是最容易输入的参数。

24
00:01:33,160 --> 00:01:38,390
因此，数据等于数据集，然后出现，然后是第二个参数。

25
00:01:38,700 --> 00:01:45,610
所以第二个参数是参数，正如这里写的，参数是AP类参数的对象

26
00:01:45,630 --> 00:01:45,800
。

27
00:01:45,810 --> 00:01:52,800
因此，此对象将包含我们将设定的最小支持和最小置信度

28
00:01:52,980 --> 00:01:59,400
并且我们还可以在Maxton给出的规则中指定您要包含的最大项目数。

29
00:01:59,400 --> 00:02:04,740
实际上，还可以包括一个最小值，该最小值指定了所需的最小产品数量

30
00:02:04,740 --> 00:02:07,340
纳入您的规则，但我们实际上并不需要。

31
00:02:07,380 --> 00:02:11,370
我们将不可避免地需要支持和信心。

32
00:02:11,370 --> 00:02:14,610
因此，让我们在此处改进该参数。

33
00:02:15,000 --> 00:02:18,890
我们需要在此参数中包括支持和信心。

34
00:02:18,960 --> 00:02:24,660
按照以下方式，我们将使用list函数，然后我们将在此列表中输入

35
00:02:24,660 --> 00:02:26,160
支持和信心。

36
00:02:26,250 --> 00:02:31,050
所以我将在此处添加两个参数，然后我们将看到为这两个参数输入什么值

37
00:02:31,050 --> 00:02:32,790
论点。

38
00:02:32,790 --> 00:02:33,270
好吧。

39
00:02:33,390 --> 00:02:38,940
因此，让我们看一下有关apriori算法的直觉教程的幻灯片，然后看看

40
00:02:38,940 --> 00:02:41,000
此算法的不同步骤。

41
00:02:41,130 --> 00:02:45,870
因此，您可以看到的第一步是设置最低限度的支持和信心。

42
00:02:45,880 --> 00:02:48,600
所以这正是我们现在要做的。

43
00:02:48,600 --> 00:02:55,020
我们处于先验算法的第一步，其中包括选择报告和置信度

44
00:02:55,040 --> 00:02:55,300
。

45
00:02:55,530 --> 00:02:59,960
因此，选择支持和信心不是一般规则。

46
00:03:00,000 --> 00:03:04,970
我们无法用明确的方程式表达支持或信心。

47
00:03:05,220 --> 00:03:07,470
它实际上取决于业务问题本身。

48
00:03:07,470 --> 00:03:09,420
这实际上取决于您的目标。

49
00:03:09,420 --> 00:03:11,750
与您的业务问题有关的目标。

50
00:03:11,850 --> 00:03:16,590
它还取决于您的数据集的数量以及您拥有的项目数。

51
00:03:16,710 --> 00:03:23,130
因此，这取决于不同的情况，这些情况不允许我们就如何

52
00:03:23,130 --> 00:03:24,880
计算会议中的支持。

53
00:03:24,900 --> 00:03:30,360
但是请放心，当我们解释如何计算会议的支持时，这将很有意义

54
00:03:30,360 --> 00:03:34,310
在这里，您将可以将其应用于您的业务问题。

55
00:03:34,740 --> 00:03:39,350
好的，让我们从支持第一组项目开始。

56
00:03:39,420 --> 00:03:42,980
等于这组项目中包含的交易数量。

57
00:03:42,990 --> 00:03:49,290
我除以交易总数，然后我们在这里输入的支持参数实际上是

58
00:03:49,290 --> 00:03:51,870
您想要在规则中获得的最低支持。

59
00:03:51,870 --> 00:03:58,620
这意味着您规则中将要显示的项目将获得比此项目更高的支持

60
00:03:58,620 --> 00:04:01,380
最小的支持和信心。

61
00:04:01,620 --> 00:04:07,380
因此，我们必须问自己：支持什么？我们是否希望将所有不同的物品放在

62
00:04:07,380 --> 00:04:13,320
规则，以便规则具有相关性，因为例如，如果我们返回到这里的图

63
00:04:13,320 --> 00:04:16,230
这是100个观察。

64
00:04:16,230 --> 00:04:22,050
如果我们将其缩放得很好，我们可以看到我们有很多产品不是很频繁地预购

65
00:04:22,290 --> 00:04:27,390
在这些特定产品中，其他产品支持不多，因为一些交易包含这些

66
00:04:27,390 --> 00:04:28,320
产品在这里。

67
00:04:28,320 --> 00:04:33,180
因此，当您将包含该产品的交易次数除以交易总数时

68
00:04:33,510 --> 00:04:38,890
那么您将获得少量支持，并且您会知道，因为这些产品并非经常预购，

69
00:04:38,910 --> 00:04:43,810
与优化问题不太相关，因为您知道我们要优化销售。

70
00:04:43,830 --> 00:04:45,250
那就是我们要优化的。

71
00:04:45,250 --> 00:04:46,760
滚是收入。

72
00:04:46,890 --> 00:04:51,960
并且由于收入是不同数量产品的线性组合，因此系数

73
00:04:51,960 --> 00:04:53,830
实际上是这些产品的价格。

74
00:04:53,940 --> 00:04:59,220
为了优化收入，我们需要在此处优化这些产品的销售，

75
00:04:59,220 --> 00:05:04,200
通常是预购商品，而不是这里的这些产品。

76
00:05:04,200 --> 00:05:11,100
因此，我们在这里需要选择的是仅包含左侧产品的支持。

77
00:05:11,440 --> 00:05:14,870
此垂直条将对应于最小支撑。

78
00:05:14,880 --> 00:05:21,130
举例来说，假设y轴上的值是0 5。

79
00:05:21,200 --> 00:05:25,980
这意味着该垂直条左侧的所有产品的支撑都将高于

80
00:05:25,980 --> 00:05:27,380
0.05。

81
00:05:27,410 --> 00:05:33,590
因此，如果我们将最低支持设置为0.05，则规则将仅包含的不同乘积

82
00:05:33,600 --> 00:05:36,120
这是竖线的左侧。

83
00:05:36,380 --> 00:05:38,100
因此，现在如何选择支持。

84
00:05:38,220 --> 00:05:43,320
好吧，我们需要经常查看预购产品，例如至少三四个

85
00:05:43,310 --> 00:05:44,510
一天的时间。

86
00:05:44,510 --> 00:05:46,960
同样，这取决于您的业务目标。

87
00:05:47,040 --> 00:05:52,890
但是可以肯定的是，如果我们设法找到有关购买物品的严格规定，至少

88
00:05:52,920 --> 00:05:58,650
一天三到四次，然后将它们关联起来并将它们放在一起，客户将变得更多

89
00:05:58,640 --> 00:06:03,630
可能会将它们放在篮子里，因此将购买更多这些产品，因此

90
00:06:03,620 --> 00:06:05,150
销售将增加。

91
00:06:05,160 --> 00:06:09,950
因此，这将是我们如何设置最低支持的起点。

92
00:06:10,010 --> 00:06:11,700
我们将考虑产品。

93
00:06:11,730 --> 00:06:16,890
每天至少进行三到四次预选，然后我们将研究规则，当然

94
00:06:16,880 --> 00:06:20,980
如果我们不遵守规则，我们将更改此支持价值。

95
00:06:21,000 --> 00:06:23,100
这就是我们使用先验模型的方式。

96
00:06:23,100 --> 00:06:28,790
您知道我们会尝试不同的值来支持不同的置信度值，直到我们满意为止

97
00:06:28,800 --> 00:06:31,020
规则，直到我们认为这是有道理的。

98
00:06:31,110 --> 00:06:35,600
而且您知道我们也可以在一段时间内尝试这些规则，然后再看一下

99
00:06:35,610 --> 00:06:41,070
对收入的影响，如果我们没有看到销售收入的有意义的增长，我们以后可以

100
00:06:41,060 --> 00:06:46,590
更改支持和信心以更改规则，然后再次体验，直到找到

101
00:06:46,590 --> 00:06:49,260
销售中最严格的规则。

102
00:06:49,290 --> 00:06:51,210
这实际上就是现实生活中发生的事情。

103
00:06:51,240 --> 00:06:56,070
但是，当然，在这些教程中，我们将尝试每天购买三四次的产品

104
00:06:56,080 --> 00:06:56,190
。

105
00:06:56,340 --> 00:06:57,830
因此，我们将看到发生了什么。

106
00:06:57,980 --> 00:06:58,500
好的。

107
00:06:58,560 --> 00:07:04,340
所以实际上我们没有设置支持，但我们只是决定看一下产品或预先购买

108
00:07:04,350 --> 00:07:10,230
一天三到四次，但这会很快导致我们支持，因为如果某产品是

109
00:07:10,230 --> 00:07:16,430
假设每天购买3次，这意味着它是预追3次，即7次等于一周21次

110
00:07:16,460 --> 00:07:16,700
。

111
00:07:16,940 --> 00:07:22,200
并且由于支持是此产品中包含的交易数量超过

112
00:07:22,200 --> 00:07:28,530
交易，由于有7500笔交易，因此我们获得的最低支持等于

113
00:07:28,520 --> 00:07:32,250
7500的7倍。

114
00:07:32,460 --> 00:07:35,060
因此，让我在这里写下来解释一下。

115
00:07:35,060 --> 00:07:35,820
那么好吧。

116
00:07:35,850 --> 00:07:39,190
我们说过，我们考虑过一天购买3次的产品。

117
00:07:39,260 --> 00:07:44,720
那是三周，因为一周内记录了交易总数。

118
00:07:44,750 --> 00:07:49,430
这意味着，如果我们考虑一天三次预购的产品，则意味着或预购

119
00:07:49,440 --> 00:07:52,950
平均每周7次3次。

120
00:07:52,950 --> 00:07:59,940
所以这三乘以七等于21这是该产品包含的交易数量，但是

121
00:07:59,940 --> 00:08:02,240
在整个一周中每天进行三次。

122
00:08:02,550 --> 00:08:09,230
现在我们需要除以交易总数，以获得最低支持和

123
00:08:09,240 --> 00:08:15,960
交易数量实际上是七千五百，这个值在这里

124
00:08:15,960 --> 00:08:22,920
计算无非是一天购买3次的产品的支持。

125
00:08:23,270 --> 00:08:26,520
而且您知道我们希望我们的规则仅考虑产品。

126
00:08:26,690 --> 00:08:28,530
每天至少3次。

127
00:08:28,620 --> 00:08:34,320
因此，我们规则中的所有产品都将比它们在此处要提供的支持更高的支持。

128
00:08:34,320 --> 00:08:34,960
计算。

129
00:08:35,070 --> 00:08:36,200
因此，让我们计算一下。

130
00:08:36,210 --> 00:08:37,540
让我们找出它是什么。

131
00:08:37,640 --> 00:08:41,310
这就是我们在此处为该支持参数提供的值。

132
00:08:41,310 --> 00:08:45,720
所以现在我只需要按Enter键，那就是打开的值。

133
00:08:45,870 --> 00:08:46,820
哦28

134
00:08:46,830 --> 00:08:49,530
我们将其舍入为0 1 0 3。

135
00:08:49,800 --> 00:08:56,500
因此，这是我们的规则将考虑的对产品的最小支持。

136
00:08:56,510 --> 00:09:00,830
因此，让我们将自己的观点设为0 3。

137
00:09:01,250 --> 00:09:01,550
好的。

138
00:09:01,560 --> 00:09:03,140
这就是支持。

139
00:09:03,140 --> 00:09:08,150
现在，第二个子类型是第一步：设置最小置信度。

140
00:09:08,220 --> 00:09:14,050
因此，对信心的选择仍然取决于业务问题，但主要取决于您的业务目标

141
00:09:14,060 --> 00:09:14,320
。

142
00:09:14,340 --> 00:09:19,710
因此，我们现在要做的是不会像计算计算出的支持那样计算置信度

143
00:09:19,710 --> 00:09:27,330
从默认值开始，然后逐步降低置信度，直到我们得到一些相关的

144
00:09:27,330 --> 00:09:32,060
规则，因为您知道信心是任意选择。

145
00:09:32,100 --> 00:09:37,310
我们不想拥有过高的信心，因为如果我们获得过高的信心，我们将变得显而易见

146
00:09:37,400 --> 00:09:42,480
您知道的规则我们不需要机器学习算法即可了解需要在哪里

147
00:09:42,480 --> 00:09:44,230
将产品彼此相邻放置。

148
00:09:44,340 --> 00:09:50,340
而且我们不应该过分自信，因为如果我们过分自信，我们将会得到一些

149
00:09:50,420 --> 00:09:55,630
像你这样的胡说八道，我要买巧克力我要买洗发水。

150
00:09:55,670 --> 00:09:58,220
那是胡说八道，没有任何意义。

151
00:09:58,380 --> 00:10:02,160
这就是我们将其卖给小信心时会得到的那种规则。

152
00:10:02,150 --> 00:10:06,540
因此，我们将从默认值为0.8开始。

153
00:10:06,560 --> 00:10:08,170
我想我们会看看。

154
00:10:08,180 --> 00:10:15,590
我们可以回过头来帮助您查看说明，以及是否需要有关这两个信息

155
00:10:15,600 --> 00:10:17,820
这里的论点支持和信心。

156
00:10:17,820 --> 00:10:22,320
我们需要做的是单击此AP参数，这里是类。

157
00:10:22,430 --> 00:10:23,480
现在我们开始。

158
00:10:23,510 --> 00:10:29,640
这为您提供了参数参数的先验信息，Ekla和Clydes另一个模型

159
00:10:29,630 --> 00:10:31,960
这将在本节之后进行。

160
00:10:32,100 --> 00:10:38,670
如您所见，我们获得了有关其他论点的支持和信心的信息。

161
00:10:38,660 --> 00:10:43,160
因此，这些实际上是先验论证和云论论证。

162
00:10:43,350 --> 00:10:49,800
在下面，您还有一些仅适用于养蜂场的附加参数，因为您会看到Ekla

163
00:10:49,830 --> 00:10:55,680
算法对其算法没有信心，仅考虑支持。

164
00:10:55,730 --> 00:10:57,090
我们都看到了。

165
00:10:57,200 --> 00:11:00,770
但是现在，我们真正感兴趣的是信心。

166
00:11:01,050 --> 00:11:04,660
您会看到完整值为0.8。

167
00:11:04,700 --> 00:11:07,650
这就是我们将要开始的内容。

168
00:11:07,700 --> 00:11:10,340
我并不是说我们会得到一些有趣的结果。

169
00:11:10,500 --> 00:11:15,980
您已经可以想象得到什么，因为0.08是非常高的置信度。

170
00:11:16,050 --> 00:11:22,050
尝试猜测高置信度0.8会得到什么，并担心我们会将其除以2来尝试一些

171
00:11:22,050 --> 00:11:25,200
较小的置信度，直到我们获得一些相关规则。

172
00:11:25,470 --> 00:11:30,810
好的，这样实际上就可以使用仅包含这两个参数的单行代码

173
00:11:30,810 --> 00:11:36,020
数据集和此参数，此处具有最小支持和最小置信度。

174
00:11:36,170 --> 00:11:44,520
我们在数据集上训练预重构，因此让我们选择这一行并执行。

175
00:11:44,560 --> 00:11:50,680
接下来，我们创建先验模型，并通过规则创建方式。

176
00:11:50,930 --> 00:11:52,640
因此，让我们在这里查看信息。

177
00:11:52,660 --> 00:11:58,770
好的，那是先验模型，这里我们有此参数实参的默认参数

178
00:11:58,760 --> 00:11:59,580
这里。

179
00:11:59,580 --> 00:12:06,600
因此，我们可以看到，我们对艾滋病的信心最低，支持最低，为0.03

180
00:12:06,600 --> 00:12:08,370
有篮子的中间人。

181
00:12:08,370 --> 00:12:13,440
这意味着我们将考虑的一揽子规则将至少包含一种产品。

182
00:12:13,530 --> 00:12:18,010
好吧，我们实际上可以设置为至少扮演两个角色。

183
00:12:18,090 --> 00:12:20,000
我们将看看是否有问题。

184
00:12:20,040 --> 00:12:25,310
但是到目前为止，我们需要最重要的论据来改善我们的支持和信心。

185
00:12:25,700 --> 00:12:26,270
好的。

186
00:12:26,390 --> 00:12:29,150
因此对于我们来说，算法控制不是很重要。

187
00:12:29,150 --> 00:12:34,850
现在有点高级了，在这里我们得到了一些其他有趣的信息。

188
00:12:35,070 --> 00:12:41,370
当您在此处查看时，最重要的信息是实际上可以看到的规则数量为零

189
00:12:41,370 --> 00:12:42,320
这里的规则。

190
00:12:42,360 --> 00:12:49,070
这意味着当我们在此处训练先验模型时，该模型实际上发现了零法则。

191
00:12:49,400 --> 00:12:50,950
而且你能猜出为什么。

192
00:12:51,330 --> 00:12:57,280
当然，它是用来选择我们的最低良心的，因为通过设置此最低置信度

193
00:12:57,390 --> 00:13:04,450
0.8表示我们的先验算法制定的所有规则的置信度都高于0.8。

194
00:13:04,470 --> 00:13:05,760
那是什么意思。

195
00:13:05,750 --> 00:13:11,960
这意味着每个规则至少应在80％的交易中正确。

196
00:13:12,030 --> 00:13:17,540
因此，有80％的比例很高，这意味着该规则必须至少五次达到四次。

197
00:13:17,610 --> 00:13:24,820
这就是为什么我们发现零规则的最小置信度为0.8，因为至少没有规则是真的

198
00:13:24,840 --> 00:13:26,650
财富的行动有五个。

199
00:13:26,930 --> 00:13:28,390
这就是我告诉你的。

200
00:13:28,430 --> 00:13:30,140
我们可以从默认值开始。

201
00:13:30,160 --> 00:13:35,650
但是由于我们有很多交易和很多产品，客户可以预购。

202
00:13:35,930 --> 00:13:40,630
当然，我们需要设置较小的置信度，因此我们将其除以2。

203
00:13:40,760 --> 00:13:42,840
因此，我们现在将尝试0.4。

204
00:13:42,920 --> 00:13:44,680
现在让我们看看我们得到了什么。

205
00:13:44,690 --> 00:13:47,030
因此，让我们真正执行这一行。

206
00:13:47,040 --> 00:13:52,810
它将在数据集上重新训练操作模型，并重新创建一些新规则。

207
00:13:52,830 --> 00:13:53,430
开始了。

208
00:13:53,420 --> 00:13:57,150
现在我们有281条规则要好得多。

209
00:13:57,140 --> 00:13:58,460
因此，这是一种缓解。

210
00:13:58,500 --> 00:14:02,700
现在，我们当然要做的就是看看规则本身。

211
00:14:02,710 --> 00:14:05,080
我们将目视看到规则是什么。

212
00:14:05,100 --> 00:14:09,590
因此，我们将确切地看到哪些产品应该彼此相邻放置，并且我们将看到

213
00:14:09,600 --> 00:14:11,240
最强的关联规则。

214
00:14:11,250 --> 00:14:15,520
如果他们购买其他产品，我们将看到Prak客户预购的产品。

215
00:14:15,600 --> 00:14:20,940
因此，我们将非常清楚地看到所有这些内容，这就是我们将在Teutul Psylocke旁边做的事情

216
00:14:20,930 --> 00:14:23,000
期待与您一起发现这些规则。

217
00:14:23,020 --> 00:14:24,750
直到那时，乔机器学习

