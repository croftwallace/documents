1
00:00:00,270 --> 00:00:02,790
您好，欢迎来到本Python教程。

2
00:00:02,880 --> 00:00:08,610
因此，在上一个教程中，我们导入了数据集，最重要的是，我们构建了整个

3
00:00:08,610 --> 00:00:13,110
包含商店中不同客户的所有不同交易的交易。

4
00:00:13,170 --> 00:00:19,320
总体而言，这实际上就是这七千五百个交易清单

5
00:00:19,320 --> 00:00:25,080
一个列出每个列表，其中包含不同交易的不同产品。

6
00:00:25,080 --> 00:00:28,590
因此，如果我们再次打开它，那就是整个列表。

7
00:00:28,590 --> 00:00:35,030
如您所见，此列表包含715个列表，所有列表都在此处

8
00:00:35,250 --> 00:00:38,670
每个清单对应一个交易。

9
00:00:38,670 --> 00:00:45,390
因此，例如，此列表对应于一笔交易，其中一些火鸡和鳄梨被放入

10
00:00:45,390 --> 00:00:48,330
篮，由客户购买。

11
00:00:48,330 --> 00:00:48,920
好。

12
00:00:48,930 --> 00:00:53,920
这样很好，我们需要构建整个列表。

13
00:00:53,930 --> 00:01:00,050
交易以这种方式构造的有价值的价值，仅仅是因为那是我们的主要功能

14
00:01:00,060 --> 00:01:03,540
即将使用作为输入。

15
00:01:03,690 --> 00:01:08,850
因此，现在我们都很好，我们准备在我们的数据集上训练合适的模型。

16
00:01:08,940 --> 00:01:10,110
因此，让我们开始吧。

17
00:01:10,110 --> 00:01:15,390
我们要做的第一件事实际上是导入先验函数。

18
00:01:15,390 --> 00:01:20,620
提醒一下，我们的工作目录文件夹包含此盗版行为。

19
00:01:20,910 --> 00:01:23,980
为什么文件包含一些类和函数。

20
00:01:24,150 --> 00:01:30,960
我们实际上将从这个野牛文件中导入一个先验函数，而不是导入一些

21
00:01:30,960 --> 00:01:35,890
开源库中的类或函数，就像我们以前在这里所做的那样。

22
00:01:35,900 --> 00:01:40,440
我们将直接从此Pyrate导入功能，然后添加到您的妻子和文件中。

23
00:01:40,620 --> 00:01:41,630
因此，让我们开始吧。

24
00:01:41,640 --> 00:01:43,370
它实际上是相同的语法。

25
00:01:43,380 --> 00:01:52,440
像往常一样，我们将从火热的导入开始做，这就是我们导入Priory函数本身的地方

26
00:01:52,860 --> 00:01:55,030
这就是所谓的先验。

27
00:01:55,530 --> 00:01:58,610
现在我们可以使用和使用该功能了。

28
00:01:58,740 --> 00:02:00,140
因此，让我们开始吧。

29
00:02:00,190 --> 00:02:07,890
实际上，我们将直接声明一个称为rules的变量，因为它将是

30
00:02:07,890 --> 00:02:10,590
主要功能的某种方式。

31
00:02:10,710 --> 00:02:17,580
主要功能将交易作为输入，并将规则作为输出。

32
00:02:18,000 --> 00:02:24,970
因此，规则等于我们在其中使用“先验”和括号的功能。

33
00:02:24,970 --> 00:02:28,860
现在，在此先验函数中，我们需要输入参数。

34
00:02:28,860 --> 00:02:31,640
因此，让我们看一下这些参数是什么。

35
00:02:31,830 --> 00:02:36,580
因此，要做到这一点，我们将要做的就是按press命令。

36
00:02:36,610 --> 00:02:40,290
在这里获得有关主要功能的一些信息。

37
00:02:40,500 --> 00:02:41,370
在这里。

38
00:02:41,370 --> 00:02:47,180
因此，先验函数采用一个主要参数即交易。

39
00:02:47,190 --> 00:02:49,920
这正是我们在这里构建的。

40
00:02:49,920 --> 00:02:57,720
通过构建7500个列表的整个列表，您知道了与一个事务对应的每个列表。

41
00:02:57,750 --> 00:02:59,320
所以这是主要论点。

42
00:02:59,490 --> 00:03:01,610
因此，让我们现在就说吧。

43
00:03:01,920 --> 00:03:07,180
因此，作为第一个参数，我们输入了转弯动作。

44
00:03:07,200 --> 00:03:13,560
因此，例如，如果您在此处输入包含交易的数据集，则该数据集不会

45
00:03:13,560 --> 00:03:18,230
工作正常，您将无法获得规则，因为我们将如何获得这些规则。

46
00:03:18,300 --> 00:03:23,100
这就是为什么以这种方式构建交易数据集以使一切正常的原因非常重要

47
00:03:23,100 --> 00:03:23,670
好。

48
00:03:24,050 --> 00:03:24,440
好的。

49
00:03:24,480 --> 00:03:31,200
现在我们有一些关键字参数，当您使用先验时，这些参数非常重要

50
00:03:31,200 --> 00:03:37,580
您的业​​务问题的模型，因为这些参数实际上取决于您的业务问题

51
00:03:37,590 --> 00:03:44,400
当然，这取决于您的数据集您在数据集中拥有的观测数量

52
00:03:44,640 --> 00:03:50,910
无论您有1000个交易还是100000个交易，您的最低支持都将不同

53
00:03:50,910 --> 00:03:51,220
。

54
00:03:51,360 --> 00:03:53,750
信心和左派也一样。

55
00:03:53,760 --> 00:03:56,300
因此，让我们看看我们在哪里获得了最低限度的支持。

56
00:03:56,310 --> 00:04:01,040
这就是先验模型的本质，我们必须设置一个最低限度的支持。

57
00:04:01,140 --> 00:04:03,030
这样我们便有了最小的信心。

58
00:04:03,090 --> 00:04:08,910
当我们需要设置最小置信度然后具有最小置信度时，它也是先验模型的一部分

59
00:04:08,910 --> 00:04:09,520
电梯。

60
00:04:09,540 --> 00:04:15,630
因此这是一个非常重要的论点，因为左手是力量和力量的最佳标准之一。

61
00:04:15,630 --> 00:04:17,260
规则的相关性。

62
00:04:17,460 --> 00:04:23,700
然后，我们在这里有了这个max length参数，该参数允许我们设置最大项目数

63
00:04:23,700 --> 00:04:25,080
希望遵守我们的规则。

64
00:04:25,080 --> 00:04:30,250
实际上还有另一个参数，但是这里没有指定，它是主要长度

65
00:04:30,250 --> 00:04:30,350
。

66
00:04:30,360 --> 00:04:36,120
当然，这种中等长度的参数允许我们设置想要拥有的最小产品数量

67
00:04:36,120 --> 00:04:36,840
在我们的规则中。

68
00:04:36,870 --> 00:04:41,580
所以我们实际上将要使用它，因为您知道我们至少要在两者之间建立一些关联

69
00:04:41,790 --> 00:04:43,300
两种不同的产品。

70
00:04:43,590 --> 00:04:46,800
好的，让我们输入以下几个参数。

71
00:04:46,860 --> 00:04:52,640
因此，第一个是最低支持人员强调支持。

72
00:04:52,650 --> 00:04:53,070
好吧。

73
00:04:53,070 --> 00:05:00,330
我们将很快解释我们希望为该参数输入什么值，然后我们将置信度降至最低

74
00:05:00,390 --> 00:05:02,760
男人有信心。

75
00:05:02,760 --> 00:05:05,130
同样，我们将看到我们要为此付出什么价值。

76
00:05:05,130 --> 00:05:06,970
我们将在几分钟后解释。

77
00:05:07,110 --> 00:05:08,130
然后我们有什么。

78
00:05:08,130 --> 00:05:18,780
我们有一些人，左有右，有最小有左，然后我们也有很多长度，刚才提到

79
00:05:19,020 --> 00:05:24,170
我们已经知道，我们希望交易中的篮子中最少有两种产品。

80
00:05:24,330 --> 00:05:27,350
因此，我们将其直接设置为两个。

81
00:05:27,690 --> 00:05:33,090
这是为了防止只有一项的规则实际上并不赚很多钱

82
00:05:33,090 --> 00:05:33,960
感。

83
00:05:34,020 --> 00:05:34,680
很好。

84
00:05:34,680 --> 00:05:40,890
现在我们需要确定最小支持的值，最小置信度和最小

85
00:05:40,890 --> 00:05:41,760
电梯。

86
00:05:41,760 --> 00:05:47,280
好吧，让我们从支持的角度开始，我等于一组项目的支持

87
00:05:47,280 --> 00:05:49,750
这组项目中包含的交易。

88
00:05:49,770 --> 00:05:56,070
我除以交易总数，然后我们在这里输入的支持参数实际上是

89
00:05:56,070 --> 00:05:58,650
您想要在规则中获得的最低支持。

90
00:05:58,650 --> 00:06:05,400
这意味着您规则中将要显示的项目将获得比此项目更高的支持

91
00:06:05,400 --> 00:06:06,810
这里的最低支持。

92
00:06:06,810 --> 00:06:13,110
所以我们必须问自己是什么支持我们是否想在规则中包含不同的项目

93
00:06:13,350 --> 00:06:16,920
从而使规则具有相关性，并向他们展示如何选择支持。

94
00:06:17,010 --> 00:06:22,110
好吧，我们需要经常查看预购产品，例如至少三四个

95
00:06:22,110 --> 00:06:23,060
一天的时间。

96
00:06:23,340 --> 00:06:25,750
同样，这取决于您的业务目标。

97
00:06:25,830 --> 00:06:31,710
但是可以肯定的是，如果我们设法找到有关购买物品的严格规定，至少

98
00:06:31,710 --> 00:06:37,440
一天三到四次，然后将它们关联起来并将它们放在一起，客户将变得更多

99
00:06:37,440 --> 00:06:42,420
可能会将它们放在篮子里，因此将购买更多这些产品，因此

100
00:06:42,420 --> 00:06:43,940
销售将增加。

101
00:06:43,950 --> 00:06:49,740
因此，这将是我们将要设定的最低支持量的起点

102
00:06:49,740 --> 00:06:50,540
产品。

103
00:06:50,550 --> 00:06:55,100
每天至少要进行三到四次预追，然后再看规则。

104
00:06:55,140 --> 00:06:59,770
当然，如果我们不相信规则，我们将改变这种支持的价值。

105
00:06:59,790 --> 00:07:01,890
这就是我们使用先验模型的方式。

106
00:07:01,890 --> 00:07:07,590
您知道我们会尝试不同的值来支持不同的置信度值，直到我们满意为止

107
00:07:07,590 --> 00:07:09,710
规则，直到我们认为这是有道理的。

108
00:07:09,900 --> 00:07:13,510
而且您知道我们也可以在一定时间内尝试这些规则。

109
00:07:13,680 --> 00:07:18,210
然后，如果我们查看对收入的影响，并且我们没有发现

110
00:07:18,210 --> 00:07:24,000
销售收入，我们以后可以更改支持和信心，以更改规则，然后体验

111
00:07:24,000 --> 00:07:28,060
直到找到最优化销售的最强规则。

112
00:07:28,080 --> 00:07:29,970
这实际上就是现实生活中发生的事情。

113
00:07:30,030 --> 00:07:34,860
但是，当然，在这些教程中，我们将尝试每天购买三四次的产品

114
00:07:34,870 --> 00:07:34,990
。

115
00:07:35,130 --> 00:07:36,620
因此，我们将看到发生了什么。

116
00:07:36,770 --> 00:07:37,220
好的。

117
00:07:37,350 --> 00:07:43,140
所以实际上我们没有设置支持，但我们只是决定要看产品还是预购买

118
00:07:43,140 --> 00:07:48,900
每天至少三到四次，但这会很快导致我们获得支持，因为如果有产品

119
00:07:48,900 --> 00:07:54,810
假设每天购买三次，这意味着它是预购三遍，七遍等于21次

120
00:07:54,810 --> 00:07:55,490
周。

121
00:07:55,740 --> 00:08:00,990
并且由于支持是该产品中交易内容的数量超过

122
00:08:00,990 --> 00:08:06,600
交易，由于有七千五百笔交易，因此我们获得的支持最少

123
00:08:06,600 --> 00:08:11,030
等于七千五百的七倍。

124
00:08:11,250 --> 00:08:13,860
因此，让我在这里写下来解释一下。

125
00:08:13,870 --> 00:08:14,620
那么好吧。

126
00:08:14,640 --> 00:08:18,000
我们说过，我们认为一天要进行三遍预购的产品。

127
00:08:18,060 --> 00:08:23,400
那是三周，因为一周内记录了交易总数。

128
00:08:23,540 --> 00:08:27,750
这意味着，如果我们考虑一天三遍预购的产品，那就意味着它们

129
00:08:27,780 --> 00:08:31,690
平均每周要进行7次前追逐。

130
00:08:31,740 --> 00:08:38,940
所以这三乘以七等于21这是包含该产品的交易数量，但是三

131
00:08:38,940 --> 00:08:45,750
整周的一天时间，现在我们需要除以交易总数

132
00:08:45,870 --> 00:08:52,100
这个最小的支持和交易总数实际上是七千五百。

133
00:08:52,560 --> 00:08:59,610
而我们将要计算的此值无非是对以下产品的支持：

134
00:08:59,610 --> 00:09:01,920
每天追赶3次。

135
00:09:02,070 --> 00:09:07,380
而且您知道我们希望我们的规则仅考虑每天至少有3次的产品。

136
00:09:07,410 --> 00:09:13,110
因此，我们规则中的所有产品都将比它们在此处要提供的支持更高的支持。

137
00:09:13,110 --> 00:09:13,750
计算。

138
00:09:13,860 --> 00:09:16,330
因此，让我们计算一下它是什么。

139
00:09:16,440 --> 00:09:20,100
这就是我们在此处为该支持参数提供的值。

140
00:09:20,100 --> 00:09:25,610
所以现在我只需要按Enter键，那就是28的值。

141
00:09:25,620 --> 00:09:28,350
我们将其舍入为0 1 0 3。

142
00:09:28,590 --> 00:09:35,310
因此，这是我们的规则将考虑的对产品的最小支持。

143
00:09:35,310 --> 00:09:38,280
好的，让我们在这里输入最低限度的支持。

144
00:09:38,490 --> 00:09:47,610
好的支撑等于0点0 3，这将是我们认为合适的最小值

145
00:09:47,760 --> 00:09:49,650
对于我们的业务问题。

146
00:09:49,650 --> 00:09:51,540
好的，这样的支持。

147
00:09:51,540 --> 00:09:54,540
现在，让我们继续最小的信心。

148
00:09:54,540 --> 00:10:02,080
因此，在本期中，按照我们的教程进行操作，先验模型在称为Rolls的程序包中实现

149
00:10:02,340 --> 00:10:06,560
并且此程序包包含一些置信度的默认值。

150
00:10:06,570 --> 00:10:13,650
所以我们要做的是从默认值0.8开始，然后我们意识到有两个明显的

151
00:10:13,650 --> 00:10:16,440
规则，因为信心太高。

152
00:10:16,470 --> 00:10:22,890
您知道开放8的信心意味着规则必须在80％的时间内正确无误

153
00:10:22,890 --> 00:10:26,060
在五分之四的案例中，有80％是案例。

154
00:10:26,250 --> 00:10:32,220
因此，您当然会得到其中一些规则，就像您得到一些包含一些最重要产品的规则一样

155
00:10:32,220 --> 00:10:33,680
总体预购。

156
00:10:33,750 --> 00:10:38,940
因此，它们是一起追逐的，并不是因为它们之间的关联性很好，而仅仅是因为每个

157
00:10:38,940 --> 00:10:41,850
产品是大多数预购产品之一。

158
00:10:41,910 --> 00:10:44,300
所以他们最终落在同一个篮子里。

159
00:10:44,370 --> 00:10:49,500
并非出于正确的原因，不是因为它们很好地结合在一起，而是因为它们是追赶者

160
00:10:49,500 --> 00:10:50,180
时间。

161
00:10:50,340 --> 00:10:51,700
因此，我举一个例子。

162
00:10:51,720 --> 00:10:56,880
您知道法国南部的商店，并且您知道这些交易是在

163
00:10:56,880 --> 00:11:02,070
夏天，由于法国南部非常炎热，夏天人们买了很多矿物

164
00:11:02,070 --> 00:11:02,690
水。

165
00:11:02,730 --> 00:11:07,260
实际上，这是商店矿泉水中最多的预购产品。

166
00:11:07,440 --> 00:11:12,870
但是后来法国人购买了很多X-2，因为法国人非常喜欢煎蛋卷，因为他们

167
00:11:12,870 --> 00:11:18,150
买很多矿泉水和很多鸡蛋你知道很多不同顾客的篮子

168
00:11:18,150 --> 00:11:22,130
会同时含有矿泉水和鸡蛋，因为它们会大量购买这些鸟类。

169
00:11:22,140 --> 00:11:27,210
但这不是因为他们购买了一些水所以他们需要一些鸡蛋，或者不是因为他们购买了

170
00:11:27,210 --> 00:11:29,230
一些鸡蛋，他们需要一些水。

171
00:11:29,280 --> 00:11:34,720
这两种产品之间没有逻辑关联，这就是为什么它不太相关的原因。

172
00:11:34,950 --> 00:11:38,820
不幸的是，如果我们将信任度设置得太高，我们将得到什么。

173
00:11:38,820 --> 00:11:46,680
所以0.08是否过高的置信度，此外我们注意到0.8的置信度实际上并没有

174
00:11:46,680 --> 00:11:51,260
得到任何规则，因为没有规则在80％的时间内都是正确的。

175
00:11:51,270 --> 00:11:56,540
因此，我们之后所做的是将80％的默认置信度除以2。

176
00:11:56,610 --> 00:11:57,970
所以我们得到了40％。

177
00:11:58,140 --> 00:12:04,110
这就是我们意识到有两个明显的规则，例如我刚才给您提供的规则

178
00:12:04,380 --> 00:12:08,800
您知道矿泉水和鸡蛋或所有同类规则。

179
00:12:09,000 --> 00:12:15,790
因此，我们再次将置信度除以2，以获得20％的置信度。

180
00:12:15,810 --> 00:12:21,450
并考虑数据集的七千五百笔交易和我们的业务问题

181
00:12:21,450 --> 00:12:28,020
随着业务发展顺利，我们得出的结论是，这是最低置信度的正确选择

182
00:12:28,130 --> 00:12:35,610
最低置信度为0.2 20％，最低支持度为0.03，这实际上是一个好选择

183
00:12:35,610 --> 00:12:39,090
结合并给了我们相关规则。

184
00:12:39,090 --> 00:12:46,290
因此，我们将为最小置信度选择相同的值，即我们将输入20％

185
00:12:46,380 --> 00:12:47,470
0.2。

186
00:12:47,810 --> 00:12:53,130
好的，这是最小支持和最小置信度的良好选择组合

187
00:12:53,150 --> 00:12:53,420
。

188
00:12:53,650 --> 00:12:54,060
好的。

189
00:12:54,150 --> 00:12:57,270
因此，现在我们要输入最后一个值。

190
00:12:57,310 --> 00:12:59,830
它用于左参数。

191
00:12:59,880 --> 00:13:06,690
同样，在这里我们可以尝试不同的最小升力值，但我们希望有一些

192
00:13:06,840 --> 00:13:13,070
如果我们得到一些高于3的规则，则至少留下3的规则。

193
00:13:13,200 --> 00:13:18,420
好吧，这些实际上是一些好的规则，因为您知道左边是对相关性的深刻理解

194
00:13:18,420 --> 00:13:19,970
和统治的力量。

195
00:13:20,040 --> 00:13:25,310
而且您知道我们希望找到一些椭圆形为四，五，甚至六的规则。

196
00:13:25,320 --> 00:13:31,050
因此，让我们将此最小提升量设置为3，以便我们了解一些相关规则。

197
00:13:31,050 --> 00:13:36,030
希望我们能通过这些参数组合得到一些有趣的规则。

198
00:13:36,020 --> 00:13:37,870
这看起来实际上很好。

199
00:13:37,920 --> 00:13:43,100
请记住，这取决于您的业务问题，取决于数据集中观测值的数量。

200
00:13:43,140 --> 00:13:45,060
那就是您的交易数量。

201
00:13:45,060 --> 00:13:48,900
因此，您可能会花一点时间在此选择上。

202
00:13:49,200 --> 00:13:50,620
这里的论点。

203
00:13:51,240 --> 00:13:51,540
好。

204
00:13:51,540 --> 00:13:55,520
因此，我们实际上已准备好在数据集上训练先验模型。

205
00:13:55,590 --> 00:13:56,570
因此，让我们开始吧。

206
00:13:56,580 --> 00:14:03,780
我们只需要在这里选择所有这些代码部分，然后按命令或控制执行百分比

207
00:14:03,880 --> 00:14:04,160
。

208
00:14:04,380 --> 00:14:08,520
在这里，我们正确地进行了先验模型训练。

209
00:14:08,520 --> 00:14:09,610
好吧，太好了。

210
00:14:09,690 --> 00:14:14,760
这实际上是本教程的结尾，因为我们在本教程中要做的是

211
00:14:14,760 --> 00:14:20,960
令人兴奋的一步，我们将可视化结果，清楚地看到规则是什么。

212
00:14:21,090 --> 00:14:27,930
因此，我们将有一些明确的规则告诉我们，如果某些客户购买得当，他们会

213
00:14:27,930 --> 00:14:33,420
也会以信心给定的一定百分比机会购买此产品。

214
00:14:33,420 --> 00:14:33,810
好吧。

215
00:14:33,810 --> 00:14:36,160
因此，我期待着看看这些规则。

216
00:14:36,210 --> 00:14:38,490
在那之前我希望学习

