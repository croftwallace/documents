1
00:00:00,330 --> 00:00:03,000
您好，欢迎来到本Python教程。

2
00:00:03,000 --> 00:00:08,580
因此，在上一个故事中，我们通过将人工神经网络定义为以下序列来初始化人工神经网络：

3
00:00:08,580 --> 00:00:09,230
层。

4
00:00:09,420 --> 00:00:15,600
现在，在新的工作中，我们将添加我们的第一层，然后是输入

5
00:00:15,600 --> 00:00:18,190
层和第一个隐藏层。

6
00:00:18,210 --> 00:00:24,000
好的，但是在我们这样做之前，让我们刷新回忆，以提醒我们有关

7
00:00:24,120 --> 00:00:27,300
如何建立人工神经网络。

8
00:00:27,300 --> 00:00:28,500
这是幻灯片。

9
00:00:28,530 --> 00:00:34,290
这是直觉教程的幻灯片，我们可以看到已经建立了一个人工神经网络

10
00:00:34,350 --> 00:00:35,760
分七个步骤。

11
00:00:35,760 --> 00:00:42,420
第一步是将每个节点的权重随机初始化为接近

12
00:00:42,420 --> 00:00:42,960
零。

13
00:00:43,170 --> 00:00:48,570
因此，这要归功于我们从此密集模块中获取的密集函数，我们

14
00:00:48,570 --> 00:00:49,890
先前已导入。

15
00:00:49,890 --> 00:00:55,680
因此，基本上，我们将要使用的这个密集函数将负责第一步

16
00:00:55,800 --> 00:00:56,550
下一步。

17
00:00:56,640 --> 00:01:02,360
我们的第一条观察绳进入了神经网络，正如我们在这一步中看到的，每个特征

18
00:01:02,360 --> 00:01:04,190
将进入一个输入节点。

19
00:01:04,230 --> 00:01:08,990
所以我们已经知道我们将有一个输入层的节点数量，这个数量无非是

20
00:01:09,000 --> 00:01:12,350
特征矩阵中自变量的数量。

21
00:01:12,510 --> 00:01:16,170
那么这个数字是11个独立变量。

22
00:01:16,320 --> 00:01:20,440
因此，这意味着在我们的输入层中，我们将有11个输入注释。

23
00:01:20,460 --> 00:01:23,040
然后，第三步是传播。

24
00:01:23,040 --> 00:01:28,410
因此，从左到右，神经元被激活功能激活，使得更高的

25
00:01:28,410 --> 00:01:33,630
激活函数的值对于神经元而言，将对神经元产生更大的影响

26
00:01:33,720 --> 00:01:34,750
在网络中。

27
00:01:34,770 --> 00:01:40,080
这意味着它将更多地将信号从左侧的节点传递到右侧的音符。

28
00:01:40,350 --> 00:01:45,090
所以说激活功能，这将在本教程中定义的第一隐藏办

29
00:01:45,210 --> 00:01:50,850
层是选择激活功能，并提醒您有几个激活功能。

30
00:01:50,970 --> 00:01:56,490
基于实验和研究的最佳选择是整流器功能

31
00:01:56,490 --> 00:01:57,530
看到这里。

32
00:01:57,570 --> 00:02:04,620
我们也有这个Sigmoid函数，因为使用了Sigmoid函数，因此它对于输出层非常有用

33
00:02:04,620 --> 00:02:09,930
输出层将使我们能够得到不同的段，将得到的概率

34
00:02:10,140 --> 00:02:15,300
每种观察甚至是新观察的经典观察的概率

35
00:02:15,300 --> 00:02:17,940
我们进行预测时的测试集。

36
00:02:17,940 --> 00:02:22,200
因此，这意味着对于测试集的每次观察，我们将获得客户

37
00:02:22,200 --> 00:02:25,540
离开银行以及客户留在银行的可能性。

38
00:02:25,590 --> 00:02:30,540
很好，因为正如curial在解释模型时所解释的那样，我们正在尝试建立一个

39
00:02:30,540 --> 00:02:36,060
分割模型并通过将概率事物带到S型激活函数

40
00:02:36,060 --> 00:02:41,670
输出层那么我们将能够看到哪些客户最有可能离开

41
00:02:41,670 --> 00:02:42,180
银行。

42
00:02:42,390 --> 00:02:48,360
因此，我们甚至可以根据客户离开网站的可能性对他们进行排名。

43
00:02:48,360 --> 00:02:48,800
银行。

44
00:02:48,930 --> 00:02:50,150
因此这可能非常有用。

45
00:02:50,160 --> 00:02:54,510
然后，您可以根据客户离开银行的可能性对他们进行细分。

46
00:02:54,510 --> 00:02:58,920
并根据您决定在业务约束和业务目标方面进行的工作。

47
00:02:58,920 --> 00:03:04,250
好的，总结一下，我们将为隐藏层选择整流器激活功能，我们将

48
00:03:04,290 --> 00:03:07,620
为输出层选择S型激活函数。

49
00:03:07,860 --> 00:03:14,280
好的，然后是步骤4步骤4，算法会将预测结果与实际结果进行比较，

50
00:03:14,280 --> 00:03:15,740
会产生错误。

51
00:03:15,870 --> 00:03:21,150
然后在步骤5中，此错误会从右到左在所有神经网络中传播回来，

52
00:03:21,150 --> 00:03:26,280
权重根据它们对产生的错误负责的程度进行更新。

53
00:03:26,400 --> 00:03:31,050
顺便说一下，有几种更新这些权重的方法，这种方法由学习

54
00:03:31,050 --> 00:03:34,770
比率参数，该参数决定权重的日期。

55
00:03:34,980 --> 00:03:35,340
好吧。

56
00:03:35,340 --> 00:03:41,400
然后是步骤6，在每次观察之后或在

57
00:03:41,400 --> 00:03:47,220
像这样的批处理观测值，例如，我们对进入网络的每10个观测值进行加权，

58
00:03:47,220 --> 00:03:53,580
当整个火车通过空中时，最后执行步骤7，然后产生影响，我们重复

59
00:03:53,670 --> 00:03:57,680
还有更多的Epoque，最后我们会看多少本书。

60
00:03:57,720 --> 00:04:02,520
好的，那是我们如何使用随机训练人工神经网络的快速入门

61
00:04:02,520 --> 00:04:03,660
从这个意义上讲。

62
00:04:03,660 --> 00:04:09,460
因此，现在让我们在此处执行此步骤以添加输入层和第一个隐藏层。

63
00:04:09,840 --> 00:04:15,330
好吧，所以我们要做的第一件事就是使用分类器对我们初始化的分类

64
00:04:15,330 --> 00:04:18,790
通过创建顺序类的对象来完成上一步。

65
00:04:18,900 --> 00:04:23,960
现在，我们将使用该对象的方法，即add方法。

66
00:04:24,090 --> 00:04:29,940
正如您可能已经猜到的，该方法是我们用来在我们的图层中添加不同图层的方法

67
00:04:29,940 --> 00:04:31,070
神经网络。

68
00:04:31,080 --> 00:04:35,120
因此，请记住，对象与方法之间用点分隔。

69
00:04:35,130 --> 00:04:36,020
开始了。

70
00:04:36,060 --> 00:04:39,390
如您所见，此列表上的第一个方法是at。

71
00:04:39,480 --> 00:04:41,130
所以我只需要按Enter。

72
00:04:41,130 --> 00:04:41,860
开始了。

73
00:04:41,980 --> 00:04:47,190
现在，我们添加一些括号，看看需要在此add方法中添加什么。

74
00:04:47,430 --> 00:04:52,620
因此，如您所见，此处出现了黄色矩形，只有一个参数，而这个参数是

75
00:04:52,620 --> 00:04:56,490
要添加到CNN的图层。

76
00:04:56,520 --> 00:05:01,820
因此，如您在本节的标题中所看到的，我们将在输入层中添加两层

77
00:05:01,910 --> 00:05:03,190
和第一个隐藏层。

78
00:05:03,380 --> 00:05:07,690
我们要感谢我之前提到的跳舞功能。

79
00:05:07,820 --> 00:05:12,120
所以现在我们要输入舞曲，然后输入一些括号。

80
00:05:12,290 --> 00:05:17,360
如您所见，现在有很多参数，因此我们将添加不同的参数

81
00:05:17,360 --> 00:05:22,080
密集函数和这些参数将成为我们在幻灯片上可以看到的所有参数。

82
00:05:22,160 --> 00:05:24,210
这就是加权的过时方法。

83
00:05:24,290 --> 00:05:29,380
我们使用什么激活函数？我们要在层中选择多少个节点

84
00:05:29,630 --> 00:05:31,530
输入节点的数量是多少

85
00:05:31,640 --> 00:05:35,150
好吧，这个Den函数中的所有事情都在这里发生。

86
00:05:35,210 --> 00:05:39,710
因此，让我们按一下此处可以更好地了解我们需要输入的内容。

87
00:05:39,720 --> 00:05:42,940
来吧，我需要得到帮助。

88
00:05:42,980 --> 00:05:46,440
这为我们提供了需要输入的所有不同参数。

89
00:05:46,520 --> 00:05:48,660
好的，让我们看一下第一个参数。

90
00:05:48,660 --> 00:05:50,620
输出第一个参数。

91
00:05:50,690 --> 00:05:51,300
暗淡。

92
00:05:51,420 --> 00:05:53,100
OK，那么输出什么。

93
00:05:53,210 --> 00:05:57,410
这就是您要在此隐藏层中添加的节点数。

94
00:05:57,590 --> 00:06:03,920
因为更确切地说，此功能的作用是不在第一层中添加输入层。

95
00:06:03,920 --> 00:06:10,370
它真正的作用是添加此隐藏层，并通过添加此隐藏层来指定数字

96
00:06:10,370 --> 00:06:13,450
上一层（即输入层）中的输入数。

97
00:06:13,610 --> 00:06:20,700
因此，这里的输出只是我们要在此函数中添加的层的节点数。

98
00:06:20,720 --> 00:06:23,490
这就是隐藏层的节点数。

99
00:06:23,600 --> 00:06:28,660
现在最大的问题是要在此隐藏层中添加多少个节点。

100
00:06:28,850 --> 00:06:33,500
这是一个大问题，深度学习您将在论坛或深度学习中遇到很多类似的问题

101
00:06:33,500 --> 00:06:34,500
讨论。

102
00:06:34,580 --> 00:06:38,020
大多数时候，答案就是艺术。

103
00:06:38,240 --> 00:06:43,890
确实，在此隐藏层中最佳注释数没有经验法则。

104
00:06:44,000 --> 00:06:49,010
我们可以给出一些规则，例如，如果您的数据是线性可分离的，那么您甚至不需要

105
00:06:49,010 --> 00:06:52,220
隐藏层，实际上您甚至不需要神经网络。

106
00:06:52,430 --> 00:06:54,040
但是我们比这更好。

107
00:06:54,140 --> 00:06:57,420
我通常不会将其描述为小费。

108
00:06:57,530 --> 00:07:01,420
这个步骤不是基于理论，而是基于实验。

109
00:07:01,670 --> 00:07:06,650
此步骤是选择隐藏层中的节点数作为节点数的平均值

110
00:07:06,650 --> 00:07:11,700
输入层中的大小和输出层中要使用的类型的节点数。

111
00:07:11,750 --> 00:07:17,330
如果你不想成为一个艺术家，如果你想成为一个艺术家，你必须做好什么实验

112
00:07:17,540 --> 00:07:24,200
使用一种称为参数kuning的技术，参数chinning是关于使用某些技术（例如K4交叉验证）的

113
00:07:24,200 --> 00:07:30,680
例如，它将研究重要的道德选择，符号模型以及这些K4交叉验证

114
00:07:30,680 --> 00:07:34,550
技术包括在数据集中创建一个单独的集合。

115
00:07:34,580 --> 00:07:38,870
除了训练集中的训练集外，还包括验证集。

116
00:07:38,870 --> 00:07:43,270
基本上，在这个集合中，您可以试验模型的不同参数。

117
00:07:43,280 --> 00:07:47,460
因此通常情况下，隐藏层的数量以及手和层中节点的数量。

118
00:07:47,480 --> 00:07:51,410
然后，使用不同的参数测试不同模型的性能。

119
00:07:51,530 --> 00:07:56,720
因此，我们不会花一个小时的睡眠时间，因为我们想专注于人工神经网络，但要保持

120
00:07:56,720 --> 00:08:01,640
请记住并记住，我们将部分进行调酒，这将有助于我们选择

121
00:08:01,640 --> 00:08:04,050
我们模型的最佳参数。

122
00:08:04,100 --> 00:08:08,060
但是目前，我们将采取此步骤，即取节点中的平均节点数。

123
00:08:08,060 --> 00:08:10,990
输入层和输出层中的许多节点。

124
00:08:11,090 --> 00:08:16,760
所以这就是如果我回到varry，我们将在输入层的节点数为11时进行探索，因为

125
00:08:16,760 --> 00:08:20,360
层中节点的数量是bin和变量中的数量。

126
00:08:20,360 --> 00:08:26,450
所以11和输出层中的节点数是1，因为正如您在Carol的直觉教程中所见

127
00:08:26,570 --> 00:08:29,860
当因变量的二进制结果为1或0时。

128
00:08:29,900 --> 00:08:35,740
嗯，在输出层中只有一个节点，因此平均值为11加一除以二，

129
00:08:35,750 --> 00:08:37,780
隐藏层中有六个节点。

130
00:08:37,970 --> 00:08:41,930
这就是我们将在此处为输出参数选择的内容。

131
00:08:42,050 --> 00:08:50,080
因此，这里我们要结束的第一个参数是输出等于6的参数。

132
00:08:50,090 --> 00:08:50,450
好吧。

133
00:08:50,460 --> 00:08:59,130
现在，下一个参数在其下一个参数中，因此对应于获得评分的步骤之一

134
00:08:59,130 --> 00:08:59,960
在这个意义上。

135
00:09:00,000 --> 00:09:05,280
因此，我们现在要做的是将权重随机初始化为接近零的小数字。

136
00:09:05,430 --> 00:09:09,110
因此，我们可以使用统一函数随机初始化它们。

137
00:09:09,110 --> 00:09:11,620
在这里，我们看到有发光的红色制服。

138
00:09:11,730 --> 00:09:14,700
这是一种用于初始化权重的统一函数。

139
00:09:14,820 --> 00:09:19,980
而且我们甚至更简单，有一个简单的统一函数将初始化权重

140
00:09:20,100 --> 00:09:22,100
根据均匀分布。

141
00:09:22,230 --> 00:09:25,770
此外，还要确保权重是接近零的小数字。

142
00:09:25,980 --> 00:09:29,000
好的，让我们在其中添加第二个参数。

143
00:09:29,010 --> 00:09:34,050
在这里，我们在报价方面一视同仁。

144
00:09:34,200 --> 00:09:40,080
现在在第三个参数中问您，第三个参数是激活参数，它是

145
00:09:40,080 --> 00:09:44,110
当然，我们要在隐藏层中选择激活功能。

146
00:09:44,280 --> 00:09:49,770
因此，正如我刚才所解释的，我们将选择对隐藏层和

147
00:09:49,850 --> 00:09:52,640
输出层的S型激活功能。

148
00:09:52,800 --> 00:09:59,450
所以在这里，因为我们处于隐藏层，所以我们将在此处输入激活值，实际上

149
00:09:59,450 --> 00:10:05,360
与此可纠正函数相对应的参数称为“真的是您”。

150
00:10:05,360 --> 00:10:05,660
好吧。

151
00:10:05,660 --> 00:10:08,420
因此，让我们看看这里是否包含所有参数。

152
00:10:08,510 --> 00:10:14,780
我们指定了隐藏层中的节点数，我们指定了初始化方法，并指定了

153
00:10:14,840 --> 00:10:16,250
激活功能。

154
00:10:16,280 --> 00:10:22,930
如果我现在选择此行，然后按Enter键执行，则会出现此引发异常错误。

155
00:10:23,120 --> 00:10:23,920
为什么是这样。

156
00:10:23,930 --> 00:10:28,950
这是因为在这里还必须输入另一个隐藏的参数。

157
00:10:29,150 --> 00:10:34,300
好吧，我想您可能会猜到它实际上是输入参数是什么。

158
00:10:34,550 --> 00:10:40,100
即使它显示为此处的最后一个论点，这实际上也是强制性的，因为

159
00:10:40,100 --> 00:10:41,390
这个说法是什么。

160
00:10:41,390 --> 00:10:46,920
此参数是输入层中节点的数量，即自变量的数量。

161
00:10:47,000 --> 00:10:49,450
以及为什么必须加上这个论点。

162
00:10:49,450 --> 00:10:54,890
在这个阶段是因为到目前为止，人工神经网络都只是简单地初始化了。

163
00:10:55,070 --> 00:10:56,980
我们尚未创建任何图层。

164
00:10:57,200 --> 00:11:03,710
这就是为什么它在这里不知道是谁指出了我们正在创建的这个隐藏层的原因

165
00:11:03,950 --> 00:11:05,110
作为输入。

166
00:11:05,120 --> 00:11:07,740
这就是为什么我们必须在此处指定此参数的原因。

167
00:11:07,880 --> 00:11:10,140
但是，当您添加其他一些隐藏层时。

168
00:11:10,280 --> 00:11:16,850
好吧，由于已经创建了第一层，因此我们需要为

169
00:11:16,850 --> 00:11:21,680
下一个隐藏层，因为既然已经创建了第一个隐藏层，则下一个隐藏层将

170
00:11:21,680 --> 00:11:23,870
知道会发生什么。

171
00:11:23,870 --> 00:11:31,820
好吧，让我们在这里添加最后一个计算机参数，即输入值和分数，以及

172
00:11:31,820 --> 00:11:36,180
等于11，因为我们有11个独立变量。

173
00:11:36,380 --> 00:11:38,600
好的，现在我们可以执行了。

174
00:11:38,600 --> 00:11:39,890
它应该工作正常。

175
00:11:40,130 --> 00:11:42,980
因此，我们将选择幻灯片并执行。

176
00:11:43,040 --> 00:11:49,010
正如您所看到的，我们的第一个隐藏层和输入层都非常好

177
00:11:49,100 --> 00:11:51,140
在人工神经网络中。

178
00:11:51,140 --> 00:11:52,110
那么完美。

179
00:11:52,130 --> 00:11:57,590
现在我们准备好进行下一步，即添加一个新的隐藏层，说实话

180
00:11:57,590 --> 00:12:02,360
不一定对我们的数据集有用，但由于两个原因，我们还是要添加它。

181
00:12:02,360 --> 00:12:07,160
首先，因为这部分称为深度学习，而深度学习被定义为人为的

182
00:12:07,160 --> 00:12:09,190
具有许多隐藏层的神经网络。

183
00:12:09,320 --> 00:12:14,110
第二个原因仅仅是您需要在神经网络中添加更多隐藏层。

184
00:12:14,120 --> 00:12:15,770
好吧，您需要知道如何做。

185
00:12:16,010 --> 00:12:18,420
这就是你将学会如何在接下来的教程做什么。

186
00:12:18,440 --> 00:12:20,170
在此之前，请享受机器学习。

