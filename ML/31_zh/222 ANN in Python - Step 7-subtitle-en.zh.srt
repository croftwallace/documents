1
00:00:00,240 --> 00:00:02,490
您好，欢迎使用Python教程。

2
00:00:02,700 --> 00:00:08,850
因此，在之前的两个教程中，我们在输入层的第一层和第二层中添加了三层

3
00:00:08,850 --> 00:00:09,730
隐藏层。

4
00:00:09,810 --> 00:00:13,340
现在，在此详细信息中，我们将添加输出层。

5
00:00:13,530 --> 00:00:20,400
再次，这将非常容易，因为我们只需要在此处复制前一行并粘贴

6
00:00:20,400 --> 00:00:22,530
在这里和现在改变一些事情。

7
00:00:22,530 --> 00:00:24,470
因此，尝试猜测我们将要发生的变化。

8
00:00:24,470 --> 00:00:26,160
这很简单。

9
00:00:26,160 --> 00:00:31,020
我们需要更改的第一件事当然是输出参数，因为我们的输出中当然有

10
00:00:31,020 --> 00:00:36,990
层我们只需要一个节点，因为我们的因变量是具有二进制结果的绝对恐怖

11
00:00:37,160 --> 00:00:42,570
如果客户留在银行，则为0；如果客户离开银行，并且当我们有二进制文件时，则为0

12
00:00:42,570 --> 00:00:45,260
结果，输出层中只有一个节点。

13
00:00:45,420 --> 00:00:49,670
因此，在这里我们需要输入等于1的输出。

14
00:00:49,920 --> 00:00:56,820
太好了，我们将保留此统一的初始化方法，该方法仍用于初始化权重

15
00:00:56,970 --> 00:00:58,960
来自第二个隐藏层。

16
00:00:59,130 --> 00:01:04,860
但是，如果您还记得我在之前的教程中所说的话，那么请继续讲第三个论点

17
00:01:04,860 --> 00:01:09,430
在这里更改激活功能，因为现在我们在输出层。

18
00:01:09,600 --> 00:01:15,300
而且由于我们正在建立G人口细分模型，因此我们希望获得结果的概率

19
00:01:15,750 --> 00:01:19,660
因为我们希望每个客户都有回头率。

20
00:01:19,690 --> 00:01:25,800
因此，为了获得此概率，我们需要替换此激活函数，即整流器

21
00:01:25,800 --> 00:01:31,950
通过S型激活函数激活函数，因为记住逻辑回归直觉

22
00:01:31,950 --> 00:01:34,180
Carol和第3部分提供的教程。

23
00:01:34,230 --> 00:01:39,870
乙状结肠功能是这种概率方法的核心，这要归功于乙状结肠

24
00:01:39,870 --> 00:01:45,060
我们设法在逻辑回归模型中获得一些概率的函数

25
00:01:45,060 --> 00:01:50,180
如果我们选择一个S型激活函数，则这里的原理是完全相同的。

26
00:01:50,190 --> 00:01:56,430
所以在这里，我们将用Sigmoid和

27
00:01:56,430 --> 00:02:00,930
如果您要处理具有两个以上类别的因变量，例如：

28
00:02:00,930 --> 00:02:04,770
例如三个类别，那么您将需要在此处更改两件事。

29
00:02:04,770 --> 00:02:10,680
首先是输出参数，您将知道它被设置为类数，因为它将

30
00:02:10,680 --> 00:02:15,440
基于“一对多”方法，而因变量是“一”且已编码。

31
00:02:15,600 --> 00:02:19,880
因此，如果要在变量中包含三个类别，则需要在此处输入三个。

32
00:02:20,010 --> 00:02:25,080
第二件事是您需要更改的激活功能

33
00:02:25,080 --> 00:02:31,860
会是软的Max，而Soughed Max实际上是Sigma函数，但应用于因变量

34
00:02:31,860 --> 00:02:33,830
具有两个以上的类别。

35
00:02:33,960 --> 00:02:38,310
因此，请记住，如果在工作中您要处理的因变量具有超过

36
00:02:38,310 --> 00:02:43,140
需要选择两个类别，例如三个或四个类别，才能选择soft max函数。

37
00:02:43,140 --> 00:02:45,690
但是这里我们有两类两类。

38
00:02:45,690 --> 00:02:50,780
因此，我们可以像使用逻辑回归一样使用S型函数。

39
00:02:50,780 --> 00:02:55,650
好吧，基本上我们已经准备好了，准备添加输出层，最终是最后一个

40
00:02:55,650 --> 00:02:57,400
神经网络的一层

41
00:02:57,420 --> 00:02:58,440
那真是令人兴奋。

42
00:02:58,440 --> 00:03:02,980
这意味着我们已经很好地构建了神经网络，然后需要对其进行编译。

43
00:03:03,090 --> 00:03:06,450
但是基本上我们已经完成了添加所有不同层的操作。

44
00:03:06,450 --> 00:03:09,430
因此，我们将最后一层添加到输出层。

45
00:03:09,630 --> 00:03:14,150
因此，我将选择此行，然后按命令控制键并输入到Exiguus。

46
00:03:14,160 --> 00:03:17,820
在这里，我们成功地添加了输出层。

47
00:03:17,820 --> 00:03:23,640
太好了，现在我们可以继续进行下一步了，即编译人工神经

48
00:03:23,640 --> 00:03:28,680
网络也将非常容易，因为这将只需要一行代码，因此我们将

49
00:03:28,680 --> 00:03:31,940
在仅次于机器的情况下，在厕所旁边进行操作

