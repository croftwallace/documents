1
00:00:00,240 --> 00:00:02,440
您好，欢迎来到本Python教程。

2
00:00:02,640 --> 00:00:07,840
现在，让我们进入克隆过程的下一步。

3
00:00:07,920 --> 00:00:12,370
因此提醒一下，词干是关于单词的路径。

4
00:00:12,420 --> 00:00:15,850
因此，举例来说，我给你一个“爱”一词。

5
00:00:16,050 --> 00:00:19,720
好吧，实际上这是第一篇评论，它将关注第一篇评论。

6
00:00:19,920 --> 00:00:26,880
好吧，您在这里有最后一个字，它是爱情动词和词干处理的过去式

7
00:00:26,880 --> 00:00:33,770
包括只保留真正的爱这个词的词根，因为我们是否曾经爱过

8
00:00:33,900 --> 00:00:36,430
或在评论中会喜欢或会喜欢。

9
00:00:36,600 --> 00:00:43,020
好吧，它给出了相同的提示，即评论是正面的还是负面的，因此我们不需要这个词

10
00:00:43,110 --> 00:00:46,110
在过去或将来或现在共轭。

11
00:00:46,140 --> 00:00:49,880
我们只需要这个词的词根就可以了。

12
00:00:49,890 --> 00:00:54,790
因为如果我们保留同一单词的所有不同版本，则意味着同一件事。

13
00:00:54,900 --> 00:00:59,790
好吧，问题在于，最终在稀疏矩阵中，我们将有大量的单词，因此庞大

14
00:00:59,790 --> 00:01:05,630
稀疏性，因此我们的算法将难以运行，因为我们只会拥有太多列

15
00:01:05,640 --> 00:01:11,160
因为最后您会知道在稀疏矩阵中每个单词都有自己的列。

16
00:01:11,190 --> 00:01:13,980
这就是为什么我们在这里进行一些简化。

17
00:01:14,130 --> 00:01:20,370
这种简化是有意义的，因为不同的版本对应于相同的根爱

18
00:01:20,370 --> 00:01:25,230
无论评论是肯定的还是负面的，这里都会给算法带来相同的提示。

19
00:01:25,440 --> 00:01:28,500
因此，让我们继续进行Demming。

20
00:01:28,500 --> 00:01:29,750
那很重要。

21
00:01:29,880 --> 00:01:33,310
并且请记住，这样做是为了避免过多的稀疏性。

22
00:01:33,510 --> 00:01:38,160
如果您对这种稀疏概念不太满意，请不要犹豫，在

23
00:01:38,170 --> 00:01:38,800
问与答。

24
00:01:38,850 --> 00:01:40,570
我会很快答复。

25
00:01:41,160 --> 00:01:43,800
好的，让我们在这里对我们的评论进行修饰。

26
00:01:43,800 --> 00:01:50,190
所以我们要做的就是直接在此处和for循环中应用词干，因为您知道何时

27
00:01:50,190 --> 00:01:56,640
我们将刺激实际上应用在一个单词上，而不是整个列表上

28
00:01:56,640 --> 00:01:57,960
现在是我们的评论。

29
00:01:57,960 --> 00:02:04,470
因此，我们要做的是包含该词干函数，该词干函数将继续进行Stebbing操作并仅保留

30
00:02:04,470 --> 00:02:07,360
我们评论的每个单词的词根。

31
00:02:07,560 --> 00:02:12,750
为了使用stem函数，我们需要导入一个类，然后创建另一个检查

32
00:02:12,750 --> 00:02:18,290
在该类的基础上，我们将在我们的每个复述单词中使用词干函数。

33
00:02:18,480 --> 00:02:19,220
因此，让我们开始吧。

34
00:02:19,230 --> 00:02:21,420
让我们从导入类开始。

35
00:02:21,480 --> 00:02:30,410
因此，此类来自NL Teekay点茎，然后再次是Dot，然后是Porter。

36
00:02:30,720 --> 00:02:35,750
这就是我们从中导入该类的库部分，该类是Stemmer类的端口。

37
00:02:35,940 --> 00:02:41,820
因此，现在我们将向边境增加进口资本。

38
00:02:42,350 --> 00:02:42,770
好吧。

39
00:02:42,810 --> 00:02:46,550
然后用大写字母S表示Stemmer。

40
00:02:46,550 --> 00:02:47,090
对。

41
00:02:47,100 --> 00:02:48,900
导入Porchester。

42
00:02:49,200 --> 00:02:50,240
那是班。

43
00:02:50,340 --> 00:02:56,490
现在，我们需要做的是创建此类的新对象，因为我们将使用

44
00:02:56,490 --> 00:02:58,880
此对象在此for循环中。

45
00:02:58,980 --> 00:03:02,080
好吧，我们需要在此for循环之前创建此对象。

46
00:03:02,280 --> 00:03:04,780
我们将在这里创建它。

47
00:03:04,800 --> 00:03:11,790
因此，我们将其称为Puerto Stemmer的对象ps，照常创建此类的对象

48
00:03:11,790 --> 00:03:20,660
在这里称呼该类本身为支持者口吃，让我们不要忘记括号并创建

49
00:03:20,660 --> 00:03:22,040
此类的对象。

50
00:03:22,050 --> 00:03:29,090
好了，现在我们已经创建了对象，那么我们将在这里使用该对象和step方法

51
00:03:29,390 --> 00:03:36,590
为了将“刺杀”应用于与您在一起的每个词，并为此，我们需要将我们的对象放在这里

52
00:03:36,590 --> 00:03:43,160
这被称为PS然后是点，这就是我们在此处使用step方法的地方。

53
00:03:43,190 --> 00:03:44,960
因此，然后按Enter。

54
00:03:45,290 --> 00:03:52,940
我们需要从P.S. 反对我们评论中所有无聊的话

55
00:03:53,030 --> 00:03:56,180
通过此for循环就在这里。

56
00:03:56,180 --> 00:03:56,510
好吧。

57
00:03:56,510 --> 00:03:58,670
这样就完成了。

58
00:03:58,880 --> 00:04:05,540
为了让我向您显示这是要重置所有内容，因为再次通知退出。

59
00:04:05,570 --> 00:04:11,060
好吧，这是因为既然评论现在在这三个词的列表中，您就会知道所有这些

60
00:04:11,060 --> 00:04:13,360
我们刚刚删除的像这样的热门单词。

61
00:04:13,490 --> 00:04:16,600
好了，for循环将在这里遍历这三个词。

62
00:04:16,610 --> 00:04:24,170
所以最好的办法是，您知道我们重置了所有内容，以查看此新评论在之后变成什么

63
00:04:24,170 --> 00:04:27,850
我们绝不会将所有不同单词的字母放在评论中。

64
00:04:27,860 --> 00:04:33,510
所以现在我要重新启动内核，因为这会重置所有内容。

65
00:04:33,560 --> 00:04:34,970
因此，重新启动内核。

66
00:04:35,060 --> 00:04:36,880
您确定要重启内核吗？

67
00:04:36,980 --> 00:04:40,050
是的，连接到新内核。

68
00:04:40,060 --> 00:04:41,820
好的，现在一切都重置了。

69
00:04:41,990 --> 00:04:49,650
因此，我们要做的就是将所有内容从这里移到这里，您就知道将数据导入库了

70
00:04:49,640 --> 00:04:52,490
设置并执行清洁过程的第一步。

71
00:04:52,730 --> 00:04:55,850
所以，现在让我看看评论。

72
00:04:56,060 --> 00:05:00,530
当然，这是个很好的地方，因为我们还没有分裂。

73
00:05:00,530 --> 00:05:03,350
我们还没有删除不相关的词。

74
00:05:03,380 --> 00:05:06,170
所以现在这就是评论。

75
00:05:06,350 --> 00:05:14,180
现在，让我们选择这三行内容，以查看Stehman在此第一次评论中的工作。

76
00:05:14,180 --> 00:05:14,700
好吧。

77
00:05:14,840 --> 00:05:16,520
因此，让我们猜测将会发生什么。

78
00:05:16,730 --> 00:05:22,400
好吧，首先，它将这篇评论分为不同的词，而不是我们要经历的一点点

79
00:05:22,400 --> 00:05:24,750
此列表中所有不同的词。

80
00:05:24,800 --> 00:05:27,000
多亏了分裂，这才成为清单。

81
00:05:27,030 --> 00:05:32,570
然后，它将检查每个不同的单词是否在不相关的停用词列表中

82
00:05:32,660 --> 00:05:33,580
英语单词。

83
00:05:33,770 --> 00:05:35,960
如果是这种情况，它将删除它。

84
00:05:35,960 --> 00:05:36,790
由于这个。

85
00:05:36,860 --> 00:05:45,800
如果不是，并且除了通过此Foluke删除每个单词Broster的头部之外，它将在STURMER中

86
00:05:45,800 --> 00:05:53,690
只保留词根如此清晰的词会成为爱，因为

87
00:05:53,690 --> 00:05:55,460
爱的根源是爱。

88
00:05:55,460 --> 00:05:59,830
那么，真正不能进一步简化地方的地方呢？

89
00:05:59,990 --> 00:06:03,760
您知道地方规则就是地方，也就是说。

90
00:06:03,830 --> 00:06:11,090
所以只会发生的是，这将被删除，因为这是一个固定的字眼，爱将被替换

91
00:06:11,090 --> 00:06:11,760
通过爱。

92
00:06:11,770 --> 00:06:13,060
因此，让我们检查一下。

93
00:06:13,130 --> 00:06:19,880
让我们在这里选择这三行，然后按Command Control按Enter执行。

94
00:06:19,880 --> 00:06:20,740
开始了。

95
00:06:20,810 --> 00:06:22,210
在那里。

96
00:06:22,250 --> 00:06:22,830
哇。

97
00:06:22,880 --> 00:06:27,640
爱情取代了我们以前的虚张声势。

98
00:06:27,800 --> 00:06:30,050
而且当然地方是一样的。

99
00:06:30,050 --> 00:06:32,940
因此，现在我们的评论变成了三个单词的列表。

100
00:06:33,050 --> 00:06:41,690
哇，这是爱与地方的根源，爱多了，简化了，对稀疏矩阵很有用

101
00:06:41,690 --> 00:06:43,130
最终将创建。

102
00:06:43,130 --> 00:06:48,110
目前，我们正走在减少通过创建

103
00:06:48,110 --> 00:06:49,920
我们这句话道德。

104
00:06:49,940 --> 00:06:50,320
好吧。

105
00:06:50,330 --> 00:06:52,760
这样就完成了绊脚石。

106
00:06:52,760 --> 00:06:55,270
现在，我们几乎已经完成了此处清理文本的工作。

107
00:06:55,280 --> 00:07:01,610
我们剩下要做的就是将这里的列表转换回原始的

108
00:07:01,610 --> 00:07:02,330
自我检查。

109
00:07:02,330 --> 00:07:06,280
那又回到了他的火车上，因此将是三个字的字符串。

110
00:07:06,400 --> 00:07:07,030
哇。

111
00:07:07,070 --> 00:07:12,030
爱和地方，将被清理和简化审查。

112
00:07:12,320 --> 00:07:14,220
好吧，我们将在Tauriel附近进行。

113
00:07:14,240 --> 00:07:15,920
在此之前，请尽情学习

