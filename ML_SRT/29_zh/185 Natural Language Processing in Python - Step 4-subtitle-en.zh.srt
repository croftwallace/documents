1
00:00:00,240 --> 00:00:02,480
您好，欢迎来到本Python教程。

2
00:00:02,730 --> 00:00:07,800
好吧，所以在清洁过程的前两个步骤中，我们要做的是首先保留所有字母

3
00:00:07,800 --> 00:00:10,690
从它说是否有大写字母。

4
00:00:10,860 --> 00:00:14,390
然后，我们将评论的所有字母都小写。

5
00:00:14,760 --> 00:00:20,070
现在，作为第一步，我们将在清洁过程中做一个非常重要的步骤，即去除

6
00:00:20,340 --> 00:00:22,540
不重要的词。

7
00:00:22,620 --> 00:00:28,010
那是与预测审查是正面还是负面无关的词。

8
00:00:28,020 --> 00:00:35,700
这些都是这样的词，在所有文章中，所有命题都是这样的词

9
00:00:35,700 --> 00:00:40,440
您知道的内容不会帮助机器学习算法预测评论是正面的还是正面的

10
00:00:40,440 --> 00:00:41,180
负。

11
00:00:41,190 --> 00:00:44,690
例如，如果我们在这里浏览此第一篇评论，我们非常喜欢这个地方。

12
00:00:44,880 --> 00:00:51,120
当然，可以帮助算法预测其是否为正面评价的词是

13
00:00:51,180 --> 00:00:57,720
喜爱的算法将清楚地使“喜爱”一词与“

14
00:00:57,720 --> 00:00:58,910
审查是积极的。

15
00:00:59,100 --> 00:01:05,880
我们可能还会有很多其他评论，其中包含“爱”或“爱”一词表示该人确实

16
00:01:05,880 --> 00:01:07,270
喜欢这家餐厅。

17
00:01:07,410 --> 00:01:12,930
但是，当我们在这里很好地看待这个词时，这并不能暗示评论是否

18
00:01:12,930 --> 00:01:14,080
正面或负面。

19
00:01:14,280 --> 00:01:17,250
您知道评论是否讨厌这个地方。

20
00:01:17,310 --> 00:01:20,700
好吧，审查将变成负面的，但这仍然会在这里。

21
00:01:20,700 --> 00:01:29,220
所以基本上这个词是完全不相关的，这就是为什么我们可以删除它，因为您知道我们的目标

22
00:01:29,220 --> 00:01:33,220
最终是为了避免稀疏矩阵过于稀疏。

23
00:01:33,360 --> 00:01:37,540
而且您知道，因为在稀疏矩阵中每个单词都有其自己的列。

24
00:01:37,710 --> 00:01:43,680
好吧，在这里为这个单词和同一种

25
00:01:43,680 --> 00:01:44,910
这样的话。

26
00:01:45,000 --> 00:01:47,670
它是命题的等等。

27
00:01:47,670 --> 00:01:53,640
所以我们现在要做的是清理过程的搜索步骤，在这里摆脱这些单词

28
00:01:53,880 --> 00:01:58,710
因为它们与预测评论是正面还是负面完全无关。

29
00:01:58,710 --> 00:01:59,030
好吧。

30
00:01:59,040 --> 00:02:05,940
因此，要做到这一点，我们将需要一个非常著名的A.K.新图书馆。 库，其中包含

31
00:02:05,940 --> 00:02:11,880
许多类函数通过数据集文本来执行自然语言处理。

32
00:02:11,880 --> 00:02:14,540
因此，让我们首先从导入该库开始。

33
00:02:14,670 --> 00:02:19,060
因此，我们将在此处添加import和LDK。

34
00:02:19,110 --> 00:02:19,930
开始了。

35
00:02:20,190 --> 00:02:26,490
现在我们需要做一件事，我们需要在这里导入工具和LDK库，这将

36
00:02:26,490 --> 00:02:28,890
帮助我们删除此类词语。

37
00:02:28,890 --> 00:02:30,680
那么这将是什么。

38
00:02:30,810 --> 00:02:37,020
这将是一个单词列表，该单词列表将包含所有通用的单词

39
00:02:37,020 --> 00:02:43,380
与评论或您知道用来预测评论类别或该文本的任何文本无关

40
00:02:43,380 --> 00:02:44,130
属于。

41
00:02:44,340 --> 00:02:49,830
因此，所有这些词都在此列表中，现在也称为T.K. 图书馆。

42
00:02:50,070 --> 00:02:57,030
因此，我们将下载此单词列表，并将此单词列表称为Stockard，然后

43
00:02:57,030 --> 00:03:02,430
发生的事情是，我们将审阅该评论的所有不同词语，并删除所有

44
00:03:02,430 --> 00:03:06,550
出现的评论词和排名靠前的词。

45
00:03:06,780 --> 00:03:14,820
因此，让我们下载顶部单词列表，为此，我们需要使用下载功能

46
00:03:14,820 --> 00:03:17,350
从这个年度T.K. 图书馆。

47
00:03:17,580 --> 00:03:26,160
在这里，我们添加一个点，然后下载，然后在括号中添加引号

48
00:03:26,260 --> 00:03:28,510
Stoppard就是这样。

49
00:03:28,590 --> 00:03:32,470
因此，让我们下载该停用词列表。

50
00:03:32,550 --> 00:03:38,700
我实际上是在下载该列表之前下载的，并且我在K也可以显示的内容中下载了所有材料。

51
00:03:38,700 --> 00:03:43,710
如果您有兴趣，该怎么做？您只需要在问答中提问，我将告诉您如何

52
00:03:43,710 --> 00:03:46,890
一口气下载倡导者的所有资料。

53
00:03:47,130 --> 00:03:54,100
但是现在我们只需要停止单词列表，因此我们只需要选择这两行。

54
00:03:54,390 --> 00:03:56,920
我将在这里执行这两行。

55
00:03:56,940 --> 00:04:03,070
但是正如您将看到的那样，我得到了此消息包，该消息包已在最新的位置停止。

56
00:04:03,300 --> 00:04:07,460
因此，如果尚未对Stoppard的软件包执行此操作，则将正在运行一些下载。

57
00:04:07,560 --> 00:04:14,670
最后，您将获得Stoppard的软件包，其中包含这些不相关的清单

58
00:04:14,760 --> 00:04:18,020
我们想从评论中删除的词。

59
00:04:18,420 --> 00:04:20,400
好的，这样做是一件好事。

60
00:04:20,400 --> 00:04:25,740
现在，我们要做的是在此处进行for循环进行我们的评论。

61
00:04:25,770 --> 00:04:27,030
我们的第一次评论哇。

62
00:04:27,060 --> 00:04:31,320
喜欢这个地方，要经历这个评论的所有不同词。

63
00:04:31,320 --> 00:04:37,500
然后针对每个不同的单词，我们查看该停用词列表中是否存在该单词，以及

64
00:04:37,500 --> 00:04:40,580
在这种情况下，我们从评论中删除了该词。

65
00:04:40,590 --> 00:04:41,040
好吧。

66
00:04:41,100 --> 00:04:42,230
因此，让我们开始吧。

67
00:04:42,240 --> 00:04:45,420
所以现在的问题是评论是一个字符串。

68
00:04:45,510 --> 00:04:49,380
因此，您知道这不是不同元素的列表。

69
00:04:49,380 --> 00:04:50,030
哇。

70
00:04:50,130 --> 00:04:52,230
喜欢这个地方。

71
00:04:52,230 --> 00:04:57,690
它只是一个字符串，其中不同强度的单词没有分开。

72
00:04:57,690 --> 00:05:03,480
因此，我们现在需要做的是能够通过审核的不同词语，实际上是

73
00:05:03,480 --> 00:05:06,160
将评论分为不同的词。

74
00:05:06,180 --> 00:05:09,620
这就是我们将能够经历的不同评论。

75
00:05:09,720 --> 00:05:11,470
感谢我们的论坛。

76
00:05:11,940 --> 00:05:13,170
好吧，让我们开始吧。

77
00:05:13,200 --> 00:05:15,130
将评论分为不同的词。

78
00:05:15,140 --> 00:05:16,320
这很容易。

79
00:05:16,320 --> 00:05:22,620
我们只需要再次阅读并复习一下，这不过是这个变量复习课程。

80
00:05:22,830 --> 00:05:27,610
然后我们再次回顾一下，到目前为止，这列火车在这里。

81
00:05:27,720 --> 00:05:28,160
哇。

82
00:05:28,200 --> 00:05:29,360
爱这个地方。

83
00:05:29,550 --> 00:05:34,980
然后像以前一样，在此处添加一个小点，这一次我们将要使用的功能

84
00:05:34,980 --> 00:05:38,220
被分割和括号。

85
00:05:38,430 --> 00:05:38,640
对。

86
00:05:38,640 --> 00:05:41,540
这就是我们不需要输入任何参数的全部。

87
00:05:41,670 --> 00:05:49,290
此拆分功能将立即拆分评论，并以两个不同的词进行训练，因此

88
00:05:49,290 --> 00:05:53,450
该评论将成为其不同单词的列表。

89
00:05:53,580 --> 00:05:54,710
因此，让我们检查一下。

90
00:05:54,840 --> 00:05:57,860
我将选择此行，您将看到发生了什么。

91
00:05:58,120 --> 00:05:59,000
执行。

92
00:05:59,220 --> 00:06:05,730
如您现在所见，该评论现在是四个要素的列表，因为以前的书面评论

93
00:06:05,730 --> 00:06:07,160
有四个字。

94
00:06:07,280 --> 00:06:09,440
哇，喜欢这个地方。

95
00:06:09,510 --> 00:06:16,860
现在，这些前锋成为了这个新名单的四个要素

96
00:06:16,860 --> 00:06:17,130
地点。

97
00:06:17,130 --> 00:06:24,060
功能很好，所以现在我们可以使用for循环遍历此列表的不同单词，因此

98
00:06:24,060 --> 00:06:30,900
看看是否可以删除此列表中的一些不相关词，以便我们很好地猜测

99
00:06:30,900 --> 00:06:33,870
要删除的实际上只是一个字。

100
00:06:33,870 --> 00:06:40,240
这里就是这个词，因为它很可能会出现在这个停用词列表中。

101
00:06:40,260 --> 00:06:41,410
好吧，让我们开始吧。

102
00:06:41,640 --> 00:06:49,120
让我们再次很好地更新我们的评论，以便在这里和现在评论我们的装饰。

103
00:06:49,290 --> 00:06:58,000
因此，由于评论现在是列表，因此我们将在此处使用快捷方式在秋季直接减少我们的列表。

104
00:06:58,020 --> 00:07:00,920
因此，我们现在要做的是放一些括号。

105
00:07:01,140 --> 00:07:04,520
我们将在这些括号中使用循环。

106
00:07:04,900 --> 00:07:07,570
好，那么我们要放在这些括号中。

107
00:07:07,710 --> 00:07:12,870
好吧，我们要做的第一件事是浏览所有不同的评论词，我们将做

108
00:07:12,870 --> 00:07:14,300
这要感谢for循环。

109
00:07:14,520 --> 00:07:15,880
所以我们只需要您在这里。

110
00:07:15,930 --> 00:07:26,100
逐字逐句地进行评论，这意味着评论中不同的单词组成部分都很好

111
00:07:26,130 --> 00:07:31,240
喜欢这个地方，我们在这里的清单评论中包含了这个词。

112
00:07:31,500 --> 00:07:31,790
好吧。

113
00:07:31,800 --> 00:07:35,830
到目前为止，我们还没有做任何与此相关的事情。

114
00:07:35,970 --> 00:07:37,680
这就是我们现在要做的。

115
00:07:37,710 --> 00:07:41,580
我们将添加一个条件以删除不相关的词。

116
00:07:41,760 --> 00:07:47,490
这就是该热门单词列表中的单词，因此要删除这些单词，我们需要添加

117
00:07:47,820 --> 00:07:56,280
如果不是这样，则是因为我们希望我们的评论中的其他词不在此热门词列表中。

118
00:07:56,340 --> 00:08:01,640
因此，这就是为什么我们在这里不方便使用它们的原因，现在尝试猜测我们需要添加的内容。

119
00:08:01,830 --> 00:08:11,190
好吧，实际上，如果该单词不在这些最重要的单词列表中，那么我们实际上希望将该单词包括在评论中。

120
00:08:11,240 --> 00:08:17,200
因此，非常简单，我们需要在此处使用停用词，但这并不是所有的科学障碍实际上是

121
00:08:17,200 --> 00:08:20,790
包含不同语言单词列表的软件包。

122
00:08:20,920 --> 00:08:26,860
好吧，因为评论是英文的，所以我们需要通过告诉它使我们的程序更容易

123
00:08:26,860 --> 00:08:35,120
只看英文单词并指定它，我们需要在这里然后在括号中听到这个单词

124
00:08:35,260 --> 00:08:36,530
和引号。

125
00:08:36,740 --> 00:08:38,440
英语。

126
00:08:38,610 --> 00:08:40,540
好吧，现在这行是什么意思。

127
00:08:40,620 --> 00:08:45,540
好吧，这意味着，由于这里有for循环，因此可以通过

128
00:08:45,540 --> 00:08:46,400
评论。

129
00:08:46,440 --> 00:08:53,430
我们会使用评论中所有不在Stopstop列表中的词，更确切地说是

130
00:08:53,430 --> 00:08:57,750
与文字无关的英文单词列表。

131
00:08:57,750 --> 00:09:03,090
所以这是一件好事，我们做了主要工作，然后我们需要做一些事情才能使其正常工作。

132
00:09:03,090 --> 00:09:07,820
因此，说到这些小事情，让我们看看该警告告诉我们什么。

133
00:09:07,860 --> 00:09:11,510
它说我们有一个未定义的名字Stoppard's。

134
00:09:11,790 --> 00:09:19,050
好吧，确实，我们下载了停用词包，这意味着它现在存在于UK文件夹中，

135
00:09:19,050 --> 00:09:20,780
您可以在系统上找到。

136
00:09:20,850 --> 00:09:23,140
它已下载但未导入。

137
00:09:23,160 --> 00:09:24,410
现在在蜘蛛。

138
00:09:24,510 --> 00:09:28,620
这就是我们在此处发出警告的地方，告诉我们我们需要导入它。

139
00:09:28,650 --> 00:09:33,670
否则，我们将无法使用不相关的英语单词的停用词列表。

140
00:09:33,900 --> 00:09:39,280
好的，这样很容易，我们可以像下面这样导入停用词。

141
00:09:39,480 --> 00:09:47,660
因此，我们实际上是从A.K.导入此程序包。 语料库，因为最终发生的是

142
00:09:47,690 --> 00:09:54,590
在整个筛选过程中，我们将创建基恩所有不同评论的语料库。

143
00:09:54,680 --> 00:09:56,990
这就是为什么我们在这里拥有这个语料库。

144
00:09:56,990 --> 00:10:06,390
因此，现在从过时的语料库导入停用词开始，所有警告均消失，我们现在可以

145
00:10:06,390 --> 00:10:10,810
将此Stoppard的软件包与不相关的英语单词列表一起使用。

146
00:10:10,880 --> 00:10:11,600
大。

147
00:10:11,700 --> 00:10:12,580
现在我们完成了。

148
00:10:12,600 --> 00:10:14,310
我们准备执行它。

149
00:10:14,580 --> 00:10:21,060
但是，以防万一您的文字比此处的简单评论要大，因为现在您知道我们的

150
00:10:21,060 --> 00:10:23,200
评论仅由四个词组成。

151
00:10:23,340 --> 00:10:28,130
但是，如果您要处理的文章中有很多话。

152
00:10:28,280 --> 00:10:35,980
好吧，强烈建议您在此处添加此set函数，该函数将采用Stoppard的

153
00:10:36,120 --> 00:10:39,750
单词英语作为输入。

154
00:10:40,110 --> 00:10:46,110
我们这样做的原因是，您的算法可以更快地通过所有不同的过程

155
00:10:46,110 --> 00:10:51,750
Stoppard的英语列表中的单词，因为到那时，它们是更快的算法

156
00:10:51,750 --> 00:10:55,410
通过集合中的不同单词而不是列表中的单词。

157
00:10:55,410 --> 00:10:57,840
因此，在我们的情况下，它没有太大用处。

158
00:10:57,930 --> 00:11:02,140
好吧，如果您有一些文章或书籍，而不是这里的评论。

159
00:11:02,250 --> 00:11:07,990
最好在这里使用搜索功能，以便算法可以更快地执行。

160
00:11:08,120 --> 00:11:09,540
好的，我们在这里完成了。

161
00:11:09,560 --> 00:11:13,330
我们已尽力删除不相关的单词。

162
00:11:13,370 --> 00:11:14,810
因此，让我们现在检查一下。

163
00:11:14,870 --> 00:11:21,590
实际上，我们不要忘记在此处选择并执行此行以导入Stoppard的程序包。

164
00:11:21,620 --> 00:11:26,500
因此，现在我们可以选择这9年以删除不相关的单词。

165
00:11:26,630 --> 00:11:27,560
因此，让我们开始吧。

166
00:11:27,560 --> 00:11:30,230
让我们按命令并控制我们并执行。

167
00:11:30,260 --> 00:11:31,370
开始了。

168
00:11:31,370 --> 00:11:32,930
评论已更新。

169
00:11:32,930 --> 00:11:34,160
现在让我们看看。

170
00:11:34,160 --> 00:11:37,380
现在我们的评论是三个单词的清单。

171
00:11:37,630 --> 00:11:38,400
和地方。

172
00:11:38,450 --> 00:11:45,740
因此，正如预期的那样，最后一个单词是停用词的公告，而与此无关的英语列表

173
00:11:45,770 --> 00:11:49,120
英文单词，因此已从评论中删除。

174
00:11:49,280 --> 00:11:52,680
清洁过程又迈出了一大步。

175
00:11:52,680 --> 00:11:58,430
因此，现在我们准备进行下一步，这是关于阻止和提醒您

176
00:11:58,430 --> 00:12:03,830
仅保留不同单词的词根以进一步简化审核。

177
00:12:03,990 --> 00:12:09,300
因此，我们将在下一个教程中，然后在德国，作为清洁过程的下一步

178
00:12:09,290 --> 00:12:09,840
在早期

