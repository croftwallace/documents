1
00:00:00,240 --> 00:00:05,340
您好，欢迎使用本教程中的本艺术教程，我们将使用解决问题的方法。

2
00:00:05,340 --> 00:00:07,420
Kamins算法。

3
00:00:07,440 --> 00:00:13,320
因此，让我们从设置工作目录开始，以便获得会话设置的工作目录，然后单击

4
00:00:13,320 --> 00:00:14,370
在选择目录上。

5
00:00:14,580 --> 00:00:20,670
然后，选择文件夹机器学习的第3部分，“ Kamins聚类”部分，然后单击

6
00:00:20,670 --> 00:00:21,420
打开。

7
00:00:21,670 --> 00:00:24,400
现在，第一步是导入小型数据集。

8
00:00:24,540 --> 00:00:30,200
因此，让我们用注释导入Dymo数据集来介绍一个新的代码部分，然后导入数据集

9
00:00:30,240 --> 00:00:33,110
通过输入数据集左箭头。

10
00:00:33,210 --> 00:00:34,540
阅读该CSV。

11
00:00:34,770 --> 00:00:37,240
并在括号中为模型T SV。

12
00:00:37,260 --> 00:00:41,280
好的，我们选择此行，然后按“控制增量”，请输入执行。

13
00:00:41,280 --> 00:00:43,450
现在我们的数据集已导入。

14
00:00:43,710 --> 00:00:45,370
让我们单击它以查看它。

15
00:00:45,770 --> 00:00:50,700
好的，让我解释一下这个小型数据集的含义以及我们的任务是什么。

16
00:00:50,730 --> 00:00:56,580
在特定城市中有一个大型购物中心，其中包含客户的信息，订阅的客户

17
00:00:56,580 --> 00:01:01,980
当客户订阅会员卡时，他们将会员卡信息提供给会员卡

18
00:01:01,980 --> 00:01:05,430
性别，年龄和年收入。

19
00:01:05,430 --> 00:01:09,840
因为他们有这张卡，所以可以用它来购买商场中的各种物品，因此

20
00:01:09,840 --> 00:01:12,750
购物中心必须购买其每个客户成员的历史记录。

21
00:01:12,750 --> 00:01:16,650
这就是他们在这里获得支出得分的最后一列的方式。

22
00:01:16,650 --> 00:01:22,110
因此，提醒您支出分数的是商场为每个客户计算的分数

23
00:01:22,110 --> 00:01:27,480
根据几个标准，例如他们的收入，他们每周出现的次数

24
00:01:27,480 --> 00:01:28,230
商场。

25
00:01:28,350 --> 00:01:33,360
当然，他们一年中花费的金额，并基于所有这些计算出该指标

26
00:01:33,360 --> 00:01:35,930
取值介于1到100之间。

27
00:01:35,970 --> 00:01:42,000
因此，支出得分越接近1，下降支出越少，支出越接近

28
00:01:42,000 --> 00:01:44,900
得分达到100时，下降支出越多。

29
00:01:45,120 --> 00:01:51,450
最终，在收集了这些数据集之后，公司雇用了您作为机器赚钱科学家，

30
00:01:51,450 --> 00:01:55,690
根据这两个指标将客户划分为不同的组。

31
00:01:55,800 --> 00:02:01,470
年收入和支出得分，并且由于商场不知道此客户细分的对象

32
00:02:01,470 --> 00:02:05,390
甚至不知道会有多少段。

33
00:02:05,490 --> 00:02:09,720
这通常是一个群集问题，因为我们不知道答案。

34
00:02:09,720 --> 00:02:15,510
因此，现在让我们开始我们的任务，并使用Kamins算法找出那些客户群

35
00:02:15,510 --> 00:02:16,300
可能。

36
00:02:16,650 --> 00:02:22,650
因此，这里我们只是导入了数据集，现在让我们创建一个仅包含两个变量的变量x

37
00:02:22,650 --> 00:02:26,410
我们对年收入和支出得分感兴趣的列。

38
00:02:26,430 --> 00:02:32,640
因此，这里我们编写X左箭头数据集，然后在方括号中放入两个索引

39
00:02:32,640 --> 00:02:34,290
我们感兴趣的两列。

40
00:02:34,290 --> 00:02:40,740
那就是如果我们从索引开始就进入数据集1我们两列年收入的索引

41
00:02:40,740 --> 00:02:43,320
支出得分分别为4和5。

42
00:02:43,320 --> 00:02:49,630
因此，在方括号中，我们将第5列放进去，这意味着我们从4变为5。

43
00:02:49,830 --> 00:02:50,210
好。

44
00:02:50,230 --> 00:02:53,510
就像这行代码一样，完美执行。

45
00:02:53,580 --> 00:03:00,070
它创建了两列的数组x，我们可以通过单击X在此处可视化。

46
00:03:00,480 --> 00:03:00,860
好吧。

47
00:03:00,870 --> 00:03:05,940
现在，我们已经很好地导入了数据并准备了充分的数据，我们已准备好进行下一步，并

48
00:03:05,940 --> 00:03:08,460
那就是事情开始变得有趣起来的时候。

49
00:03:08,580 --> 00:03:11,370
现在，我们将开始使用Kamins。

50
00:03:11,460 --> 00:03:15,490
因此请记住，当我们使用Kamins时，必须指定簇数。

51
00:03:15,570 --> 00:03:20,100
但是这里的问题是我们不知道要寻找多少个客户群。

52
00:03:20,190 --> 00:03:25,140
因此，我们可以在数据集中多次使用不同数量的聚类进行拟合，以测试不同的

53
00:03:25,140 --> 00:03:26,040
结果。

54
00:03:26,040 --> 00:03:31,200
但是，有一种更快的方法可以让我们找到与之配合使用的最佳簇数。

55
00:03:31,200 --> 00:03:35,470
K表示我们的问题，我们当然要使用弯头方法。

56
00:03:35,520 --> 00:03:40,950
因此，让我们用弯头方法介绍带有注释的新部分以找到最佳数字

57
00:03:40,950 --> 00:03:46,500
集群，在此代码段中，我们将进行一个for循环以绘制弯头方法图

58
00:03:46,510 --> 00:03:46,710
。

59
00:03:46,890 --> 00:03:51,930
因此，由于存在随机因素和Kamins，我们可以通过使用come获得不同的结果

60
00:03:51,930 --> 00:03:52,980
在几次。

61
00:03:53,220 --> 00:03:59,010
因此，为了获得相同的结果，我们将设置相同的种子，并为此输入set

62
00:03:59,280 --> 00:04:03,760
点种子，然后加上括号，我们可以选择我们喜欢的任何数字。

63
00:04:03,810 --> 00:04:05,400
我们选六个。

64
00:04:05,460 --> 00:04:10,620
然后，我们将使用for循环来计算一些不同的值，以及不同值的平方和

65
00:04:10,620 --> 00:04:15,510
簇的数目，我们将把不同的簇在向量的簇平方和内

66
00:04:15,510 --> 00:04:15,930
。

67
00:04:15,930 --> 00:04:23,130
因此，让我们首先通过键入WCA来初始化此向量，即说左箭头向量和空括号

68
00:04:23,130 --> 00:04:23,640
。

69
00:04:24,000 --> 00:04:26,210
这样就初始化了一个空向量。

70
00:04:26,250 --> 00:04:30,450
现在，我们将使用完整循环填充群集内平方和的不同值

71
00:04:30,450 --> 00:04:31,100
。

72
00:04:31,140 --> 00:04:32,650
因此，让我们写四个。

73
00:04:32,910 --> 00:04:36,230
在括号中，我打了一个电话，又说了10个

74
00:04:36,240 --> 00:04:41,330
因此，在四个循环中以及在上限中包含了下限，所以在这里意味着我

75
00:04:41,340 --> 00:04:47,050
将取值从1到10，然后在每次迭代中我们直接计算

76
00:04:47,060 --> 00:04:54,650
通过写和，在括号中k表示X。

77
00:04:54,730 --> 00:05:00,990
我将Kamins算法适合于具有聚类的数据集X，并通过这样做实际上创建了一个

78
00:05:00,990 --> 00:05:03,260
R中的K Kamins类的对象。

79
00:05:03,480 --> 00:05:09,990
如果我们在此处选择Kamins，请按F 1，然后向下滚动至value，我们将看到该类具有属性

80
00:05:09,990 --> 00:05:17,220
内的调用会计算出群集的平方和，因此我们当然要使用它并键入Kamins

81
00:05:17,280 --> 00:05:20,280
X I，然后是美元符号。

82
00:05:20,450 --> 00:05:20,850
好吧。

83
00:05:20,850 --> 00:05:25,770
现在，由于这一组，WTS的向量填充了10个不同的值，感兴趣的是

84
00:05:25,770 --> 00:05:29,030
代表9:59的10个数字的平方。

85
00:05:29,280 --> 00:05:29,770
完善。

86
00:05:29,770 --> 00:05:32,300
所以现在我们要做的就是左图绘制图形。

87
00:05:32,490 --> 00:05:39,250
因此，我们输入plot并在括号中首先输入x值，即9:59，然后输入y值。

88
00:05:39,270 --> 00:05:43,400
WCA表示“确定”，然后选择图并按F 1。

89
00:05:43,650 --> 00:05:45,470
我们可以指定绘图的类型。

90
00:05:45,630 --> 00:05:49,450
彼得只有点L可以有任何线，而点B都可以。

91
00:05:49,560 --> 00:05:51,040
我们将选择两者。

92
00:05:51,240 --> 00:05:52,970
这样吧

93
00:05:53,050 --> 00:05:58,350
然后，通过键入main equals space和客户括号内的客户群为她的情节命名

94
00:05:58,350 --> 00:05:58,720
。

95
00:05:58,740 --> 00:06:00,660
然后，我们为X标签命名。

96
00:06:00,750 --> 00:06:07,320
因此，让我们放个法律定律，因为簇的数量，并且给我们的y轴起一个名字y的爱等于WCOS。

97
00:06:07,320 --> 00:06:08,460
。

98
00:06:08,460 --> 00:06:13,770
现在让我们在这里验电器部分，让我们执行它，看看我们是否有最佳数目的星团

99
00:06:13,770 --> 00:06:14,100
。

100
00:06:14,220 --> 00:06:15,330
是的，我们愿意。

101
00:06:15,330 --> 00:06:18,130
我们可以清楚地看到这里是肘部。

102
00:06:18,210 --> 00:06:22,690
当我们将此点投影在x轴上时，将获得5个聚类。

103
00:06:22,770 --> 00:06:27,630
因此，这意味着针对我们的问题的最佳群集数为五个群集。

104
00:06:27,960 --> 00:06:32,880
由于有了这些有见地的信息，我们准备继续下一步，因为下一步

105
00:06:32,880 --> 00:06:38,610
步骤实际上是使Kamins适应具有正确数目的聚类5个聚类的小型数据集

106
00:06:38,610 --> 00:06:39,360
。

107
00:06:39,360 --> 00:06:43,700
因此，让我们用注释将gamins应用于所有数据集的方式介绍这一新步骤。

108
00:06:43,710 --> 00:06:46,400
然后继续进行操作，以便我们都获得相同的结果。

109
00:06:46,440 --> 00:06:51,640
我们可以击败任何一个数字，让我们选择29，然后让我们拟合数据x。

110
00:06:51,720 --> 00:06:58,600
因此，我们从类Kamins创建对象gamins，然后在此处选择Kamins并按F 1

111
00:06:58,600 --> 00:06:59,330
。

112
00:06:59,430 --> 00:07:04,910
我们必须输入的第一个参数是数据X，然后第二个参数是簇数

113
00:07:04,910 --> 00:07:04,990
。

114
00:07:05,010 --> 00:07:06,250
现在我们知道是五个。

115
00:07:06,630 --> 00:07:10,050
然后像在python中一样，我们可以指定最大迭代次数。

116
00:07:10,050 --> 00:07:12,850
让我们对墨西哥300使用相同的值。

117
00:07:13,170 --> 00:07:18,030
我们还可以指定初始随机集的数量，然后开始等于。

118
00:07:18,190 --> 00:07:22,740
现在，我们拥有了所需的一切，我们已经准备好选择此代码部分并执行它

119
00:07:22,740 --> 00:07:25,650
使Kamins算法适合我们的数据X ..

120
00:07:25,650 --> 00:07:26,390
开始了。

121
00:07:26,640 --> 00:07:28,230
和完美。

122
00:07:28,230 --> 00:07:31,580
现在让我们继续下一步，让我们获得所有乐趣。

123
00:07:31,590 --> 00:07:36,660
确实，这是有趣的部分，因为我们已经完成了将Kamins算法拟合到数据X的工作，现在

124
00:07:36,660 --> 00:07:38,480
我们期待看到结果。

125
00:07:38,490 --> 00:07:40,880
因此，让我们立即介绍这一新部分。

126
00:07:41,040 --> 00:07:45,910
可视化集群，我们将使用集群库访问Protheroe集群。

127
00:07:45,930 --> 00:07:51,120
因此，我们要做的第一件事是导入群集库，然后您可以转到软件包并

128
00:07:51,120 --> 00:07:56,790
在这里选择簇，或者我们可以在这里键入库和括号簇，如果

129
00:07:56,790 --> 00:07:57,890
您想稍后执行。

130
00:07:57,900 --> 00:07:59,010
整个脚本。

131
00:07:59,100 --> 00:08:02,000
现在，让我们绘制集群以执行此操作。

132
00:08:02,040 --> 00:08:07,700
我们将使用clus plot在这里选择类路径，然后按F 1以通过输入查看参数

133
00:08:07,700 --> 00:08:08,340
。

134
00:08:08,550 --> 00:08:11,510
因此，第一个参数是我们的数据x。

135
00:08:11,700 --> 00:08:15,020
放置簇的向量时的第二个参数。

136
00:08:15,090 --> 00:08:20,490
这是返回给每个观察值的向量，它属于哪个簇，我们可以采用

137
00:08:20,490 --> 00:08:28,200
通过输入Kamins美元符号簇的向量，则我们必须指定的参数是线，因为

138
00:08:28,200 --> 00:08:33,030
当您不给定值两条线时，群集之间会出现一些距离线

139
00:08:33,340 --> 00:08:34,720
我们真的不想要那个。

140
00:08:34,770 --> 00:08:39,730
因此，我们将选择一个零值，以便在绘图中不会出现距离线。

141
00:08:39,780 --> 00:08:45,150
然后，将参数shape设置为true，以使簇相对于其密度被着色

142
00:08:46,050 --> 00:08:47,040
然后颜色相同。

143
00:08:47,040 --> 00:08:53,250
让我们将其添加为true，然后获得参数标签，然后选择等于

144
00:08:53,250 --> 00:08:56,580
我们在图中标出了所有点和聚类。

145
00:08:57,060 --> 00:09:00,260
然后，我们真的不希望为点和不同的聚类使用不同的符号。

146
00:09:00,330 --> 00:09:05,730
所以我们说plot变为false，那么我们有一个很酷的参数范围，可以让我们在周围绘制椭圆

147
00:09:05,730 --> 00:09:09,790
为了绘制椭圆，我们将其设置为true。

148
00:09:10,400 --> 00:09:13,070
最后，我们想在剧情中添加标题。

149
00:09:13,140 --> 00:09:17,570
因此，我们编写主等间隔的客户端群集。

150
00:09:17,580 --> 00:09:24,930
然后我们想给x轴起个名字，所以我们将x love等于年收入，y轴也一样

151
00:09:25,200 --> 00:09:27,630
而其他等于支出得分。

152
00:09:28,290 --> 00:09:29,680
现在是关键时刻。

153
00:09:29,820 --> 00:09:32,600
让我们找出五个集群的样子。

154
00:09:32,790 --> 00:09:39,660
我们在此处选择此代码段，然后按Commander控件并按Enter输入以执行voila我们的五个

155
00:09:39,660 --> 00:09:41,190
最终集群。

156
00:09:41,490 --> 00:09:47,620
因此，让我们一个接一个地看一看他们，一个客户和一个集群有高收入且没有支出

157
00:09:47,620 --> 00:09:48,150
得分。

158
00:09:48,300 --> 00:09:52,610
因此，在这个集群中，客户赚取了高收入，却没有花太多钱。

159
00:09:52,680 --> 00:09:54,690
因此，我们可以称呼这群客户。

160
00:09:54,690 --> 00:10:01,500
小心谨慎的客户群，使集群中的客户获得平均收入和平均支出

161
00:10:01,500 --> 00:10:02,130
得分。

162
00:10:02,130 --> 00:10:08,890
因此，我们将此客户群称为标准群3高收入和高支出得分。

163
00:10:08,910 --> 00:10:13,860
因此，这将是商场营销活动的主要潜在目标客户群

164
00:10:13,870 --> 00:10:13,990
。

165
00:10:14,070 --> 00:10:18,780
因此，对于他们所有人来说，了解他们购买的产品是非常有见地的

166
00:10:18,780 --> 00:10:20,190
此集群中的客户端。

167
00:10:20,190 --> 00:10:27,960
因此最终我们可以讨论以下针对低收入和低支出的名称目标群体

168
00:10:27,960 --> 00:10:28,620
得分。

169
00:10:28,650 --> 00:10:33,570
因此，与收入较低且支出较高的Carolis客户相反，我们将其称为

170
00:10:33,570 --> 00:10:39,430
明智的客户，并最终接近五个低收入但高支出得分的客户。

171
00:10:39,480 --> 00:10:43,700
因此，该集群中的客户收入较低，但不在乎并花费很多。

172
00:10:43,710 --> 00:10:47,520
因此，我们称此客户群为粗心大意。

173
00:10:47,520 --> 00:10:48,000
好吧。

174
00:10:48,000 --> 00:10:53,610
我们已经完成了Kamins算法，我们的代码结构简单，

175
00:10:53,610 --> 00:10:58,740
工作完美，您可以随时使用此代码进行工作，而只需替换

176
00:10:58,740 --> 00:11:00,300
数据集的名称。

177
00:11:00,360 --> 00:11:05,580
更改感兴趣的列的索引，然后只需执行此代码以找到一些

178
00:11:05,580 --> 00:11:07,100
您的业​​务问题的答案。

179
00:11:07,290 --> 00:11:12,030
而且，如果要在两个以上的维度上进行集群，请不要执行较少的代码部分

180
00:11:12,030 --> 00:11:16,340
可视化群集，因为它仅用于二维群集。

181
00:11:16,350 --> 00:11:20,700
但是，在本课程的稍后部分，我们将学习一种技术，该技术可让我们减少

182
00:11:20,700 --> 00:11:21,660
我们的数据集。

183
00:11:21,660 --> 00:11:27,150
因此，如果您将数据集缩小为两个维度，则可以使用最后一个代码部分来绘制

184
00:11:27,150 --> 00:11:28,240
集群。

185
00:11:28,320 --> 00:11:31,650
现在，完成本教程，让我们清除所有内容。

186
00:11:31,710 --> 00:11:33,610
因此，我们在这里单击此按钮。

187
00:11:34,350 --> 00:11:37,620
我们也去这里，按Control Al清除控制台。

188
00:11:37,800 --> 00:11:42,740
我们仍然喜欢执行的整个代码，并确保一切正常。

189
00:11:43,140 --> 00:11:47,300
感谢您观看此视频，我期待在下一个教程中与您相见。

