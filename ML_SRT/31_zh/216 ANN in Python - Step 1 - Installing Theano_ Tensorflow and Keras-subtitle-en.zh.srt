1
00:00:00,300 --> 00:00:06,750
您好，欢迎使用此Python教程，也非常欢迎参加第8部分深度学习，我非常兴奋

2
00:00:06,750 --> 00:00:11,520
从这一点开始，最终继续学习，因为这是最迷人的分支之一

3
00:00:11,580 --> 00:00:16,010
机器学习不仅最有趣，而且功能最强大。

4
00:00:16,080 --> 00:00:22,620
您将看到，我们将基于深度神经网络构建非常强大的机械模型。

5
00:00:23,220 --> 00:00:28,320
这就是为什么今天深度学习被用于我们许多苛刻且高度计算密集型任务的原因

6
00:00:28,500 --> 00:00:31,310
例如医学中的计算机视觉。

7
00:00:31,380 --> 00:00:37,050
实际上，深度学习可用于进行预测或分类的各种目的

8
00:00:37,050 --> 00:00:42,150
像我们现在将要做的业务问题或计算机视觉（例如识别）

9
00:00:42,150 --> 00:00:46,700
面孔，图片或视频，甚至在某些大脑图像中识别出肿瘤。

10
00:00:46,890 --> 00:00:52,000
它也可用于使用深玻尔兹曼机的推荐系统。

11
00:00:52,110 --> 00:00:57,420
但是今天，我们将解决上一教程中由curial描述的业务问题，

12
00:00:57,420 --> 00:01:01,430
我们将使用人工神经网络解决此业务问题。

13
00:01:01,440 --> 00:01:06,330
因此，正如您在业务问题描述中所了解的那样，我们将要处理的问题是

14
00:01:06,330 --> 00:01:08,090
分类问题。

15
00:01:08,130 --> 00:01:13,110
我们拥有这些独立变量，例如信用评分，以平衡产品数量，因此，

16
00:01:13,110 --> 00:01:18,090
在这些方面，我们都会接受培训，以更好地预测哪些客户要离开银行。

17
00:01:18,090 --> 00:01:24,090
所以基本上我们要做的是分类问题，人工神经网络可以做到

18
00:01:24,090 --> 00:01:28,680
在做出这种预测方面做得很棒。

19
00:01:28,680 --> 00:01:33,600
这是加深的第一部分，我们将在第一部分中进行研究，然后

20
00:01:33,600 --> 00:01:38,520
研究深度学习的另一个分支，即卷积神经网络，并且非常有用

21
00:01:38,520 --> 00:01:41,810
与人工神经网络不同，它非常适合计算机视觉任务。

22
00:01:41,850 --> 00:01:45,720
您将完全理解为什么女孩直觉教程。

23
00:01:45,810 --> 00:01:50,400
好吧，让我们构建我们的人工神经网络来解决我们的业务问题。

24
00:01:50,430 --> 00:01:53,090
如您所知，最有效的方法。

25
00:01:53,100 --> 00:01:59,280
好的，这样做是最有效的方式，我们需要安装一个特殊的库，它是Cara的

26
00:01:59,370 --> 00:02:02,470
库，这就是我们在本教程中要做的。

27
00:02:02,490 --> 00:02:08,580
因此，您可以在这里看到，我不仅在安装胡萝卜的库，还在安装新的库

28
00:02:08,590 --> 00:02:10,230
在数十个图书馆中。

29
00:02:10,230 --> 00:02:14,580
因此，在安装这三个库之前，我将向您解释它们的含义。

30
00:02:14,580 --> 00:02:20,070
好的，让我们从no no no no no no数值限制库开始。

31
00:02:20,190 --> 00:02:22,770
对于快速的Americal计算非常有效。

32
00:02:22,890 --> 00:02:24,930
这是基于语法的。

33
00:02:25,050 --> 00:02:30,120
但是，这个库的另一个优点是它不仅可以在您的Seabee上运行，而且可以在

34
00:02:30,120 --> 00:02:31,000
您的全科医生。

35
00:02:31,170 --> 00:02:37,350
提醒一下，Sibiu表示中央处理器，它基本上是计算机上的主处理器

36
00:02:37,610 --> 00:02:40,650
它用于一般用途，例如一般任务。

37
00:02:40,660 --> 00:02:42,420
它们不是图形任务。

38
00:02:42,420 --> 00:02:47,490
说到图形任务，还有另一个处理器为此运行计算。

39
00:02:47,580 --> 00:02:49,830
该处理器称为GP。

40
00:02:50,070 --> 00:02:55,020
因此，它是用于图形目的的处理器，与您计算机上的图形卡完全一样。

41
00:02:55,110 --> 00:03:01,140
因此，就功能和计算效率而言，GP的功能要强大得多，因为

42
00:03:01,470 --> 00:03:07,380
它具有更多的内核，并且每秒能够运行比其更多的浮点计算

43
00:03:07,380 --> 00:03:12,720
CPI，因此JBU更专门用于高度计算密集型任务和并行

44
00:03:12,720 --> 00:03:16,150
计算与神经网络完全一样。

45
00:03:16,200 --> 00:03:21,090
你知道我们何时要传播神经网络中不同神经元的激活

46
00:03:21,270 --> 00:03:26,880
多亏了激活功能，而这恰好涉及并行计算，而当

47
00:03:26,880 --> 00:03:29,220
错误被反向传播和神经网络。

48
00:03:29,310 --> 00:03:31,880
嗯，这又涉及桶计算。

49
00:03:32,070 --> 00:03:37,770
好的，所以从根本上说，GP是神经网络的更好选择，尤其是在构建时

50
00:03:37,860 --> 00:03:45,180
深度神经网络进行深度学习，但对于简单的神经网络，您仍然可以使用c.p.

51
00:03:45,180 --> 00:03:50,670
好的，顺便说一下，这个DNA库是由一群机器学习人员开发的

52
00:03:50,730 --> 00:03:57,320
在蒙特利尔大学，现在我们将要使张量流成为另一个开源的美国人

53
00:03:57,500 --> 00:04:04,380
工作站库可以运行非常快速的邀请，并且可以在您或您的GP上运行。

54
00:04:04,710 --> 00:04:09,570
该库最初由Google的Google大脑小组开发，现在位于Apache下

55
00:04:09,570 --> 00:04:11,210
2.0许可证。

56
00:04:11,340 --> 00:04:17,040
这里要了解的重要一点是，这两个库主要用于研究

57
00:04:17,100 --> 00:04:18,240
和发展目的。

58
00:04:18,270 --> 00:04:23,340
在更深的领域中，这意味着如果您想使用这两个库进行深度学习，

59
00:04:23,340 --> 00:04:26,460
使用它们从头开始构建深度神经网络。

60
00:04:26,550 --> 00:04:31,590
这就是很多行代码，如果您想知道做一些研究以便

61
00:04:31,590 --> 00:04:36,900
改进深度神经网络的发明并开发一种新型的神经网络或任何其他类型的神经网络

62
00:04:36,900 --> 00:04:38,020
深度学习模型。

63
00:04:38,100 --> 00:04:41,050
但这将需要很多代码行。

64
00:04:41,190 --> 00:04:48,150
这就是为什么在本节中我们将不直接使用密集型CNO，因此我们将使用另一个

65
00:04:48,150 --> 00:04:54,160
库以某种方式包装了您在流程方面知道的两个库。

66
00:04:54,450 --> 00:05:01,100
正如您可能已经猜到的，卡拉库是化学家库，

67
00:05:01,100 --> 00:05:05,770
在很少的几行代码中建立更深的道德感，例如深度神经网络。

68
00:05:05,870 --> 00:05:11,090
因此，我们将继续本课程的精神，因为我们将建立一个非常强大的

69
00:05:11,090 --> 00:05:17,060
只需几行代码的深层神经网络，这完全归功于Cara的库。

70
00:05:17,060 --> 00:05:22,070
该库由Google的机器学习科学家Francois chalet再次开发。

71
00:05:22,070 --> 00:05:27,560
好吧，总结一下Cara's是一个基于剧院密集型流程的图书馆，这意味着它可以运行

72
00:05:27,710 --> 00:05:33,580
在能源密集型图书馆上，而正是在我们使用它的过程中，我们学会了建立其效率机制

73
00:05:33,590 --> 00:05:34,400
楷模。

74
00:05:34,400 --> 00:05:39,020
我们将使用Cara's非常有效地构建深度学习模型。

75
00:05:39,020 --> 00:05:42,320
太好了，现在让我们安装这三个库。

76
00:05:42,320 --> 00:05:45,800
因此，执行此操作最简单的方法是从终端执行此操作。

77
00:05:45,980 --> 00:05:46,930
因此，让我们开始吧。

78
00:05:47,120 --> 00:05:50,000
让我们开始吧，您知道我已经在这里为您准备了一切。

79
00:05:50,000 --> 00:05:56,060
因此，我们只需要复制此副本，然后打开一个术语并打开一个终端即可。

80
00:05:56,060 --> 00:06:00,530
您可以转到工作区顶部的工具，然后单击此处。

81
00:06:00,530 --> 00:06:05,410
打开终端，另一种方法是从计算机上打开终端。

82
00:06:05,570 --> 00:06:09,130
所以这就是我要在这里打开主终端的步骤。

83
00:06:09,170 --> 00:06:10,070
这里是。

84
00:06:10,220 --> 00:06:17,110
在终端内，我只需要粘贴以这种方式复制的内容，然后按Enter。

85
00:06:17,360 --> 00:06:20,150
这将自动安装Fianna。

86
00:06:20,540 --> 00:06:21,750
所以现在正在这样做。

87
00:06:21,770 --> 00:06:22,660
开始了。

88
00:06:22,700 --> 00:06:24,870
安装连接的软件包的编号

89
00:06:25,070 --> 00:06:28,340
成功安装了具有最新版本的新产品。

90
00:06:28,340 --> 00:06:28,630
好吧。

91
00:06:28,640 --> 00:06:29,440
大。

92
00:06:29,540 --> 00:06:35,800
所以我要把终端放在一边，现在我们要安装10来进行安装

93
00:06:35,800 --> 00:06:36,100
的。

94
00:06:36,110 --> 00:06:40,040
因此，我们需要访问该网站，该网站的地址就在这里。

95
00:06:40,070 --> 00:06:45,810
因此，我们将复制所有内容并使用浏览器访问该网站。

96
00:06:46,160 --> 00:06:51,760
所以在这里，我在浏览器中，因此我要将这个地址粘贴到这里。

97
00:06:51,800 --> 00:06:53,750
让我们去那里。

98
00:06:53,750 --> 00:06:54,050
好吧。

99
00:06:54,050 --> 00:06:58,300
因此，这里是下载而不是页面的密集流程。

100
00:06:58,310 --> 00:07:01,730
因此，您将看到您有很多选择来安装数十个流程。

101
00:07:01,880 --> 00:07:07,160
如果要在虚拟环境中安装数十个流，则已在虚拟环境中安装了IP

102
00:07:07,160 --> 00:07:07,980
环境。

103
00:07:08,210 --> 00:07:13,430
anaconda安装，这就是我们现在感兴趣的，因为我们当然使用的是Anaconda。

104
00:07:13,580 --> 00:07:18,770
然后，对于那些可能正在使用daquiri的人，可以将其安装在较暗的容器中，然后您可以

105
00:07:18,770 --> 00:07:20,890
也可以从其他来源安装它。

106
00:07:20,930 --> 00:07:26,690
因此，我们对阁楼的安装方式很感兴趣，因此请单击它，然后我们将转到

107
00:07:26,690 --> 00:07:29,140
Anaconda安装部分。

108
00:07:29,150 --> 00:07:30,920
好吧，现在我们该怎么办。

109
00:07:30,980 --> 00:07:33,900
首先，我们需要创建一个Conder环境。

110
00:07:34,000 --> 00:07:39,120
没有别的需要加强的，要做到这一点，您需要考虑您的Python版本。

111
00:07:39,140 --> 00:07:46,130
因此，如果您拥有Python 2.7或Python 3.5，我想大多数人在跟随Anaconda时都会拥有Python 3.5

112
00:07:46,130 --> 00:07:47,620
安装说明。

113
00:07:47,780 --> 00:07:53,390
因此，我们将在此处采用这一行，当然，如果您拥有Python 2.7，则只需采用这一行

114
00:07:53,450 --> 00:07:57,820
然后将其复制为我现在要在此处为​​第三行所做的操作。

115
00:07:57,950 --> 00:08:03,570
好的，所以复制，然后让我们回到终端并将其粘贴到此处。

116
00:08:03,590 --> 00:08:05,500
好的，然后按Enter。

117
00:08:05,720 --> 00:08:10,640
当然，我会得到这种值错误，因为我已经创建了这个张量，例如

118
00:08:10,640 --> 00:08:14,120
这就是为什么在这里出售该前缀已经存在的原因。

119
00:08:14,120 --> 00:08:20,420
但是，如果不是您的情况，那么如果您从未很好地安装过ansaphone，将会造成紧张的环境。

120
00:08:20,660 --> 00:08:20,960
好吧。

121
00:08:20,960 --> 00:08:22,910
因此，让我们回到张量流。

122
00:08:23,030 --> 00:08:25,300
因此，这是第一个首先完成的工作。

123
00:08:25,490 --> 00:08:29,050
现在第二步第二步是安装张量。

124
00:08:29,240 --> 00:08:35,090
所以我们可以使用Konda或V.I.P安装它，而我们将使用VIP进行安装，因为它是最常见的

125
00:08:35,090 --> 00:08:35,620
方式。

126
00:08:35,630 --> 00:08:42,260
因此，在安装大量流量之前的第二步是激活数十个流量，为此，

127
00:08:42,260 --> 00:08:44,030
需要复制这一行。

128
00:08:44,810 --> 00:08:51,350
复制并再次在终端上将其复制到此处，然后按Enter。

129
00:08:51,570 --> 00:08:52,020
好吧。

130
00:08:52,060 --> 00:08:57,880
现在您可以看到我的舞会在我得到一般提示之前刚刚被更改，现在我有了

131
00:08:57,900 --> 00:08:59,110
流程提示。

132
00:08:59,110 --> 00:09:05,370
好的，这意味着我们处于数十个环境中而已被激活，现在我们可以

133
00:09:05,430 --> 00:09:06,810
安装传输。

134
00:09:07,290 --> 00:09:13,500
所以要安装张力，我们首先需要选择流量二进制或L的TENS，这取决于是否

135
00:09:13,500 --> 00:09:19,110
您想使用SSB-B您或您的GP，您知道如果您没有强大的GP，您和您的

136
00:09:19,110 --> 00:09:23,760
您可以在我们八个人中以非常便宜的价格使用一些功能强大的机器。

137
00:09:23,760 --> 00:09:28,350
如果您有兴趣，可以向我询问有关Amazon Web服务以及有关问答的任何问题。

138
00:09:28,650 --> 00:09:32,730
因此，选择您想要锡比乌（Sibiu）或成为自己的二分之一的Eurail火车。

139
00:09:32,910 --> 00:09:37,920
当然，请确保选择与您的计算机相对应的正确系统（如果您使用的是Linux）

140
00:09:38,310 --> 00:09:43,800
和Python 3.5，他们需要为您考虑这个哲学或这个哲学。

141
00:09:43,920 --> 00:09:45,570
与专利2.7相同。

142
00:09:45,750 --> 00:09:52,090
如果您使用的是Mac，则需要使用CPQ二进制文件考虑这一点，否则所有JBU二进制文件都将被淘汰

143
00:09:52,110 --> 00:09:52,870
Eurail。

144
00:09:53,140 --> 00:09:53,520
好吧。

145
00:09:53,520 --> 00:09:55,370
对于那些使用Windows的人。

146
00:09:55,500 --> 00:10:02,230
好，上面有一部分，它是Windows上的VIP安装。

147
00:10:02,360 --> 00:10:08,420
就像您看到的说明一样，您只需输入以下命令即可

148
00:10:08,420 --> 00:10:09,470
来提示。

149
00:10:09,650 --> 00:10:13,630
好吧，如果您想使用锡比乌，请在此处输入。

150
00:10:14,210 --> 00:10:20,160
如果要使用GP，请在命令提示符下输入此信息。

151
00:10:20,170 --> 00:10:20,930
好吧。

152
00:10:20,990 --> 00:10:24,980
然后让我们回到数十流的安装。

153
00:10:24,980 --> 00:10:30,710
因此，在本课程的这一部分中，我们将使用锡比乌，因为我们也不会构建

154
00:10:30,710 --> 00:10:34,470
深度神经网络，您知道我们将使用两个或三个隐藏层。

155
00:10:34,610 --> 00:10:40,900
因此，除了我们的数据集不会太大（包含10000个观察值）之外，Sibiu也可以。

156
00:10:40,910 --> 00:10:41,780
那也行。

157
00:10:41,780 --> 00:10:46,690
我们将能够使用SFP为该数据集运行人工神经网络。

158
00:10:46,940 --> 00:10:49,160
当然，这不会花费两秒钟。

159
00:10:49,220 --> 00:10:52,700
可能需要一分钟，但我们会喝杯咖啡。

160
00:10:52,730 --> 00:10:54,170
不会太长。

161
00:10:54,170 --> 00:10:59,340
好吧，让我们以C-p为例，您会感觉到自己是l的流二进制。

162
00:10:59,510 --> 00:11:00,970
因此，让我们开始吧。

163
00:11:01,050 --> 00:11:01,940
你去吧

164
00:11:02,080 --> 00:11:02,960
复制。

165
00:11:03,140 --> 00:11:06,060
现在让我们回到终端。

166
00:11:06,110 --> 00:11:08,920
在这里它正面临着它。

167
00:11:08,960 --> 00:11:10,960
然后按回车。

168
00:11:10,970 --> 00:11:18,830
好的，只需要设置此T.F. 二进制文件，您在这里都等于此链接，现在我们终于可以

169
00:11:18,830 --> 00:11:22,250
通过复制此命令来安装数十个流程。

170
00:11:22,310 --> 00:11:26,080
如果您使用的是Python 3，并且希望Python复制此命令。

171
00:11:26,120 --> 00:11:29,210
因此，复制Termino粘贴。

172
00:11:29,450 --> 00:11:35,650
如您所见，您知道我们正在使用这种类型的二进制文件，我们在此定义为此链接。

173
00:11:35,810 --> 00:11:41,410
现在，按Enter，这将最终安装张量流。

174
00:11:41,720 --> 00:11:47,750
好的，首先要下载它，然后再安装所有必需的软件包。

175
00:11:47,750 --> 00:11:50,530
好的，您可以看到我们有这种流程提示。

176
00:11:50,600 --> 00:11:54,610
因此，我们需要返回一般提示，因为现在我们将安装Karris。

177
00:11:54,620 --> 00:12:00,620
因此，返回一般提示的一种有效方法是简单地关闭此处的终端，然后我们将

178
00:12:00,620 --> 00:12:01,490
再次打开。

179
00:12:01,630 --> 00:12:08,630
否则，另一种方法是将其复制并粘贴到您的终端中，这将停用

180
00:12:08,630 --> 00:12:12,170
提示张量返回此处的常规提示。

181
00:12:12,290 --> 00:12:15,210
但是您也可以关闭终端，然后重新打开。

182
00:12:15,230 --> 00:12:21,410
好吧，现在让我们安装Karris让我们回到Spider并最终安装我们的最终库

183
00:12:21,410 --> 00:12:25,580
我们将使用它来非常高效地构建深度神经网络

184
00:12:25,580 --> 00:12:26,440
代码行。

185
00:12:26,630 --> 00:12:32,900
那就是Carrot的，所以Cara的要安装Karris，我们只需要复制这行

186
00:12:32,930 --> 00:12:36,510
Cara并将其升级到最新版本。

187
00:12:36,740 --> 00:12:37,960
因此，让我们复制一下。

188
00:12:38,000 --> 00:12:39,870
让我们回到终端。

189
00:12:39,950 --> 00:12:40,610
这里是。

190
00:12:40,670 --> 00:12:41,840
让我们粘贴一下。

191
00:12:41,840 --> 00:12:49,530
然后按Enter键，现在成功将Cara的安装Kerrison下载到IT BACK JUST EVERYTHING

192
00:12:49,530 --> 00:12:50,260
已安装。

193
00:12:50,280 --> 00:12:50,860
大。

194
00:12:50,880 --> 00:12:53,630
我们准备建立A-N。

195
00:12:53,670 --> 00:12:54,010
好吧。

196
00:12:54,030 --> 00:12:54,990
那就是我们要做的。

197
00:12:54,990 --> 00:12:57,000
从下一个Tauriel开始。

198
00:12:57,000 --> 00:12:58,590
在那之前德国学习

