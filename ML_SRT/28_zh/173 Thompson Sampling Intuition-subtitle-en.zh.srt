1
00:00:00,830 --> 00:00:03,470
您好，欢迎回到机器学习课程。

2
00:00:03,470 --> 00:00:08,740
今天我们有一个非常有趣的话题，今天我们在谈论汤普森采样和算法

3
00:00:08,860 --> 00:00:09,690
直觉。

4
00:00:09,740 --> 00:00:15,940
我们再一次将要使用这种算法，解决了多武装土匪问题。

5
00:00:16,160 --> 00:00:16,480
好吧。

6
00:00:16,490 --> 00:00:18,070
因此，让我们开始吧。

7
00:00:18,080 --> 00:00:20,820
快速复习上多武装土匪问题。

8
00:00:20,840 --> 00:00:25,630
我们有几台老虎机，每台老虎机背后都有一个分布。

9
00:00:25,630 --> 00:00:27,130
您要G-5吗？

10
00:00:27,140 --> 00:00:32,810
我们不知道这些分布是，我们需要开始打这些机器，并在同一

11
00:00:32,810 --> 00:00:39,700
时间弄清楚哪一个具有最佳的分布，使我们再利用最分布。

12
00:00:39,860 --> 00:00:45,770
而且我们需要一些时间来解决这个问题，因此我们需要在流程中最大化我们的回报

13
00:00:45,770 --> 00:00:46,290
计算。

14
00:00:46,290 --> 00:00:53,860
因此，我们必须在勘探与开发之间找到理想的平衡或折衷。

15
00:00:53,870 --> 00:00:59,510
我们之前有一些关于这些事情的教程，所以我们谈到了多武装匪徒问题

16
00:00:59,530 --> 00:01:00,570
你知道很多细节。

17
00:01:00,580 --> 00:01:04,200
如果您还没有看过本教程，强烈建议您跳到上一节并观看

18
00:01:04,200 --> 00:01:12,020
在那里，他们也了解上限置信度上限算法，将真正帮助您掌握

19
00:01:12,320 --> 00:01:20,570
汤普森抽样的概念，所以，如果您还没有看过置信区间上限的教程，那么我

20
00:01:20,570 --> 00:01:24,260
强烈建议在继续今天的讲座之前先进行检查。

21
00:01:24,260 --> 00:01:24,700
好吧。

22
00:01:24,740 --> 00:01:26,760
因此，让我们开始吧。

23
00:01:26,780 --> 00:01:34,840
mulcher臂章问题的简要概述如下：我们有d臂，例如，臂是广告

24
00:01:34,850 --> 00:01:35,990
我们只是向用户播放。

25
00:01:35,990 --> 00:01:38,730
每次他们连接到网页时都是这样。

26
00:01:38,780 --> 00:01:40,850
确实是的。

27
00:01:41,330 --> 00:01:47,470
多武装匪徒问题的更多或更现代表示形式的现代应用是广告

28
00:01:47,480 --> 00:01:54,800
因此，当您展示非常相似的广告或要应用的算法时，可以学习

29
00:01:55,490 --> 00:01:59,210
可用于解决您展示广告的问题。

30
00:01:59,210 --> 00:02:04,400
如果您回到这里而不是拥有这些老虎机，那么每一个都是不同的添加，您

31
00:02:04,400 --> 00:02:09,260
想找出这些广告中哪一个是效果最好的广告，但您没有时间做

32
00:02:09,260 --> 00:02:09,740
AB测试。

33
00:02:09,740 --> 00:02:13,200
您没有资金或资源来进行AB测试。

34
00:02:13,220 --> 00:02:15,080
您想即时解决。

35
00:02:15,080 --> 00:02:21,170
那就是当您应用这些算法之一时，我们将在本课程的这一部分中讨论

36
00:02:21,250 --> 00:02:26,110
相似的课程或其他很多其他现代问题。

37
00:02:26,110 --> 00:02:31,210
那里肯定有问题，因为这些算法也对它们有效。

38
00:02:31,220 --> 00:02:34,090
好的，所以回到这里，我们有了DRM。

39
00:02:34,100 --> 00:02:39,020
例如，武器是我们刚放置的广告，每次用户访问时，它都使用一个可连接到网页的外壳

40
00:02:39,020 --> 00:02:45,500
连接到该页面，该页面在每一轮都被视为一轮，我们选择显示哪个广告

41
00:02:45,500 --> 00:02:53,180
如果用户遇到障碍物或广告，则该广告向用户提供了0或1 1的奖励

42
00:02:53,170 --> 00:02:54,000
没有被点击。

43
00:02:54,110 --> 00:03:00,230
对于真正的土匪来说，这将是一场货币战争，或者只是一场战争，这将是一场战争。

44
00:03:00,230 --> 00:03:01,640
值。

45
00:03:01,640 --> 00:03:06,280
我们的目标是使Maxxis通过多次运行获得最大的总回报。

46
00:03:06,290 --> 00:03:11,050
好的，这样可以快速解决问题，并且正在解决。

47
00:03:11,280 --> 00:03:20,060
然后，我们得到了一些看起来非常复杂的数学和贝叶斯推论以及所有这些分布

48
00:03:21,160 --> 00:03:28,810
以及叙利亚的可操作性以及其他先前的分发和更好的处置等。

49
00:03:28,960 --> 00:03:34,420
我们现在不会对此进行深入研究，因此标题将需要一些时间来完成

50
00:03:34,420 --> 00:03:43,210
该幻灯片与您在实用教程中一起使用，因为我们将从头开始对此进行编码。

51
00:03:43,450 --> 00:03:44,440
这在我们。

52
00:03:44,740 --> 00:03:49,360
因此，他实际上将引导您浏览此幻灯片。

53
00:03:49,360 --> 00:03:55,900
我们今天的目标是了解所有这些事情背后的直觉，因此我们将跳过

54
00:03:55,960 --> 00:03:58,710
跳过幻灯片并转到直觉部分。

55
00:03:58,720 --> 00:04:04,570
这是实际教程中将要使用的实际步骤。

56
00:04:04,570 --> 00:04:07,900
因此，再次请教您如何浏览这张幻灯片。

57
00:04:08,440 --> 00:04:10,300
今天，我们谈论的是直觉。

58
00:04:10,480 --> 00:04:14,230
所以这将很有趣，这是一些有趣的幻灯片。

59
00:04:14,260 --> 00:04:16,960
并准备好玩一个有趣的旅程。

60
00:04:16,960 --> 00:04:22,930
因此，抢一杯咖啡或一杯茶和一些爆米花，让我们开始吧。

61
00:04:22,930 --> 00:04:23,220
好吧。

62
00:04:23,230 --> 00:04:26,390
所以在这里，我们有了一个规模。

63
00:04:26,570 --> 00:04:27,250
为什么。

64
00:04:27,280 --> 00:04:33,120
或水平轴是收益，我们期望从某个波段获得收益。

65
00:04:33,130 --> 00:04:37,540
所以我们要看一个简化的问题，我们要看另外五个甚至十个

66
00:04:37,540 --> 00:04:42,000
将获得三名土匪，因为他们将在这张图表上进行很多操作。

67
00:04:42,010 --> 00:04:46,960
我不想把它弄得乱七八糟，我们想让它尽可能简单，以便我们能够理解

68
00:04:46,960 --> 00:04:53,970
这个概念，然后适用于五台或十台甚至更多的机器。

69
00:04:54,400 --> 00:05:01,270
所以在这里，我们得到了回报和这些垂直线，就像在高置信度的情况下一样

70
00:05:01,270 --> 00:05:01,990
界限。

71
00:05:02,080 --> 00:05:08,740
我们有一条水平线，这些垂直线代表了每台机器的预期收益

72
00:05:08,740 --> 00:05:15,370
因此我们拥有的三台机器中的每台机器都有一个分布

73
00:05:15,370 --> 00:05:23,020
后面的数字，以便将您每场比赛获胜的金额作为随机值从中选出

74
00:05:23,020 --> 00:05:24,200
那个分布。

75
00:05:24,650 --> 00:05:28,780
当您获得职位描述，但基本上只是想像一下这些职位背后的分布

76
00:05:30,870 --> 00:05:31,780
期望值。

77
00:05:31,780 --> 00:05:38,700
因此，这仅是集中分配的中心或该机器的实际预期收益。

78
00:05:38,710 --> 00:05:47,170
我们只是在这里可视化它，但这就像在实际机器中调查它一样

79
00:05:47,170 --> 00:05:49,950
本身喜欢将其拆开并了解其工作原理。

80
00:05:49,960 --> 00:05:53,710
当您在玩这些机器时，实际上是机器的设计师，您当然不会

81
00:05:53,710 --> 00:05:54,030
知道。

82
00:05:54,040 --> 00:05:58,620
因此，这是一些可以指导我们的其他信息。

83
00:05:58,620 --> 00:06:03,270
这将帮助我们了解算法的实际工作原理，算法本身不知道此信息

84
00:06:03,270 --> 00:06:03,440
对。

85
00:06:03,460 --> 00:06:07,800
因此，这是隐藏的，但对我们而言仅此而已，以便我们可以更好地了解发生了什么。

86
00:06:08,020 --> 00:06:11,640
因此，这些是预期收益，是每台机器的实际预期收益。

87
00:06:11,640 --> 00:06:15,850
很明显，如果您马上知道这一点，您会说这三台机器或黄色机器

88
00:06:15,880 --> 00:06:19,990
是最好的，因为它具有最高的回报权。

89
00:06:19,990 --> 00:06:23,070
它具有您总是会押注于此的最高回报。

90
00:06:23,080 --> 00:06:25,990
但是，您仍然不知道这一点。

91
00:06:26,110 --> 00:06:28,800
好的，那么该算法会发生什么。

92
00:06:28,810 --> 00:06:34,450
首先，就像使用高置信带算法一样，您一无所知。

93
00:06:34,480 --> 00:06:42,010
您不了解事物的当前状况或状态，因此不了解所有机器

94
00:06:42,010 --> 00:06:42,670
都是一样的

95
00:06:42,730 --> 00:06:49,520
为了获得一些数据进行分析，您至少需要进行一轮甚至几轮试验。

96
00:06:49,550 --> 00:06:50,600
让我们来看看。

97
00:06:50,620 --> 00:06:56,100
假设发生了这种情况，并且有一些机器在进行试运行。

98
00:06:56,140 --> 00:06:57,580
一台或蓝机。

99
00:06:57,730 --> 00:07:05,440
基于这些试验，汤普森算法得到了一些帮助，这就是它开始得到的地方

100
00:07:05,470 --> 00:07:10,530
与最高条件不同，但我们将构建分配权。

101
00:07:10,540 --> 00:07:12,060
因此，我们将进行分发。

102
00:07:12,080 --> 00:07:13,280
其次是什么意思。

103
00:07:13,300 --> 00:07:17,500
但是现在让我们对绿色机器进行相同的处理。

104
00:07:17,500 --> 00:07:24,310
因此，我们只是几次拉动手臂，例如四次，我们得到了一些

105
00:07:24,310 --> 00:07:28,430
值，并且将会在某个地方。

106
00:07:28,450 --> 00:07:31,590
显然是实际的预期收益。

107
00:07:31,660 --> 00:07:36,230
基于此，这些值当然可能会超过四个。

108
00:07:36,340 --> 00:07:42,360
我们正在构建对事物当前状态的某种分布或某种感知。

109
00:07:42,400 --> 00:07:44,730
这就是它变得有趣的部分。

110
00:07:44,740 --> 00:07:54,610
因此，这些分布的实际含义并不是您最初可能会想到的

111
00:07:55,000 --> 00:08:02,410
实际上是在向我们展示，或者它们所代表的程度没有达到我们不试图猜测分布的程度

112
00:08:02,410 --> 00:08:03,430
在机器后面。

113
00:08:03,430 --> 00:08:05,980
因此，可能想到的第一件事是。

114
00:08:06,130 --> 00:08:12,550
好的，我们已经构建了分布，因此蓝色分布是我们尝试进行猜测的尝试

115
00:08:12,550 --> 00:08:15,300
蓝机后面的实际分配权。

116
00:08:15,310 --> 00:08:20,460
预期这将变为绿色的分布是针对绿色机器的大象。

117
00:08:21,160 --> 00:08:23,250
好吧，实际上不是这样。

118
00:08:23,290 --> 00:08:28,260
我们正在构建一个完全不同于这个世界的东西。

119
00:08:28,340 --> 00:08:36,380
我们正在构建我们认为实际期望值可能位于的分布。

120
00:08:37,230 --> 00:08:44,880
了解这一点非常重要，因此，如果您要这样想，我们正在创建一种

121
00:08:44,880 --> 00:08:48,800
我们正在创建一种辅助机制来解决该问题。

122
00:08:48,810 --> 00:08:56,550
所以我们不是不是在尝试重新创建这些机器，而是在重新创建这些机器的可能方式

123
00:08:56,550 --> 00:09:03,960
可能是在某种意义上被创造出来的，所以让我们巩固一下，这就是我们认为的地方

124
00:09:04,170 --> 00:09:09,310
期望的实际期望值是，所以让我们看一下蓝色的。

125
00:09:09,330 --> 00:09:15,810
我们有四个值，并基于这四个值构造了此分布

126
00:09:15,810 --> 00:09:21,300
出现，这向我们展示了价值之星在哪里。

127
00:09:21,300 --> 00:09:24,000
因此，这是mystar，实际上是mystar，但我们不知道。

128
00:09:24,000 --> 00:09:28,830
因此算法不知道，因此构造了分布，试图猜测该值在哪里

129
00:09:28,830 --> 00:09:29,150
是。

130
00:09:29,160 --> 00:09:32,070
当然，堪萨斯州说它在这里或那里。

131
00:09:32,240 --> 00:09:36,630
这是说好，这里很有可能，但也可能在这里，也可能在这里

132
00:09:36,630 --> 00:09:37,180
可能在这里。

133
00:09:37,320 --> 00:09:42,210
随着您的离开，可能性下降，但它仍可能在此空间中的任何位置。

134
00:09:42,210 --> 00:09:45,060
绿色发行版也是如此。

135
00:09:45,060 --> 00:09:50,490
因此，根据我们在此处看到的值和在四个四轮中选择的谷值

136
00:09:52,620 --> 00:10:02,260
该算法已创建了此分布，这就是说此实际的实际预期回报

137
00:10:02,500 --> 00:10:08,220
来自绿色机器的机器位于该区域中的某个位置，最有可能在此处。

138
00:10:08,230 --> 00:10:11,400
但是它可能在这里，可能在这里，可能在这里，它可能在任何地方。

139
00:10:11,410 --> 00:10:17,950
因此，与您可能离开的地方相比，现在最有可能在这里发生的可能性是

140
00:10:17,950 --> 00:10:21,110
实际上它在那里滴了一些油。

141
00:10:21,110 --> 00:10:27,020
因此，在展台上非常重要，因此只需重申一下，我们就不会试图猜测分布

142
00:10:27,040 --> 00:10:28,290
在机器后面。

143
00:10:28,450 --> 00:10:34,230
我们正在做一些魔术或帽子戏法。

144
00:10:34,250 --> 00:10:42,040
我不认识帕特里克，但我们正在努力做到这一点，从而建立了对我们正在试图建立的世界的认识

145
00:10:44,380 --> 00:10:51,580
数学上解释我们认为实际上正在发生或可能正在发生的事情，那就是

146
00:10:51,720 --> 00:11:00,100
很重要也很重要，因为这表明Tomsen采样是概率

147
00:11:00,220 --> 00:11:01,120
算法。

148
00:11:01,120 --> 00:11:07,150
最高置信度Bond是一种确定性算法，其中所有操作都很严格

149
00:11:07,150 --> 00:11:12,640
没关系，所以无论谁吃馅饼，都会有一些会前会议决定我们要选择什么，依此类推。

150
00:11:12,700 --> 00:11:18,020
但是在这里，我们正在创造一种对我们所说的世界的概率感知。

151
00:11:18,130 --> 00:11:22,630
因此它可能在这里，但可能在蓝色区域中的任何地方，这可能是历史上的新事物

152
00:11:22,690 --> 00:11:27,810
依此类推，您将在下一张幻灯片中确切地知道我们为什么这样做，以了解其工作原理。

153
00:11:28,000 --> 00:11:29,610
让我们直接进入。

154
00:11:29,620 --> 00:11:35,770
现在，让我们了解一下，这可能是使您了解我们所拥有的东西中最困难的部分

155
00:11:35,770 --> 00:11:36,190
创建。

156
00:11:36,220 --> 00:11:43,690
现在我们已经创建了它，让我们看看算法将如何利用这种辅助机制

157
00:11:43,690 --> 00:11:44,300
我们有。

158
00:11:44,380 --> 00:11:46,000
克里斯·劳伦斯。

159
00:11:46,510 --> 00:11:49,380
因此，我们考虑的就是我们的分布。

160
00:11:49,390 --> 00:11:53,540
因此，这些是每台机器的实际预期收益。

161
00:11:53,740 --> 00:11:57,410
但是算法不知道它们是旧算法创建的。

162
00:11:57,430 --> 00:12:05,700
这些分布是否允许我们猜测实际分布可能在哪里

163
00:12:05,690 --> 00:12:07,200
每个这些机器。

164
00:12:07,210 --> 00:12:11,050
所以要做的是实际上将触发这些分布中的每一个。

165
00:12:11,050 --> 00:12:16,450
因此，就像我们处于常年状态一样，我们必须选择要使用的机器。

166
00:12:16,480 --> 00:12:23,230
因此，算法将执行的操作是调用该分布，并且将失去价值

167
00:12:23,230 --> 00:12:27,780
出于怀疑，假设它拉出该值，然后将值从网格分布中拉出。

168
00:12:27,880 --> 00:12:33,220
因此，将这些值从怪异的愿景中拉出来，然后说出Yeldon的值。

169
00:12:33,250 --> 00:12:35,540
这就是那个决定或那个价值。

170
00:12:35,710 --> 00:12:39,280
并再次根据分配权拉动他们。

171
00:12:39,280 --> 00:12:44,980
所以这是值的分布，因此基本上最有可能将值拉到

172
00:12:44,980 --> 00:12:48,110
区域，然后您走的路就不太可能了。

173
00:12:48,130 --> 00:12:54,520
它或多或少的可能性越来越小，但仍然可能发生，您实际上可以看到此黄色值

174
00:12:54,520 --> 00:12:59,260
距中心很远，但仍然有可能拉扯了Valier分布，并且可以

175
00:12:59,260 --> 00:13:03,610
发生并从绿色分布中挑选出该Greenan的价值完全可以长期发生

176
00:13:03,610 --> 00:13:07,730
从长远来看，当然会选在靠近中心的地方。

177
00:13:07,900 --> 00:13:11,370
但是，一旦一次性完成，就可能完全发生。

178
00:13:11,500 --> 00:13:17,950
因此，现在让我们选择这些值并猜测这意味着什么，这实际上意味着我们

179
00:13:17,950 --> 00:13:19,030
有。

180
00:13:19,030 --> 00:13:23,570
通过这样做，我们生成了自己的品牌配置。

181
00:13:23,830 --> 00:13:30,430
因此我们创建了一个假设或虚构的

182
00:13:33,330 --> 00:13:41,100
在我们自己的虚拟世界中说的好坏的批处理或假想的机器集

183
00:13:41,140 --> 00:13:45,840
因此，期望值是蓝色机器的实际期望收益。

184
00:13:45,850 --> 00:13:50,740
该值是绿色机器的实际预期收益吗？

185
00:13:50,740 --> 00:13:52,450
黄色机器的收益就是这个值。

186
00:13:52,450 --> 00:14:01,600
因此，我们创建了这个零下对世界说说或假设的虚拟现实，其中我们拥有了所有

187
00:14:01,600 --> 00:14:04,950
拥有三个土匪，以及我们将如何解决这个问题。

188
00:14:05,680 --> 00:14:07,670
而这是一个很容易解决的问题。

189
00:14:07,690 --> 00:14:09,760
显然如何解决这个问题。

190
00:14:09,790 --> 00:14:15,620
您只需要选择这台机器，因为这台机器的预期收益最高。

191
00:14:15,940 --> 00:14:20,720
我只是想在虚拟世界中使用这台机器进行搜索。

192
00:14:20,780 --> 00:14:29,290
所以新的现实，这意味着现在我们将这个结果转换为现实世界

193
00:14:29,290 --> 00:14:32,150
虚拟的假设世界。

194
00:14:32,140 --> 00:14:37,420
我们选择了绿色机器，因此在现实世界中，算法也会选择绿色机器

195
00:14:37,420 --> 00:14:41,560
机器，这将基本上拉动该机器的控制杆。

196
00:14:41,590 --> 00:14:42,080
对。

197
00:14:42,160 --> 00:14:48,160
实际上，它将为机器吐出或吐出一个值，从而为我们提供一个值。

198
00:14:48,160 --> 00:14:53,680
值，但是该值将基于这台机器背后的分布

199
00:14:53,680 --> 00:14:55,860
该分配的实际期望值。

200
00:14:55,870 --> 00:15:01,510
因此，该值可能会在此处接近实际预期值的某处

201
00:15:01,510 --> 00:15:01,810
成为。

202
00:15:01,810 --> 00:15:03,480
同样，所有这些背后都有分布。

203
00:15:03,620 --> 00:15:06,260
到目前为止，您可以这样做，但是在这种情况下可以说是这样。

204
00:15:06,460 --> 00:15:06,750
好吧。

205
00:15:06,760 --> 00:15:10,630
因此，现在此信息对于算法而言是新信息。

206
00:15:10,780 --> 00:15:16,450
要做的是说Aha OK，所以我拉绿色杆。

207
00:15:16,470 --> 00:15:18,860
绿色机器的操纵杆我得到了这个值。

208
00:15:19,030 --> 00:15:22,030
所以现在我必须调整对世界的看法。

209
00:15:22,030 --> 00:15:28,880
是的，所以我有先验概率，所以这些都是给绿色机器的。这是我的先验分布。

210
00:15:28,880 --> 00:15:33,190
这是法国愿景发挥作用的地方，或者已经发挥作用，这就是地方

211
00:15:33,190 --> 00:15:34,900
添加到八军推断。

212
00:15:34,900 --> 00:15:37,370
这是我们的先前产品。

213
00:15:37,390 --> 00:15:39,390
现在我们有了一些新信息。

214
00:15:39,490 --> 00:15:44,230
这是我们将要添加的新信息，并在哪里查看如何改变我们的看法

215
00:15:44,260 --> 00:15:46,850
在世界范围内，我们对角色的看法已经改变。

216
00:15:46,930 --> 00:15:53,680
传统有所改变，并且变得越来越狭窄，因为我们有更多的样本信息

217
00:15:53,680 --> 00:15:55,040
规模和信条，当然。

218
00:15:56,420 --> 00:16:00,680
对不起，当然不会增加那么多。

219
00:16:00,680 --> 00:16:06,120
这只是一个例子，用以说明我们正在谈论的要点。

220
00:16:06,380 --> 00:16:11,930
但这就是每次添加新信息时我们的分布变得越来越

221
00:16:11,930 --> 00:16:12,910
更精致。

222
00:16:13,160 --> 00:16:18,230
好吧，现在我们对世界有了新的认识，接下来发生的就是新一轮。

223
00:16:18,230 --> 00:16:18,500
对。

224
00:16:18,500 --> 00:16:21,000
同样的事情，我们将为神经元再次做同样的事情。

225
00:16:21,230 --> 00:16:28,460
再一次，我们生成或从分布中选择一些我们已经构建的值

226
00:16:28,520 --> 00:16:36,440
一个或我们在虚拟虚拟现实或假设环境中生成自己的品牌配置

227
00:16:36,440 --> 00:16:41,300
从这三个世界中我们必须选择最好的强盗，当然这里是黄色的

228
00:16:41,320 --> 00:16:48,710
强盗，我们现在要在现实世界中集中力量，拉动黄色强盗的杠杆

229
00:16:49,130 --> 00:16:50,320
所有算法都可以做到这一点。

230
00:16:50,330 --> 00:16:54,020
这将触发黄土匪背后的分布。

231
00:16:54,080 --> 00:16:56,600
这将给我们带来某种价值。

232
00:16:56,600 --> 00:17:00,320
这就是我们在现实世界中获得的实际价值。

233
00:17:00,320 --> 00:17:05,840
现在，我们将把这种价值纳入我们对世界的认识以及对世界的认识。

234
00:17:05,840 --> 00:17:07,360
世界将会改变。

235
00:17:07,390 --> 00:17:10,910
只是我们现在又陷入债务。

236
00:17:10,910 --> 00:17:11,290
好吧。

237
00:17:11,300 --> 00:17:16,700
因此，让我们再做一次，以便我们实践所有这些背后的逻辑。

238
00:17:16,730 --> 00:17:23,670
因此，神经元会产生大量的带状配置权。

239
00:17:23,690 --> 00:17:31,460
因此，这就是我们认为我们的预期实际预期回报将是奥尔本的悔。

240
00:17:31,460 --> 00:17:37,880
这显然是我们将要使用的最好的设备，黄色的机器是可以使用的杠杆

241
00:17:37,880 --> 00:17:43,530
触发旧机器背后的分布将在现实世界中创造出价值。

242
00:17:43,620 --> 00:17:50,120
有一个价值，然后我们将不得不再次调整对世界的认识，以匹配或匹配

243
00:17:50,120 --> 00:17:57,050
合并新信息，以此类推，我们将继续这样做，直到达到目的为止

244
00:17:57,170 --> 00:18:02,960
我们对分布进行了实质性的改进，图片看起来像这样，所以它们可能是

245
00:18:02,960 --> 00:18:04,010
提供更多。

246
00:18:04,040 --> 00:18:08,870
这个可能会更有趣，这个可能会更精致，但是正如您从那里看到的那样，我们慢慢地

247
00:18:08,870 --> 00:18:14,820
将开始基于黄色机器生成越来越多的子弹

248
00:18:14,870 --> 00:18:20,450
所以从长远来看，这些方法甚至可能无法得到完善，因为我们的观点

249
00:18:20,450 --> 00:18:25,280
是找到最好的机器来找到它并尽可能地利用它。

250
00:18:25,370 --> 00:18:26,450
所以我们走了。

251
00:18:26,450 --> 00:18:30,590
这几乎就是Tomsen采样算法的工作原理。

252
00:18:30,590 --> 00:18:39,800
正如您所看到的，这是一个棒算法，每次我们生成这些值时，它们都是友好的

253
00:18:39,800 --> 00:18:49,310
建立假想的匪徒，然后我们解决这个问题，然后应用

254
00:18:49,310 --> 00:18:50,420
结果进入现实世界。

255
00:18:50,540 --> 00:18:54,560
我们正在根据产生的新信息调整对现实的感知，然后

256
00:18:54,560 --> 00:18:55,380
再做一次。

257
00:18:55,580 --> 00:18:59,710
因此希望这是一个有趣的教程。

258
00:18:59,720 --> 00:19:02,050
我发现此算法非常酷。

259
00:19:02,150 --> 00:19:08,360
在下一个教程中，我们将比较置信度和汤普森抽样

260
00:19:08,360 --> 00:19:12,190
算法，我迫不及待地想看到那里，直到下一次愉快的分析。

