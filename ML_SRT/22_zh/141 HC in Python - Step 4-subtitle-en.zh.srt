1
00:00:00,390 --> 00:00:02,890
您好，欢迎来到本Python教程。

2
00:00:02,970 --> 00:00:08,310
因此，在之前的教程中，我们在层次化集群过程中执行了前三个步骤。

3
00:00:08,310 --> 00:00:14,040
第一步是导入我们的数据集并准备包含两个我们感兴趣的列的数据X

4
00:00:14,040 --> 00:00:16,650
在年度收入和支出得分中。

5
00:00:16,710 --> 00:00:21,060
然后第二步，我们习惯了用克来冒险，以找到最佳的客户数量。

6
00:00:21,270 --> 00:00:23,680
通过这样做，我们发现了五个集群。

7
00:00:23,910 --> 00:00:30,240
然后在第三步中，通过使用

8
00:00:30,240 --> 00:00:36,840
参数聚类数目等于5且核距离的增聚类

9
00:00:37,170 --> 00:00:43,530
并授予链接，然后我们针对数据X完成了这个准备好的扩充聚类算法

10
00:00:43,890 --> 00:00:50,700
通过使用Philbrick方法，该方法不仅使扩充聚类适合我们的数据X，而且还创建了

11
00:00:50,700 --> 00:00:56,720
为每个客户返回的客户群的向量。

12
00:00:56,970 --> 00:00:57,290
好。

13
00:00:57,300 --> 00:00:59,830
因此，通过执行这三个步骤，我们完成了工作。

14
00:00:59,880 --> 00:01:06,300
我们将分层聚类算法正确地适合我们的数据X，现在花点时间玩

15
00:01:06,420 --> 00:01:10,680
让我们可视化所有结果，尤其是客户群。

16
00:01:10,680 --> 00:01:16,440
你知道这就像电影导演一样，刚刚完成了他的电影制作，而在他出色的工作之后

17
00:01:16,470 --> 00:01:19,160
他将要在这里观看首映式对我们来说是一样的。

18
00:01:19,170 --> 00:01:23,610
我们做了出色的工作，使层次化聚类适合数据集，现在我们将要观察

19
00:01:23,610 --> 00:01:26,340
层次聚类结果的首映式。

20
00:01:26,610 --> 00:01:29,340
好，让我们在这里介绍一个新的部分。

21
00:01:29,580 --> 00:01:36,240
可视化集群，实际上，我们将在此新步骤中放入此处的代码是

22
00:01:36,240 --> 00:01:42,150
与我们在Kamins步骤中用于可视化分类器的代码完全相同。

23
00:01:42,150 --> 00:01:48,450
因此，让我们变得高效吧，我们不要在本节中重新输入整个代码，而去探索一下

24
00:01:48,870 --> 00:01:51,360
来获取我们的Kamins Python代码。

25
00:01:51,630 --> 00:01:56,440
因此，我们需要单击此处的向上箭头以转到上一个文件夹。

26
00:01:56,700 --> 00:02:03,390
然后我们在这里打开Kamin分区文件夹，然后双击这里的python文件

27
00:02:03,390 --> 00:02:08,620
实现时使用的Python代码来自某些python。

28
00:02:08,880 --> 00:02:14,370
在这里，我们只复制可视化集群的最后一部分，然后回到字节和

29
00:02:14,370 --> 00:02:19,950
查找分层群集，然后将其粘贴到此处，您将立即看到

30
00:02:20,100 --> 00:02:23,130
我们只需要替换一件小小的事情。

31
00:02:23,160 --> 00:02:24,620
你能猜出这是什么。

32
00:02:25,020 --> 00:02:28,050
好的，让我们回到卡明斯野牛文件。

33
00:02:28,410 --> 00:02:35,370
正如您在将游戏的多剂量设置此处的步骤中看到的那样，我们使用Kamins类进行准备

34
00:02:35,370 --> 00:02:42,000
我们的Kamins算法，然后我们使用拟合预测方法将Kamins算法拟合到我们的数据X

35
00:02:42,240 --> 00:02:46,300
并创建向量，即维京团簇的向量。

36
00:02:46,500 --> 00:02:52,520
然后，在可视化群集的最后一步中，您可以看到我们使用了群集y的向量

37
00:02:52,530 --> 00:02:57,550
k在这里意味着在每个正散点图中不同的群集。

38
00:02:57,570 --> 00:03:01,930
因此，让我们回到分层聚类python文件。

39
00:03:02,280 --> 00:03:07,380
如您所见，在适合他们的层次聚类中，所有步骤都是如此。

40
00:03:07,560 --> 00:03:12,490
它与Kamins中的完全相同。唯一的区别是，我们称簇为向量。

41
00:03:12,490 --> 00:03:15,320
为什么要HC 而不是y k表示。

42
00:03:15,390 --> 00:03:20,850
因此，在最后一步中，在此处可视化群集，我们唯一要做的就是替换y k

43
00:03:20,850 --> 00:03:28,200
y H.C.的意思 那是因为我们采用完全相同的代码结构采用完全相同的方法

44
00:03:28,560 --> 00:03:31,410
在k均值和层次聚类中。

45
00:03:31,740 --> 00:03:38,000
好吧，让我们这样做吧，让我们用白色C案例代替人类为什么我要迅速做到这一点。

46
00:03:38,250 --> 00:03:40,300
我们按下命令并控制我们。

47
00:03:40,500 --> 00:03:44,420
这里我们用Y Z代替y k

48
00:03:48,630 --> 00:03:54,360
并且我们还需要做的是删除用于绘制群集中几个世纪的线。

49
00:03:54,360 --> 00:03:55,890
Kamins算法。

50
00:03:55,890 --> 00:03:58,250
因此，在这里，我们希望将其用于分层聚类。

51
00:03:58,290 --> 00:03:59,560
因此，让我们摆脱它。

52
00:03:59,970 --> 00:04:00,630
好吧。

53
00:04:01,110 --> 00:04:07,170
现在我们需要做的就是在此处选择此代码部分，然后按Command Control并按Enter

54
00:04:07,260 --> 00:04:10,460
执行并开始观看首映式。

55
00:04:10,470 --> 00:04:12,030
这就是本教程的结尾。

56
00:04:12,030 --> 00:04:13,800
我会让你享受首映式。

57
00:04:14,010 --> 00:04:19,440
在下一个教程中，我们将对聚类结果进行分析，我将解释

58
00:04:19,440 --> 00:04:22,260
如何重用此代码解决业务问题。

59
00:04:22,260 --> 00:04:27,820
所以我要按命令，请输入执行并欣赏表演。

