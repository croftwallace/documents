1
00:00:00,180 --> 00:00:05,760
您好，欢迎使用以下将实施Logistic的教程中的Python教程

2
00:00:05,760 --> 00:00:11,820
在Python上进行回归分析，我迫不及待地向您展示最终结果，向您展示逻辑回归如何

3
00:00:12,020 --> 00:00:16,480
设法仅将某些类别分开并预测二进制结果。

4
00:00:16,500 --> 00:00:23,100
因此，让我们现在开始制作模型并开始，我们需要设置工作目录，这样我们就可以

5
00:00:23,100 --> 00:00:28,240
转到此处的文件导出，然后转到我们的机器学习azy文件夹。

6
00:00:28,410 --> 00:00:32,930
第三部分分类，然后进行逻辑回归。

7
00:00:32,980 --> 00:00:34,350
好的，那就是正确的文件夹。

8
00:00:34,350 --> 00:00:35,680
确保已设置数据。

9
00:00:35,670 --> 00:00:37,760
社交网络添加为。

10
00:00:38,100 --> 00:00:43,130
然后不要忘记单击此处的小按钮将文件夹设置为工作目录。

11
00:00:43,510 --> 00:00:43,950
好吧。

12
00:00:43,970 --> 00:00:50,250
现在，制作机器学习模型的真正第一步是预处理数据并执行此操作

13
00:00:50,250 --> 00:00:54,670
当然，我们将使用我们在第1部分中准备的数据预处理模板。

14
00:00:54,690 --> 00:00:59,830
因此，我们将复制所有这些副本并将其粘贴到此处。

15
00:00:59,910 --> 00:01:02,300
所以现在我们只需要更改一些内容。

16
00:01:02,370 --> 00:01:05,810
首先，让我们导入三个基本库。

17
00:01:05,910 --> 00:01:06,690
开始了。

18
00:01:06,870 --> 00:01:09,570
然后在这里我们需要更改数据集的名称。

19
00:01:09,760 --> 00:01:16,740
这里当然是社交下划线网络下划线广告。

20
00:01:17,010 --> 00:01:20,530
现在，我们选择该行以查看我们的数据集。

21
00:01:20,580 --> 00:01:23,070
因此执行完美。

22
00:01:23,070 --> 00:01:28,070
现在，让我们转到变量资源管理器以在此处双击来查看它的设置。

23
00:01:28,560 --> 00:01:30,090
这是数据集。

24
00:01:30,510 --> 00:01:30,780
好。

25
00:01:30,780 --> 00:01:36,450
因此，只需快速提醒一下，该数据集就包含社交网络中用户的信息。

26
00:01:36,540 --> 00:01:43,050
因此，这些信息是用户ID，性别，年龄和预计薪水以及该社交网络

27
00:01:43,050 --> 00:01:47,590
有几个可以将广告投放到社交网络上的商业客户。

28
00:01:47,790 --> 00:01:55,200
他们的客户之一是一家汽车公司，该公司刚刚推出了自己的全新豪华SUV，可笑

29
00:01:55,200 --> 00:01:55,870
价钱。

30
00:01:56,160 --> 00:02:02,790
我们正在尝试查看社交网络中的哪些用户将购买此全新SUV

31
00:02:02,790 --> 00:02:03,200
。

32
00:02:03,260 --> 00:02:10,860
因此，这里的最后一列告诉用户是否购买这款SUV，我们将建立一个模型

33
00:02:10,860 --> 00:02:17,070
这将基于两个变量来预测用户是否要购买SUV

34
00:02:17,070 --> 00:02:19,830
是年龄和估计工资。

35
00:02:19,840 --> 00:02:23,250
因此，我们的特征矩阵只会是这两列。

36
00:02:23,250 --> 00:02:29,580
我们希望找到用户的年龄和估计工资与他的决定之间的一些相关性

37
00:02:29,580 --> 00:02:32,160
购买是或否的SUV。

38
00:02:32,470 --> 00:02:32,860
好。

39
00:02:32,880 --> 00:02:35,550
那么指标是什么。

40
00:02:35,550 --> 00:02:39,890
这是索引零索引一索引到索引三。

41
00:02:39,900 --> 00:02:43,380
因此，这里我们将放置索引。

42
00:02:43,380 --> 00:02:45,840
我们将把两个索引放在方括号中。

43
00:02:46,080 --> 00:02:48,560
这样就来了，三个。

44
00:02:48,780 --> 00:02:55,700
这就是我们要包含在要素矩阵中的列的两个索引。

45
00:02:56,100 --> 00:02:56,690
好。

46
00:02:56,730 --> 00:02:58,110
那为什么呢。

47
00:02:58,140 --> 00:02:59,100
让我们看看为什么。

48
00:02:59,280 --> 00:03:02,130
好的，因此已将其索引到索引三和索引四。

49
00:03:02,370 --> 00:03:06,430
因此，这里为什么要采用索引。

50
00:03:06,450 --> 00:03:06,920
好吧。

51
00:03:06,940 --> 00:03:07,810
现在我们准备好了。

52
00:03:08,040 --> 00:03:13,930
让我们检查一下一切是否正常，让我们说这样无法控制加回车执行。

53
00:03:14,310 --> 00:03:17,650
我们在这里出现x和y。

54
00:03:17,670 --> 00:03:19,140
因此，让我们看看它们。

55
00:03:19,840 --> 00:03:26,790
好吧，这显然是这里的年龄，也是我们400次观测的全部估计工资。

56
00:03:26,790 --> 00:03:27,720
完善。

57
00:03:28,110 --> 00:03:28,860
好。

58
00:03:29,130 --> 00:03:30,420
以及为什么。

59
00:03:30,960 --> 00:03:31,710
好的，完美。

60
00:03:31,710 --> 00:03:38,200
为什么“购买”列为零表示没有用户不购买汽车，而“一”则表示是。

61
00:03:38,280 --> 00:03:42,710
现在，让我们将数据集分成测试集中的培训中心。

62
00:03:42,960 --> 00:03:45,750
因此，您想选择哪一侧。

63
00:03:45,750 --> 00:03:51,960
我们有400个观察值，所以一个好的测试量就像训练中有300个观察值

64
00:03:51,960 --> 00:03:55,560
在测试周期中设置和观察100次。

65
00:03:55,890 --> 00:03:56,700
好的，让我们这样做。

66
00:03:56,700 --> 00:04:00,090
这意味着我们要取0分25。

67
00:04:00,210 --> 00:04:07,780
那就是说有100个观察结果可以控制我们并尝试执行。

68
00:04:07,800 --> 00:04:08,520
好吧。

69
00:04:08,520 --> 00:04:15,170
所以我们现在有了X射线X检验Y火车，重量最重，您可以看到我们有300观察

70
00:04:15,180 --> 00:04:20,330
在这里进行训练，在测试中进行100次观察。

71
00:04:20,640 --> 00:04:21,720
好，太棒了。

72
00:04:21,720 --> 00:04:23,910
现在我们需要应用将来的扩展。

73
00:04:24,090 --> 00:04:27,000
好吧，我们将要这样做，因为我们需要准确的预测。

74
00:04:27,000 --> 00:04:34,680
我们想预测哪些用户将要购买SUV，而您要尽可能地将其定位为该用户

75
00:04:34,700 --> 00:04:34,850
。

76
00:04:34,980 --> 00:04:38,580
所以我要删除多行输入

77
00:04:42,600 --> 00:04:49,170
而且我认为我们很好X培训下一个测试已准备好进行转换以进行缩放。

78
00:04:49,170 --> 00:04:53,990
因此，让我们选择此命令或控制位置并执行。

79
00:04:54,660 --> 00:04:55,770
好的，完美。

80
00:04:55,770 --> 00:04:58,720
现在让我们看一下我们的训练集和测试集。

81
00:04:58,740 --> 00:05:03,860
如您所见，X列的缩放比例很好，我想那是四列。

82
00:05:03,870 --> 00:05:05,550
好，那为什么火车没有按比例缩放。

83
00:05:05,550 --> 00:05:11,910
显然因为这是分类因变量，所以X测试量表基于相同的量表

84
00:05:11,910 --> 00:05:18,660
因为您知道我们将S C X标准标量对象拟合到了特征X列的矩阵中，所以我们

85
00:05:18,660 --> 00:05:21,150
在X测试中使用了相同的对象。

86
00:05:21,150 --> 00:05:24,490
因此，这意味着将在相同的基础上进行缩放。

87
00:05:24,930 --> 00:05:25,740
好。

88
00:05:25,920 --> 00:05:27,710
而为什么人却没有规模。

89
00:05:28,080 --> 00:05:34,110
太好了，我们准备好正确地预处理我们的数据，现在就可以构建逻辑回归了

90
00:05:34,110 --> 00:05:34,830
模型。

91
00:05:34,830 --> 00:05:36,970
我等不及要向您展示结果。

92
00:05:36,990 --> 00:05:42,330
通过查看结果，您的直觉将变得更加有形，因为一切都在进行

93
00:05:42,330 --> 00:05:43,390
视觉化。

94
00:05:43,410 --> 00:05:47,550
我迫不及待想在下一个教程中开始学习，然后再享受机器学习的乐趣

