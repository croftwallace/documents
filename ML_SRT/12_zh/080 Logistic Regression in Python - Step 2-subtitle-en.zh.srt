1
00:00:00,360 --> 00:00:02,880
您好，欢迎来到本Python教程。

2
00:00:03,110 --> 00:00:08,790
因此，在上一教程中，我们对数据进行了预处理，以使其可用于我们的模型，因此今天

3
00:00:08,790 --> 00:00:11,920
我们可以开始将逻辑回归填充到我们的训练集中。

4
00:00:12,090 --> 00:00:14,540
这就是我们在本教程中要做的。

5
00:00:14,610 --> 00:00:20,760
因此，像往常一样，让我们​​为该作业导入正确的库，它将成为线性模型库

6
00:00:21,090 --> 00:00:26,620
以及为什么Linnea是因为logistic回归是线性分类器，这意味着

7
00:00:26,640 --> 00:00:32,160
因为我们在两个维度上，所以两类用户将被一条直线分开

8
00:00:32,180 --> 00:00:32,310
。

9
00:00:32,430 --> 00:00:36,870
因此，您将看到，当您进行逻辑回归的直觉不会得到更好的塑造

10
00:00:36,870 --> 00:00:39,010
将了解图形结果。

11
00:00:39,030 --> 00:00:43,620
因此，让我们通过从Eskay中键入内容来导入该库。

12
00:00:43,650 --> 00:00:48,570
了解作为库名称的线性模型。

13
00:00:48,570 --> 00:00:49,800
这里是。

14
00:00:50,420 --> 00:00:50,900
好。

15
00:00:50,910 --> 00:01:00,090
然后导入，我们将为其导入合适的类，即逻辑回归类

16
00:01:00,090 --> 00:01:00,120
。

17
00:01:00,120 --> 00:01:02,430
我们再次喜欢一个非常直观的名称。

18
00:01:02,670 --> 00:01:08,550
然后像往常一样，我们将根据该类创建一个新对象，该对象将成为我们的分类器

19
00:01:08,940 --> 00:01:11,460
我们将适合我们的训练。

20
00:01:11,640 --> 00:01:18,600
所以让我们做吧，我将创建一个新的变量分类器，它实际上是我们的逻辑回归

21
00:01:18,600 --> 00:01:28,210
对象并创建该对象，我将其称为类逻辑回归。

22
00:01:29,820 --> 00:01:35,070
在这里，我们的逻辑回归类具有几个参数，我们可以通过检查

23
00:01:35,070 --> 00:01:39,350
逻辑回归类，我们键入命令I来检查该类。

24
00:01:39,350 --> 00:01:40,270
开始了。

25
00:01:40,470 --> 00:01:44,380
如您所见，有几个参数，但是我们将不使用它们中的任何一个。

26
00:01:44,400 --> 00:01:48,810
我们将仅在此处使用随机状态参数以得到相同的结果。

27
00:01:48,900 --> 00:01:56,590
因此，在这里我将把随机状态设为零，以便我们都得到相同的结果。

28
00:01:56,610 --> 00:01:57,260
好吧。

29
00:01:57,390 --> 00:02:00,210
因此，我们的逻辑回归对象已准备就绪。

30
00:02:00,210 --> 00:02:08,670
现在，我将其用作分类器，并将其适合于训练集，并为此做

31
00:02:08,670 --> 00:02:14,930
将在此处使用此方法，这是适合我们的训练集的拟合方法。

32
00:02:15,240 --> 00:02:19,160
确定，所以输入适合，然后我们想适合我们的训练。

33
00:02:19,320 --> 00:02:24,780
所以在这里我们可以放X火车，为什么要火车

34
00:02:27,690 --> 00:02:33,840
因为请记住这意味着我们正在使用逻辑回归分类对象

35
00:02:33,840 --> 00:02:37,670
将其填充到训练集X火车和y火车。

36
00:02:37,860 --> 00:02:43,740
这就是我们的分类器学习额外内容之间的相关性以及为什么通过学习这些内容来训练它们之间的相关性

37
00:02:43,740 --> 00:02:44,570
相关性。

38
00:02:44,600 --> 00:02:50,730
他将能够使用他学到的知识来预测您的观察结果，我们将对其进行预测

39
00:02:50,730 --> 00:02:54,110
打开另一个将要成为测试装置的装置。

40
00:02:54,300 --> 00:02:56,490
这就是我们在下一教程中要做的。

41
00:02:56,520 --> 00:03:03,600
因此，我将在此处选择此控制器命令并执行。

42
00:03:04,140 --> 00:03:05,020
现在我们开始。

43
00:03:05,190 --> 00:03:08,990
现在，我们的逻辑回归模型已适合训练集。

44
00:03:09,480 --> 00:03:13,680
好吧，那么完美的逻辑回归模型确实适合训练集。

45
00:03:13,720 --> 00:03:20,040
现在，在下一个教程中，我们将使用这种逻辑回归来预测测试集的结果

46
00:03:20,040 --> 00:03:20,860
模型。

47
00:03:20,880 --> 00:03:22,350
因此，我期待与您相会。

48
00:03:22,380 --> 00:03:24,150
直到那时和乔机器学习

