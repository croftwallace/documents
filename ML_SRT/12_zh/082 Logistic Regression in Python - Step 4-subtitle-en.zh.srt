1
00:00:00,270 --> 00:00:03,010
您好，欢迎来到Spuyten教程。

2
00:00:03,020 --> 00:00:09,330
因此，在之前的教程中，我们对数据进行了预处理，我们将其进行逻辑回归以适应训练集

3
00:00:09,960 --> 00:00:16,470
然后我们预测了测试结果，今天我们将评估我们的逻辑回归模型

4
00:00:16,770 --> 00:00:22,440
学习并正确理解训练集中的相关性，以查看它能否做出有力的预测

5
00:00:22,440 --> 00:00:24,870
在使用上，特别是在测试仪上。

6
00:00:24,870 --> 00:00:30,390
因此，此混淆矩阵将包含我们的模型在集合上做出的正确预测

7
00:00:30,690 --> 00:00:32,600
以及错误的预测。

8
00:00:32,910 --> 00:00:38,040
好的，让我们再次创建这个计算矩阵，它将很快。

9
00:00:38,400 --> 00:00:45,150
和往常一样，我们将导入一个工具，该工具将帮助我们更快地计算混淆矩阵

10
00:00:45,150 --> 00:00:45,450
。

11
00:00:45,570 --> 00:00:52,080
只有这一次它将成为一个类，它将成为一个我们将要从scale导入的函数

12
00:00:52,090 --> 00:00:53,740
在那个矩阵库上。

13
00:00:54,090 --> 00:01:07,110
因此，让我们从作为指标的缩放器开始进行操作，然后再导入一个或多个函数

14
00:01:07,110 --> 00:01:08,430
作为混淆矩阵

15
00:01:10,980 --> 00:01:13,790
混淆强调矩阵。

16
00:01:13,800 --> 00:01:14,270
好吧。

17
00:01:14,280 --> 00:01:20,130
您可以清楚地区分一个类和一个函数，因为请记住该类包含

18
00:01:20,130 --> 00:01:22,590
首字母大写。

19
00:01:22,800 --> 00:01:27,610
因此，现在我们将使用此函数来计算混淆矩阵和仅一行。

20
00:01:27,660 --> 00:01:34,220
因此我们将其称为混淆矩阵C.M. 这是一部新圣经，但却是令人困惑的矩阵。

21
00:01:34,380 --> 00:01:40,670
然后，我们将使用刚刚导入的函数计算矩阵。

22
00:01:40,800 --> 00:01:42,380
开始了。

23
00:01:42,960 --> 00:01:44,760
然后我们将放置参数。

24
00:01:44,970 --> 00:01:48,040
好吧，让我们检查混淆矩阵。

25
00:01:48,150 --> 00:01:49,090
我们按命令。

26
00:01:49,140 --> 00:01:51,870
我看一下这些信息。

27
00:01:51,900 --> 00:01:52,590
开始了。

28
00:01:52,590 --> 00:01:55,690
这就是我们的参数，可以看到我们必须输入什么参数。

29
00:01:56,070 --> 00:01:58,440
所以第一个参数是y true。

30
00:01:58,510 --> 00:02:00,450
这就是正确的值。

31
00:02:00,450 --> 00:02:03,860
那就是实际值，即您的数据集的值。

32
00:02:03,870 --> 00:02:06,310
这实际上是现实生活中发生的事情。

33
00:02:06,540 --> 00:02:08,480
还有一个很酷的名字来指定它。

34
00:02:08,510 --> 00:02:14,820
我喜欢这次是地面真理，地面真理意味着现实中发生的真实价值。

35
00:02:15,180 --> 00:02:23,280
好，那么第一个参数就是为什么要进行测试，因为这是实数的向量

36
00:02:23,280 --> 00:02:27,090
如果是或否，则用户确实购买了SUV汽车。

37
00:02:27,480 --> 00:02:29,370
然后第二个参数是什么。

38
00:02:29,370 --> 00:02:31,530
第二个参数是为什么。

39
00:02:31,760 --> 00:02:37,740
所以这一次是预测的向量，是逻辑回归模型的预测的向量

40
00:02:38,040 --> 00:02:38,910
预料到的。

41
00:02:39,180 --> 00:02:40,790
那你猜这是什么。

42
00:02:40,870 --> 00:02:46,200
实际上，这就是为什么，分数是Fred，仅此而已。

43
00:02:46,230 --> 00:02:47,160
这就是我们需要知道的。

44
00:02:47,160 --> 00:02:49,600
我知道还有更多参数。

45
00:02:49,680 --> 00:02:52,560
实际上，标签下面只有一个很好。

46
00:02:52,560 --> 00:02:53,430
我们不会使用它。

47
00:02:53,430 --> 00:02:54,980
我们在这里拥有所需的一切。

48
00:02:55,170 --> 00:03:00,090
因此，让我们选择这两行并执行。

49
00:03:00,210 --> 00:03:00,850
好吧。

50
00:03:00,870 --> 00:03:02,780
在混淆矩阵中创建。

51
00:03:03,000 --> 00:03:05,130
现在让我们来看看它。

52
00:03:05,130 --> 00:03:10,070
我们可以在此处转到领事，键入see em，然后按Enter。

53
00:03:10,180 --> 00:03:11,200
看看它。

54
00:03:11,610 --> 00:03:13,620
好的，这是矩阵。

55
00:03:13,620 --> 00:03:15,950
我们将对其进行详细分析。

56
00:03:15,960 --> 00:03:22,620
本部分最后部分的困惑矩阵与评估购物中心绩效有关，但是

57
00:03:22,620 --> 00:03:28,770
到目前为止，我只想告诉您，这里的65和24这两个数字是正确的预测。

58
00:03:29,040 --> 00:03:32,730
并且这两个数字8和3是错误的预测。

59
00:03:33,000 --> 00:03:35,820
因此，我们可以看到我们有很多正确的预测是好的。

60
00:03:35,820 --> 00:03:44,450
我们有65加24等于89个正确的预测，而我们有8加3等于11。

61
00:03:44,520 --> 00:03:46,070
错误的预测。

62
00:03:46,240 --> 00:03:50,790
很好，这是评估模型性能的第一步。

63
00:03:50,790 --> 00:03:55,830
但是，真正最有趣的方法来评估模型性能是我们要做的

64
00:03:55,830 --> 00:04:01,950
在下一个教程中进行，因为我们将对结果进行图形化可视化，并且我们将

65
00:04:01,950 --> 00:04:05,640
清楚地看到我们的分类器如何将这两个类别分开。

66
00:04:05,640 --> 00:04:11,790
这意味着我们将看到分类器的决策边界，并因此看到决策区域

67
00:04:11,790 --> 00:04:12,330
。

68
00:04:12,330 --> 00:04:16,740
这意味着我们将清楚地看到分类器预测用户所在的区域

69
00:04:16,740 --> 00:04:21,540
要购买产品以及分类器预测用户不会去的其他区域

70
00:04:21,540 --> 00:04:22,770
购买产品。

71
00:04:22,770 --> 00:04:24,240
您将看到它会非常有趣。

72
00:04:24,240 --> 00:04:27,120
这将是令人兴奋的视觉图形效果。

73
00:04:27,120 --> 00:04:28,950
我等不及要向您展示。

74
00:04:28,980 --> 00:04:31,630
因此，我期待在下一个教程中见到您。

75
00:04:31,650 --> 00:04:33,430
在那之前享受机器学习

