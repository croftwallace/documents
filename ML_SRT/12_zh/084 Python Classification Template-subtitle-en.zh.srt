1
00:00:00,210 --> 00:00:02,410
您好，欢迎来到本Python教程。

2
00:00:02,640 --> 00:00:07,380
所以这并不是Python教程，因为我们这样做是为了告诉大家

3
00:00:07,380 --> 00:00:09,040
分类模板。

4
00:00:09,270 --> 00:00:14,310
我们这样做是因为我们将要建立的未来分类模型将

5
00:00:14,310 --> 00:00:19,980
有了这个模板，我们可以更高效地构建它，我们正在制作本教程，我们将使这个

6
00:00:19,980 --> 00:00:25,410
逻辑回归模型中的模板，因为正如您在该模型中注意到的那样，

7
00:00:25,410 --> 00:00:31,200
在本节中，我们唯一专门编写关于逻辑回归的内容的时间是

8
00:00:31,260 --> 00:00:32,730
就在本节中

9
00:00:32,730 --> 00:00:35,140
的确，其余的纯粹是广义的。

10
00:00:35,160 --> 00:00:40,620
例如，当我们预测测试结果时，我们不使用任何特定于物流的类或函数

11
00:00:40,620 --> 00:00:41,240
回归。

12
00:00:41,340 --> 00:00:46,410
我们在这里使用这个分类器，它确实是逻辑回归的分类器，但是我们会做

13
00:00:46,410 --> 00:00:52,050
在下一节中，当我们构建其他分类模型时，将仅导入一个新类，

14
00:00:52,050 --> 00:00:57,030
将是构建我们未来的分类模型所需的类，然后我们将该类称为

15
00:00:57,030 --> 00:01:01,260
在此处创建或分类您的对象，该对象仍将调用分类器。

16
00:01:01,380 --> 00:01:06,390
然后我们将使用fit方法，但这是我们专门讨论的整个代码的唯一部分

17
00:01:06,390 --> 00:01:07,360
关于模型。

18
00:01:07,360 --> 00:01:12,570
代码中没有其他地方有特定于逻辑回归的内容，例如在这里我不使用

19
00:01:12,570 --> 00:01:14,240
关于逻辑回归的任何事情。

20
00:01:14,250 --> 00:01:16,240
我只在这里使用分类器。

21
00:01:16,290 --> 00:01:21,700
但是我们的未来模型也将称为气化炉，在此最后一节中也相同。

22
00:01:21,700 --> 00:01:24,080
我不谈论杰西卡回归。

23
00:01:24,150 --> 00:01:28,980
我仅对此处进行分类的代码不编写任何特定于逻辑回归的代码。

24
00:01:28,980 --> 00:01:34,080
这就是为什么我们为将来的模型制作模板真的很容易，这就是为什么我们会

25
00:01:34,080 --> 00:01:37,550
在创建将来的分类模型方面如此高效。

26
00:01:37,680 --> 00:01:39,890
感谢这个特定的模板。

27
00:01:39,930 --> 00:01:49,140
因此，让我们制作该模板，实际上是将所有内容从这里复制到底部并粘贴

28
00:01:49,140 --> 00:01:49,840
在这里。

29
00:01:50,160 --> 00:01:57,150
现在我们要做的只是删除此处的这部分代码，因为这是特定于

30
00:01:57,150 --> 00:01:58,740
逻辑回归模型。

31
00:01:58,830 --> 00:02:09,240
因此，我们将删除该部分，并用注释替换它，以指定我们需要创建分类器

32
00:02:10,590 --> 00:02:11,820
就在这儿。

33
00:02:11,820 --> 00:02:17,400
然后，您知道我们可以通过替换本部分标题中的逻辑回归来进一步推广

34
00:02:17,400 --> 00:02:20,130
在这里由分类器。

35
00:02:20,830 --> 00:02:21,920
好吧。

36
00:02:21,930 --> 00:02:27,770
实际上，这就是我们用于分类的所有模板已准备就绪，可以非常高效地进行构建。

37
00:02:27,780 --> 00:02:33,300
任何新的分类模型，您将在接下来的部分中看到，我们将如何

38
00:02:33,360 --> 00:02:40,350
必须在本节中的三行中创建或分类您，我们将准备进行预测

39
00:02:40,580 --> 00:02:44,420
可视化所产生的训练并可视化测试结果。

40
00:02:44,430 --> 00:02:49,050
因此，实际上，我们可以回顾一下这家公司的工作。

41
00:02:49,080 --> 00:02:55,020
因此，在第一部分中，我们导入库matplotlib，然后在第二部分中，我们导入

42
00:02:55,170 --> 00:02:58,400
数据将我们的社交网络设置为数据集。

43
00:02:58,530 --> 00:03:03,100
然后在第三部分中，我们将数据集分为训练集和测试集。

44
00:03:03,150 --> 00:03:08,400
然后在下一部分中，如果需要，我们可以使用此代码来应用特征缩放，但这不是

45
00:03:08,400 --> 00:03:10,540
我们创建分类器的部分

46
00:03:10,680 --> 00:03:18,300
因此，它将创建许多创建广告的测试者，并创建内核SVM基本决策树分类

47
00:03:18,300 --> 00:03:19,790
进行美国分类。

48
00:03:19,860 --> 00:03:23,390
针对相同特定业务问题的许多分类器。

49
00:03:23,640 --> 00:03:27,810
然后创建一种分类器来预测测试结果。

50
00:03:27,810 --> 00:03:30,740
然后我们制作了混淆矩阵，然后制作了我最喜欢的部分。

51
00:03:30,750 --> 00:03:32,820
我们将训练的结果可视化。

52
00:03:33,000 --> 00:03:39,600
与测试结果相同，该结果也已可视化以确保我们没有过度拟合

53
00:03:39,870 --> 00:03:44,280
而且我们的模型在新的观察结果上仍然表现良好。

54
00:03:44,280 --> 00:03:48,940
因此，在这里，我们准备非常有效地构建新的分类模型。

55
00:03:49,230 --> 00:03:51,470
我期待与您一起创建新模型。

56
00:03:51,570 --> 00:03:53,420
在此之前，享受机器学习

