1
00:00:00,490 --> 00:00:02,680
您好，欢迎来到我们的教程。

2
00:00:02,680 --> 00:00:07,480
因此，在之前的国家石油公司（Statoil）中，我们学会了一种非常有效的方法来评估我们的购物中心绩效。

3
00:00:07,540 --> 00:00:10,710
因此，这是关于评估模型性能。

4
00:00:10,780 --> 00:00:15,940
在今天的Statoil中，我们将学习一种有关改进模型的技术

5
00:00:15,940 --> 00:00:17,140
性能。

6
00:00:17,140 --> 00:00:23,320
因此，我们已经建立了非常强大的模型，但是我们仍然可以对其进行改进，以及如何才能做到这一点

7
00:00:23,320 --> 00:00:28,930
找到超参数的最优值，因为实际上任何机器早期模型都组成

8
00:00:28,930 --> 00:00:30,660
两种类型的参数。

9
00:00:30,700 --> 00:00:35,620
第一类参数是通过机器学习算法学习的参数。

10
00:00:35,710 --> 00:00:39,090
第二类参数是我们选择的参数。

11
00:00:39,130 --> 00:00:45,670
例如，模型中的内核或惩罚参数甚至某些正则化参数

12
00:00:45,670 --> 00:00:47,460
丰富回归或更少。

13
00:00:47,650 --> 00:00:52,350
基本上，在任何机器上的任何模型中，我们都有很多未学习的参数。

14
00:00:52,450 --> 00:00:57,500
到目前为止，我们在本课程中所做的只是为这些参数选择一个值。

15
00:00:57,550 --> 00:01:02,620
我们从未真正体验过这些超级参数，也从未尝试过使用它们的多个值。

16
00:01:02,830 --> 00:01:07,510
因此，这仍然给我们很大的改进空间，因为也许有更好的选择

17
00:01:07,510 --> 00:01:09,550
这些超级参数的值。

18
00:01:09,550 --> 00:01:12,420
您知道比我们选择的价值更好的选择。

19
00:01:12,730 --> 00:01:17,920
因此，这种称为“网格搜索”的技术将回答您多次提出的问题之一

20
00:01:17,920 --> 00:01:23,340
在本课程中，这是我如何知道在建立机器学习模型时应该选择哪个参数的方法

21
00:01:23,350 --> 00:01:28,690
这些超参数的最佳值是多少，网格搜索将给出答案，因为

22
00:01:28,960 --> 00:01:31,950
它将找到这些参数的最佳值。

23
00:01:31,990 --> 00:01:33,460
因此，让我们看看它将如何做到这一点。

24
00:01:33,460 --> 00:01:35,500
让我们实现网格搜索。

25
00:01:35,740 --> 00:01:39,430
因此，我们将处理与前两个工具相同的问题。

26
00:01:39,490 --> 00:01:44,340
也就是说，您知道这个分类问题，我们需要在社交网络中对用户进行分类

27
00:01:44,340 --> 00:01:49,240
并预测他们是否会在广告上点击“是”或“否”以购买SUV，因此我们正在努力

28
00:01:49,240 --> 00:01:51,530
使用此数据集的社交网络广告。

29
00:01:51,700 --> 00:01:57,310
除此之外，这是一个很好的例子，因为内核作为VM模型具有许多您知道的参数

30
00:01:57,310 --> 00:01:58,810
此惩罚参数。

31
00:01:58,810 --> 00:02:04,420
这个伽玛参数，有些人问我应该为这些参数选择哪些值。

32
00:02:04,420 --> 00:02:07,110
因此，网格搜索将准确地告诉我们这一点。

33
00:02:07,120 --> 00:02:08,720
因此，让我们开始吧。

34
00:02:08,770 --> 00:02:14,020
我们正在使用与上一个教程相同的文件夹作为模型选择，以确保

35
00:02:14,020 --> 00:02:16,390
您在归档时拥有此社交网络。

36
00:02:16,480 --> 00:02:18,410
如果是这样的话，您就准备好了。

37
00:02:18,430 --> 00:02:25,090
因此，在数据预处理阶段之后的任何地方，我们都将喜欢网格搜索，因为实际上

38
00:02:25,090 --> 00:02:30,910
出于道德考虑，将使用此内核，然后对其进行一些参数调整以找到最佳

39
00:02:30,910 --> 00:02:31,710
价值观。

40
00:02:31,720 --> 00:02:37,990
我们实际上将使用一个新软件包，您将看到这是一个非常实用的软件包，可用来构建

41
00:02:37,990 --> 00:02:40,820
与此处的VM模型相同的内核。

42
00:02:40,870 --> 00:02:47,440
但是通过同时在其上应用网格搜索和此数据包，您已经知道它是胡萝卜

43
00:02:47,440 --> 00:02:48,400
包。

44
00:02:48,400 --> 00:02:53,710
真的，当我们谈论机器学习时，我们的胡萝卜包是最实用的之一

45
00:02:53,710 --> 00:02:59,710
软件包，因为基本上可以使用此软件包构建任何机器学习模型，而不仅仅是您自己

46
00:02:59,710 --> 00:03:05,380
可以构建任何型号的任何机器，但是当您很好地构建带有维护包的任何型号的机器时，

47
00:03:05,380 --> 00:03:08,890
为您提供所有最佳参数所需的模型。

48
00:03:08,890 --> 00:03:14,210
因此，它非常强大，因此是我们中功能最强大的软件包之一。

49
00:03:14,260 --> 00:03:21,430
因此，正如我告诉您的那样，我们可以在数据处理阶段之后的任何地方构建这个新的Choon模型，所以让我们

50
00:03:21,430 --> 00:03:27,610
实际上在仔细的交叉验证部分之后就做到了，让您知道其他有趣的地方

51
00:03:27,610 --> 00:03:32,700
此处的代码部分，以便例如您可以比较我们在此制作的两个模型

52
00:03:32,980 --> 00:03:36,070
和我们要用胡萝卜包装制作的数字。

53
00:03:36,220 --> 00:03:38,850
随时比较他们的表现结果。

54
00:03:38,920 --> 00:03:44,050
因此，我们将在此处将这个新内核构建为模型。

55
00:03:44,170 --> 00:03:48,880
因此，我们在寻找最佳参数方面进行了出色的搜索，我在这里准备了此代码部分。

56
00:03:49,090 --> 00:03:53,680
但是实际上，它不仅在应用网格搜索，而且还在构建新模型。

57
00:03:53,740 --> 00:03:59,500
首先，我们要做的第一件事是导入已经安装的胡萝卜包

58
00:03:59,500 --> 00:04:01,400
在之前的一些教程中

59
00:04:01,510 --> 00:04:03,800
但是，请确保您已安装它。

60
00:04:03,940 --> 00:04:06,350
如果您不遵循这些步骤，那将会很麻烦。

61
00:04:06,370 --> 00:04:11,580
因此，我只是回退该命令，并在胡萝卜里面加上引号。

62
00:04:11,590 --> 00:04:11,950
好吧。

63
00:04:11,950 --> 00:04:14,110
然后，我将其置评。

64
00:04:14,110 --> 00:04:14,940
开始了。

65
00:04:15,160 --> 00:04:19,120
现在，让我们使用库命令导入软件包。

66
00:04:19,120 --> 00:04:22,460
在这里，我们去图书馆和胡萝卜里面。

67
00:04:22,510 --> 00:04:23,090
完善。

68
00:04:23,170 --> 00:04:26,860
因此，现在让我们构建与模型相同的内核。

69
00:04:26,860 --> 00:04:30,800
但是，有了胡萝卜包，您将看到它将会成为您的东西。

70
00:04:31,250 --> 00:04:35,540
好的，因为我们正在构建新的分类器，因此将内核作为安抚器。

71
00:04:35,740 --> 00:04:39,180
好吧，让我们使用已分类的常用名称来创建模型。

72
00:04:40,350 --> 00:04:45,480
好吧，那就是变量然后等于，然后就是我们用来搬运行李的地方。

73
00:04:45,720 --> 00:04:47,540
现在我们要使用什么功能。

74
00:04:47,610 --> 00:04:50,250
它是胡萝卜包装最常用的功能之一。

75
00:04:50,430 --> 00:04:52,370
这是火车功能。

76
00:04:52,560 --> 00:04:53,820
如此括号。

77
00:04:53,820 --> 00:04:58,200
现在真正有趣的是使用浏览器。

78
00:04:58,200 --> 00:04:58,950
这里是。

79
00:04:59,070 --> 00:05:09,360
然后输入胡萝卜，然后进入获取中心链接，让我们单击它，然后在其中

80
00:05:09,380 --> 00:05:17,740
需要在此处单击此链接，然后再单击六个可用模型，因为在本节中

81
00:05:18,100 --> 00:05:23,280
您将获得可以使用胡萝卜包构建的所有模型，并且有很多模型。

82
00:05:23,290 --> 00:05:25,870
实际上，我们在本课程中构建了一些较旧的模型。

83
00:05:25,900 --> 00:05:31,220
所以现在有些人可能会在想为什么我们不使用carit软件包构建所有这些模型

84
00:05:31,420 --> 00:05:36,170
因为胡萝卜包确实可以为我们提供最佳最佳参数的模型。

85
00:05:36,370 --> 00:05:41,470
嗯，这是因为这些软件包用于构建课程中的所有模型，因此有很多选择

86
00:05:41,560 --> 00:05:44,560
其中一些您不能与胡萝卜包装一起使用。

87
00:05:44,560 --> 00:05:49,630
因此，很高兴知道如何同时使用我们在课程中使用过的软件包和胡萝卜软件包

88
00:05:49,780 --> 00:05:54,400
但绝对要进行参数调整，您应该使用胡萝卜包。

89
00:05:54,430 --> 00:06:00,000
好的，所以您在这里看到的此列表是可以使用胡萝卜包构建的所有模型的列表。

90
00:06:00,160 --> 00:06:04,030
从现在开始，我们正在构建整个内核。

91
00:06:04,070 --> 00:06:12,100
好吧，您会看到它可用，我是说在此列表的此部分中，我们可以在这里找到它

92
00:06:12,280 --> 00:06:18,340
在此列表的底部，因为确实可以看到，因为我们有许多支持向量机模型，

93
00:06:18,340 --> 00:06:25,360
我们感兴趣的是带有径向基函数的支持向量机，称为“记住”

94
00:06:25,600 --> 00:06:28,460
广播基地的职能女孩是加油女孩。

95
00:06:28,570 --> 00:06:34,390
将内核构建为VM模型的最常用内核，这就是我们要使用的模型

96
00:06:34,390 --> 00:06:39,700
现在用胡萝卜包构建，而我们现在需要获取的信息是

97
00:06:39,700 --> 00:06:46,570
将是我们将要使用的火车功能的输入之一，这就是这里的信息

98
00:06:46,570 --> 00:06:49,570
输入火车功能参数之一。

99
00:06:49,570 --> 00:06:54,850
方法参数以及带有此参数的趋势函数将知道要使用哪个模型

100
00:06:54,850 --> 00:06:56,850
构建以及选择哪种模型。

101
00:06:57,070 --> 00:07:04,510
因此，现在我们要做的就是使用此名称复制它，并将其粘贴为输入作为方法

102
00:07:04,510 --> 00:07:07,080
函数内部的参数。

103
00:07:07,090 --> 00:07:08,810
现在让我们回到我们的工作室。

104
00:07:08,920 --> 00:07:09,560
开始了。

105
00:07:09,610 --> 00:07:17,930
现在，让我们构建模型，以便我们实际上可以在此处按F以获得参数信息。

106
00:07:18,010 --> 00:07:24,720
因此，让我们看看需要输入此形式参数的第一个强制性参数是什么。

107
00:07:24,820 --> 00:07:26,950
当然是公式。

108
00:07:26,950 --> 00:07:27,960
因此，让我们开始吧。

109
00:07:28,180 --> 00:07:34,450
让我们将第一个参数形式设为等于，然后我们需要像以前一样精确地放置公式

110
00:07:34,450 --> 00:07:36,660
在构建以前的模型时执行。

111
00:07:36,670 --> 00:07:41,340
因此，这就是因变量而购买的提醒。

112
00:07:41,600 --> 00:07:44,680
您知道这是社交网络广告业务问题。

113
00:07:44,680 --> 00:07:53,860
因此，在这里我们需要购买两个输入，然后再出售和然后再出售所有自变量。

114
00:07:53,990 --> 00:07:59,230
请记住，我们不必在此处使用此快捷方式放置所有变量的名称。

115
00:07:59,390 --> 00:08:00,840
那真是愚蠢。

116
00:08:01,070 --> 00:08:02,280
好吧，那就来吧。

117
00:08:02,300 --> 00:08:04,270
然后是下一个论点。

118
00:08:04,280 --> 00:08:09,850
因此，下一个参数是数据，这当然是您正在建立的训练集和分类

119
00:08:09,880 --> 00:08:10,990
在火车上。

120
00:08:11,150 --> 00:08:13,270
因此，您需要在此处输入。

121
00:08:13,400 --> 00:08:17,080
数据等于训练集。

122
00:08:17,240 --> 00:08:17,950
开始了。

123
00:08:18,080 --> 00:08:23,780
因此，现在是公式和数据的表格，训练集为您提供了所需的所有信息

124
00:08:24,080 --> 00:08:25,250
训练您的模型。

125
00:08:25,610 --> 00:08:30,590
但是当然，我们需要指定必须构建的模型，即需要指定

126
00:08:30,590 --> 00:08:36,830
想要使内核具有道德性，这就是第三种论点所发生的

127
00:08:36,830 --> 00:08:38,570
这些论点之一。

128
00:08:38,570 --> 00:08:44,930
这些不是强制性的，但这是方法参数实际上在这里具有链接

129
00:08:45,140 --> 00:08:50,660
在Google上浏览的该链接将为您提供所有可用型号和特征的列表。

130
00:08:50,900 --> 00:08:55,670
因此，使用此方法参数，我们需要输入在此链接中复制的内容。

131
00:08:55,670 --> 00:08:57,760
那就是V.M. 无线电。

132
00:08:58,010 --> 00:09:06,680
因此，让我们现在输入逗号，然后方法等于引号，然后在引号内

133
00:09:06,680 --> 00:09:08,680
品尝SBM广播。

134
00:09:08,900 --> 00:09:15,380
这三个参数实际上就是公式，数据和方法

135
00:09:15,380 --> 00:09:20,630
作为VMO构建或内核，然后对于您知道的参数，您将看到发生了什么。

136
00:09:20,630 --> 00:09:27,230
所以首先我们要执行的是数据处理阶段，因为我们需要导入数据集

137
00:09:27,560 --> 00:09:30,200
并应用数据处理阶段。

138
00:09:30,230 --> 00:09:31,480
所以现在就开始吧。

139
00:09:31,520 --> 00:09:36,140
我们将不执行这些部分，因为这是通过所有其他方式将内核构建为VM

140
00:09:36,170 --> 00:09:38,230
我们只需要从这里拿走所有东西。

141
00:09:39,140 --> 00:09:42,230
在顶部，我们开始吧。

142
00:09:42,230 --> 00:09:42,880
好吧。

143
00:09:42,890 --> 00:09:44,240
他们只是说我们将导入它。

144
00:09:44,240 --> 00:09:50,590
我们拥有数据集，这是编辑人员设置的趋势，并且数据处理阶段已全部正确应用。

145
00:09:50,930 --> 00:09:56,820
好的，现在让我们使用胡萝卜包将内核构建为模型。

146
00:09:56,930 --> 00:10:01,040
因此，请确保我们导入导入的胡萝卜包。

147
00:10:01,160 --> 00:10:06,450
现在，我们选择这一行并执行它。

148
00:10:06,480 --> 00:10:06,920
好吧。

149
00:10:06,920 --> 00:10:08,350
这需要一点时间。

150
00:10:08,510 --> 00:10:10,160
大约一秒钟。

151
00:10:10,190 --> 00:10:10,910
那也行。

152
00:10:11,060 --> 00:10:12,980
在这里，我们得到了分类器。

153
00:10:13,100 --> 00:10:15,410
这就是我们都对其进行分类的内核。

154
00:10:15,650 --> 00:10:19,940
还不是今天，但是您将要看到会发生什么，因为现在我们要做的是

155
00:10:20,420 --> 00:10:29,060
在这里按Enter键，我们只需输入分类器并选择它，然后按Enter键即可。

156
00:10:29,060 --> 00:10:35,450
当我们对您进行分类时，您会获得关于内核的很多非常有趣的信息

157
00:10:35,450 --> 00:10:42,440
用胡萝卜包构建的，因为实际上您在这里看到的是一些参数调整的结论

158
00:10:42,440 --> 00:10:45,490
这是在此内核SVM分类上完成的。

159
00:10:45,500 --> 00:10:46,390
您刚刚建造。

160
00:10:46,580 --> 00:10:52,250
这个结论是，使用最大的精度来选择最优模型

161
00:10:52,250 --> 00:10:52,800
值。

162
00:10:52,880 --> 00:10:57,910
因此，这意味着准确性是评估模型性能的性能指标。

163
00:10:58,100 --> 00:11:05,480
在下面，您会看到模型使用的最终值是Sigma等于1点12 1

164
00:11:05,540 --> 00:11:08,830
点十三和C等于0.5。

165
00:11:09,110 --> 00:11:15,170
这就是您的参数Chihuly的结果，即Chihuly的超参数的最优值

166
00:11:15,170 --> 00:11:15,710
电话。

167
00:11:15,720 --> 00:11:21,950
当我们对模型进行建模时，它将使您的内核成为比您构建的模型更高的性能

168
00:11:21,950 --> 00:11:23,070
用以前的方法。

169
00:11:23,210 --> 00:11:27,180
当然，因为C参数的默认值可能是0.5。

170
00:11:27,180 --> 00:11:32,450
这看起来像默认值，但绝对是围绕该组的柱头的默认值，其中

171
00:11:32,450 --> 00:11:37,900
是内核的另一个超级参数，因为VM绝对不是1.30。

172
00:11:38,060 --> 00:11:45,380
通过Sigma参数的这一13点值，您可以获得最佳精度和准确度

173
00:11:45,530 --> 00:11:51,230
这要比我们先前建立的模型所获得的内核精度更高，甚至

174
00:11:51,230 --> 00:11:53,040
看看这个精度是多少。

175
00:11:53,090 --> 00:11:54,300
它显示在这里。

176
00:11:54,500 --> 00:11:56,950
准确性为92％。

177
00:11:57,080 --> 00:12:02,120
除此之外，无关紧要的精度也不是20分割测量的精度。

178
00:12:02,150 --> 00:12:08,150
这是在几个Trente分割上测得的，您可以通过重新组装此信息在此处实际看到

179
00:12:08,480 --> 00:12:14,240
具有25次重复的引导程序，与谨慎的Croswell版本完全相同。

180
00:12:14,330 --> 00:12:18,800
这意味着您需要采集不同的训练集和测试集样本，并在模型中建立模型。

181
00:12:18,920 --> 00:12:24,170
训练并在每个样本的测试集上测试其性能，最终您将

182
00:12:24,170 --> 00:12:28,290
准确度的平均值，您将获得92％的准确度。

183
00:12:28,550 --> 00:12:35,780
因此，这绝对是一个很好的精度，此外，这些最佳值可以使您获得最佳的精度。

184
00:12:35,780 --> 00:12:40,790
超参数Sigma的1等于13点，C等于0.5。

185
00:12:41,090 --> 00:12:45,620
现在，我将为您提供一种更快的方法来获取超级参数的这些最佳值。

186
00:12:45,800 --> 00:12:47,120
您只需要。

187
00:12:47,510 --> 00:12:51,070
好吧，让我们将此分类器保留在这里，但让我们复制一下。

188
00:12:51,080 --> 00:12:58,610
您只需要使用分类器，然后添加一个美元符号，然后在此处添加最好的choon。

189
00:12:58,640 --> 00:13:06,410
在这里，您选择了要执行的对象，您将直接获得超级参数的最佳值。

190
00:13:06,410 --> 00:13:10,550
Sigma等于13点，C等于0.5。

191
00:13:10,640 --> 00:13:17,150
现在，恭喜您获得了最好的内核作为模型，同时具有最佳的Rinku效率和

192
00:13:17,150 --> 00:13:18,610
最佳超级参数。

193
00:13:18,770 --> 00:13:20,590
现在，选择权就在您了。

194
00:13:20,660 --> 00:13:26,810
您可以将这个内核作为您通过载体包在此处构建的VM传输的方式，也可以采用

195
00:13:27,590 --> 00:13:29,840
该类或您以通常的方式构建。

196
00:13:30,020 --> 00:13:36,220
但是，在此SVM函数内部，您可以输入在此处找到的针对超级无参数的最佳值

197
00:13:36,230 --> 00:13:36,800
那是。

198
00:13:36,800 --> 00:13:40,380
Sigma等于13点，C等于0.5。

199
00:13:40,610 --> 00:13:45,920
我将让您进行练习，并自行判断您想选择哪种方法，我将再见

200
00:13:45,920 --> 00:13:50,690
在本文的下一个和最后一个部分中，我们将要实现的最强大的功能之一

201
00:13:50,690 --> 00:13:53,560
机器学习X中的模型可以提升。

202
00:13:53,570 --> 00:13:55,890
因此，这将是一个非常令人兴奋的部分。

203
00:13:56,030 --> 00:13:57,420
我等不及要在那里见你了。

204
00:13:57,500 --> 00:13:59,270
直到那时在德国学习。

