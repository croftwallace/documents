1
00:00:00,480 --> 00:00:03,000
您好，欢迎来到本Python教程。

2
00:00:03,000 --> 00:00:03,360
好吧。

3
00:00:03,360 --> 00:00:06,740
现在，我们在卷积神经网络中添加了所有层。

4
00:00:06,840 --> 00:00:11,130
所以现在我们只需要编译整个内容，您就知道选择在沙子上打分

5
00:00:11,190 --> 00:00:15,030
算法是损失函数，最后是性能指标。

6
00:00:15,150 --> 00:00:16,040
因此，让我们这样做。

7
00:00:16,080 --> 00:00:21,180
我们已经知道该怎么做，因为这是构建过程的最后一步，

8
00:00:21,180 --> 00:00:28,440
上一节，我们需要使用分类器并将其复制粘贴到此处，然后加点，因为

9
00:00:28,440 --> 00:00:31,920
我们将介绍编译方法。

10
00:00:31,920 --> 00:00:33,410
这次我们没有添加任何内容。

11
00:00:33,410 --> 00:00:35,150
我们正在编译我们的CNN。

12
00:00:35,160 --> 00:00:40,980
所以这是编译方法，然后是括号，然后在这些括号内添加参数

13
00:00:41,340 --> 00:00:46,530
即优化参数以选择随机梯度下降算法，而不是最后一个参数

14
00:00:46,530 --> 00:00:47,810
选择最后一个功能。

15
00:00:47,970 --> 00:00:51,470
然后最后是metrics参数，以选择性能指标。

16
00:00:51,660 --> 00:00:53,340
因此，让我们从第一个参数开始。

17
00:00:53,370 --> 00:00:56,330
第一个参数是优化器。

18
00:00:56,340 --> 00:00:57,190
开始了。

19
00:00:57,300 --> 00:01:02,910
等于，我们将在此算法中选择与上一个选择的随机率相同的随机率

20
00:01:02,910 --> 00:01:03,610
第4节

21
00:01:03,630 --> 00:01:08,360
然后记住它是原子算法。

22
00:01:08,420 --> 00:01:13,800
好吧，然后下一个参数下一个参数是最后一个函数。

23
00:01:13,800 --> 00:01:16,930
因此，爱等于引号。

24
00:01:17,010 --> 00:01:22,740
在这些引号内，我们将输入最后一个函数的名称，记住该函数为二进制

25
00:01:22,770 --> 00:01:25,380
克鲁斯熵是有两个原因的。

26
00:01:25,380 --> 00:01:29,760
首先，因为此功能对应于阁楼McLaws，这是我们最后的功能

27
00:01:29,760 --> 00:01:35,110
通常使用分类模型（例如逻辑回归）解决分类问题。

28
00:01:35,220 --> 00:01:40,340
第二个原因是我们有一个二进制结果，因此我们需要选择二进制Krus

29
00:01:40,380 --> 00:01:41,570
熵确实起作用。

30
00:01:41,760 --> 00:01:49,770
如果我们有两个以上的结果，例如猫狗和鸟，那么我们需要选择分类

31
00:01:49,820 --> 00:01:50,630
越野。

32
00:01:50,910 --> 00:01:52,830
但是在这里，我们有一个二进制结果。

33
00:01:52,830 --> 00:01:53,630
猫或狗。

34
00:01:53,640 --> 00:01:58,970
因此它是二进制交叉熵。

35
00:01:58,970 --> 00:01:59,790
开始了。

36
00:02:00,200 --> 00:02:03,020
现在，提出最后一个论点。

37
00:02:03,170 --> 00:02:05,600
因此，最后一个参数是性能指标。

38
00:02:05,600 --> 00:02:06,430
无论如何，我们要选择。

39
00:02:06,430 --> 00:02:07,880
像往常一样最常见的一种。

40
00:02:07,940 --> 00:02:09,540
精度指标。

41
00:02:09,710 --> 00:02:19,300
因此，让我们将指标与括号内的数值相等，然后加上引号的准确性。

42
00:02:19,370 --> 00:02:19,990
开始了。

43
00:02:20,150 --> 00:02:20,860
仅此而已。

44
00:02:20,870 --> 00:02:22,710
我们的模型已准备好进行编译。

45
00:02:22,880 --> 00:02:26,700
因此，我将选择此行并执行。

46
00:02:26,870 --> 00:02:27,320
好吧。

47
00:02:27,320 --> 00:02:28,280
完善。

48
00:02:28,310 --> 00:02:30,560
我们的类非常正确地被编译了。

49
00:02:30,560 --> 00:02:35,480
因此，现在我们可以开始下一步，最后一步，我们才能获得结果。

50
00:02:35,510 --> 00:02:42,890
这是图像预处理步骤，在此步骤中，我们将根据所有图像的固有特征来适应自己的罪过。

51
00:02:42,890 --> 00:02:44,810
因此，这将是非常令人兴奋的一步。

52
00:02:44,810 --> 00:02:47,580
我期待在下一个教程中做到这一点。

53
00:02:47,840 --> 00:02:49,460
在那之前，我实际上是在学习。

