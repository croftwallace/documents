1
00:00:00,450 --> 00:00:05,000
您好，欢迎您来此一生辛勤工作，希望作业顺利。

2
00:00:05,010 --> 00:00:08,290
希望您能得到一些有趣的结果。

3
00:00:08,490 --> 00:00:14,400
而且不用等待，我将完成向后消除，以便您可以查看是否获得

4
00:00:14,400 --> 00:00:16,970
与我们将要获得的结果相同。

5
00:00:17,070 --> 00:00:21,320
而且主要是使您可以看到我们如何完成向后消除。

6
00:00:21,690 --> 00:00:22,500
因此，让我们这样做。

7
00:00:22,500 --> 00:00:30,030
因此，在上一教程中，我们着手构建没有状态自变量的回归器

8
00:00:30,150 --> 00:00:34,760
至此，完成了向后消除算法的第五步。

9
00:00:34,860 --> 00:00:40,200
因此，现在我们需要返回到步骤3，再次查找具有最高值的自变量

10
00:00:40,340 --> 00:00:40,930
值。

11
00:00:41,130 --> 00:00:46,590
然后，我们需要将其与显着性水平进行比较，以决定是否需要删除此独立

12
00:00:46,590 --> 00:00:48,700
具有最高值的变量。

13
00:00:49,380 --> 00:00:55,160
因此，我们现在要做的只是一次选择所有这些。

14
00:00:55,170 --> 00:01:00,570
这将从中删除自变量，这将适合没有预测变量的模型

15
00:01:00,570 --> 00:01:01,700
我们刚刚删除的。

16
00:01:01,830 --> 00:01:08,070
然后我们将获得具有新结果和新p值的新表，这是完美的，因为

17
00:01:08,070 --> 00:01:13,740
实际使用此站点是在修复此模型而没有我们刚刚删除的变量时

18
00:01:13,740 --> 00:01:19,580
需要返回到步骤3，这当然是再次查看具有最高P值的预测变量

19
00:01:19,800 --> 00:01:22,230
但是有了新的自变量团队。

20
00:01:22,230 --> 00:01:25,540
因此，没有我们刚刚移动的自变量。

21
00:01:25,840 --> 00:01:26,970
好的，让我们这样做。

22
00:01:26,970 --> 00:01:33,010
好，让我们选择三行，您会发现现在一切都将非常容易。

23
00:01:33,570 --> 00:01:34,100
好吧。

24
00:01:34,140 --> 00:01:35,820
这就是新表。

25
00:01:35,820 --> 00:01:38,690
不，那是旧表，那是新表。

26
00:01:38,760 --> 00:01:44,040
您会看到在这个新表格中，我们现在有四个独立的可行性，因为我们删除了一个

27
00:01:44,040 --> 00:01:44,610
。

28
00:01:44,670 --> 00:01:50,700
因此，为了跟踪下一个2 x 3和4，我们只需要看一下摘录。

29
00:01:50,790 --> 00:01:57,900
所以Konst是这列，所有的x 1是状态X 2的第一个虚拟变量是

30
00:01:57,900 --> 00:02:02,990
研发支出X 3是Edmond的x 4是营销支出。

31
00:02:03,260 --> 00:02:03,980
好。

32
00:02:04,200 --> 00:02:08,210
现在，最高值实际上是最高值。

33
00:02:08,210 --> 00:02:09,510
百分之九十四。

34
00:02:09,510 --> 00:02:12,900
仍远高于5％的显着性水平。

35
00:02:12,960 --> 00:02:20,100
所以现在我们要做的是从独立变量中删除X-1，这是状态的第一个变量

36
00:02:20,100 --> 00:02:24,460
变量虚拟变量free-State将不属于最终团队。

37
00:02:24,790 --> 00:02:25,110
好。

38
00:02:25,120 --> 00:02:32,400
现在不要对索引X犯任何错误，我们需要取矩阵X确保取

39
00:02:32,400 --> 00:02:38,700
原始矩阵以获得正确的索引，因为您知道我们正在从中删除索引

40
00:02:38,940 --> 00:02:39,720
X在这里。

41
00:02:39,720 --> 00:02:44,130
这就是原始Matrix，因此我们需要研究同一件事。

42
00:02:44,130 --> 00:02:51,090
因此，我们需要删除的变量是X-1，其P值为94％，这是最高的P值，

43
00:02:51,170 --> 00:02:54,610
正如我们刚才所说的X1的第一个可行状态。

44
00:02:54,780 --> 00:02:58,550
所以实际上就是这个，而这个有下一个。

45
00:02:58,590 --> 00:03:04,290
因此，我们现在需要做的是从X中删除下一个。

46
00:03:04,380 --> 00:03:06,340
因此，像往常一样，我们将遵循我们的方法。

47
00:03:06,360 --> 00:03:11,310
我们将复制粘贴到此处的内容，现在我们将删除索引1。

48
00:03:11,310 --> 00:03:12,630
好的，完美。

49
00:03:12,630 --> 00:03:17,910
现在您开始看到使用此隐窝实现此向后消除有多么容易

50
00:03:17,910 --> 00:03:24,090
在这里，我们只需要知道做一些复制粘贴就删除索引，然后选择这三个

51
00:03:24,090 --> 00:03:28,050
此处的代码行，只需按Command Control并按Enter即可执行。

52
00:03:28,050 --> 00:03:29,810
我们在这里有新桌子。

53
00:03:29,970 --> 00:03:35,660
在这个新表格中，我们只需要查看最高值并决定是否需要删除此值

54
00:03:35,660 --> 00:03:37,960
在具有最高值的开放变量中。

55
00:03:38,160 --> 00:03:39,600
现在让我们看看它是什么。

56
00:03:39,600 --> 00:03:43,330
实际上就是这个1 x 2 0.6。

57
00:03:43,380 --> 00:03:50,190
60％仍远高于显着性水平5％，因此这意味着x 2

58
00:03:50,190 --> 00:03:55,000
政府对利润绝对没有影响的方式。

59
00:03:55,200 --> 00:03:56,860
因此，我们显然需要将其删除。

60
00:03:57,060 --> 00:04:03,240
因此，我们将从X up矩阵中删除其索引，只是跟踪索引是什么

61
00:04:03,300 --> 00:04:04,710
并没有犯错。

62
00:04:04,920 --> 00:04:10,440
我们需要查看原始指标X，因为我们正在从原始指标中删除索引

63
00:04:10,440 --> 00:04:11,810
矩阵，如果你只是x。

64
00:04:12,000 --> 00:04:12,790
好。

65
00:04:13,050 --> 00:04:14,500
因此，该索引的作用是什么。

66
00:04:14,610 --> 00:04:17,240
确定，所以我们删除了两个虚拟变量。

67
00:04:17,280 --> 00:04:20,310
因此，X1因此是研发支出。

68
00:04:20,370 --> 00:04:25,620
那是一个，因此我们很清楚地知道X 2实际上是adman的花费。

69
00:04:25,620 --> 00:04:28,420
这就是具有索引的变量。

70
00:04:28,620 --> 00:04:30,820
这就是我们需要删除的索引。

71
00:04:30,820 --> 00:04:33,980
因此，让我们在这里按OK，现在开始。

72
00:04:34,020 --> 00:04:34,940
一样。

73
00:04:34,940 --> 00:04:41,450
复制粘贴到此处的内容，然后删除下四个。

74
00:04:41,460 --> 00:04:42,390
好吧。

75
00:04:42,390 --> 00:04:44,690
我们的模型终于准备好了。

76
00:04:44,760 --> 00:04:48,080
也许那是最后的t，也许你知道，因为那是常数。

77
00:04:48,090 --> 00:04:55,410
因此，也许next中的变量是R-Ind的三个和五个。 支出和营销旋转组合

78
00:04:55,410 --> 00:05:00,730
我们的自变量的最终团队，它们使最好的团队来预测利润。

79
00:05:00,810 --> 00:05:03,550
因此，让我们看看我们现在会发现这一点。

80
00:05:03,900 --> 00:05:10,500
然后按下命令并控制我们执行输入，让我们看一下这个新表

81
00:05:10,530 --> 00:05:13,290
因此只有两个自变量。

82
00:05:13,320 --> 00:05:15,640
因此，研发支出用于营销支出。

83
00:05:15,990 --> 00:05:21,220
让我们看一下High-Speed现在为您带来了美国0.06的最高峰。

84
00:05:21,330 --> 00:05:28,200
哦，对了，这个X-1还有Okon哦。这里的P值绝对不是零。

85
00:05:28,200 --> 00:05:34,050
我们不能有一个零p值，但它是如此之小，就像有很多零的东西，然后又有一些

86
00:05:34,050 --> 00:05:40,020
最后是小数位，但它是一个非常小的P值，无论如何它仍低于显着性水平5

87
00:05:40,020 --> 00:05:46,920
因此，R＆D支出绝对是利润的非常有力的预测指标，并且绝对具有

88
00:05:46,920 --> 00:05:51,130
统计影响对因变量利润的影响很大。

89
00:05:51,510 --> 00:05:57,000
但是就第二个自变量而言，那就是营销支出，我们可以看到

90
00:05:57,000 --> 00:06:00,200
p值为0.06，即6％。

91
00:06:00,480 --> 00:06:05,740
好吧，它实际上略高于我们设定的5％显着性水平。

92
00:06:05,790 --> 00:06:10,500
顺便说一句，我们可以将另一个重要水平设置为10％，例如，

93
00:06:10,500 --> 00:06:12,320
本可以保持这种独立性。

94
00:06:12,360 --> 00:06:18,660
但是，如果您想严格遵循像backwood消除算法这样的框架，

95
00:06:18,660 --> 00:06:19,280
滑动。

96
00:06:19,500 --> 00:06:22,710
那么在这种情况下，我们需要删除此自变量。

97
00:06:22,710 --> 00:06:29,580
但请放心，如果您仍然怀疑我们稍后会使用其他一些指标来做得更好

98
00:06:29,580 --> 00:06:35,910
决定是否需要足够的Tarion，这将有助于我们更明智地做出决定，如果我们真的需要

99
00:06:35,910 --> 00:06:38,260
去掉这个独立的身体。

100
00:06:38,280 --> 00:06:41,800
但是本教程是关于消除偏远地区本身的。

101
00:06:41,800 --> 00:06:45,370
我们还没有在谈论提高模型性能。

102
00:06:45,390 --> 00:06:50,610
因此，我们将遵循Thorley的后向消除算法，因此将其删除

103
00:06:50,700 --> 00:06:51,450
独立可行。

104
00:06:51,450 --> 00:06:57,090
所以现在我认为很明显，这个自变量是营销支出，当然，它具有指数

105
00:06:57,090 --> 00:06:57,700
5，

106
00:06:57,870 --> 00:07:05,280
因此，我们将其复制并粘贴到此处，然后删除索引五。

107
00:07:05,500 --> 00:07:06,270
好的。

108
00:07:06,590 --> 00:07:11,880
现在让我们选择所有这些按命令的控件并执行。

109
00:07:11,910 --> 00:07:19,390
这是我们的最终表格，因此只有一个自变量，这当然是研发支出

110
00:07:19,400 --> 00:07:19,520
。

111
00:07:19,740 --> 00:07:27,570
显然，这里的人员非常少，这无疑使研发支出成为非常有力的预测指标

112
00:07:27,780 --> 00:07:29,160
的利润。

113
00:07:29,160 --> 00:07:36,450
所以最后如果我们严格地遵循反向消除算法，那么结论是最优

114
00:07:36,450 --> 00:07:41,970
可预测具有最高统计意义的利润的自变量团队

115
00:07:41,970 --> 00:07:46,240
影响最大的实际上只包含一个自变量。

116
00:07:46,380 --> 00:07:50,160
恰好就是研发支出，仅此而已。

117
00:07:50,200 --> 00:07:52,680
实际上是通过向后消除来完成的。

118
00:07:52,680 --> 00:07:59,030
因此，如果我们退一步讲一个教程，我们会注意到我们花了很多时间来准备向后

119
00:07:59,030 --> 00:08:04,950
与此相关的国家/地区，您知道我们需要将这一列添加到矩阵中的行，然后

120
00:08:04,980 --> 00:08:08,930
我们必须使用这个新的统计资料模型库来建立回归指标。

121
00:08:09,090 --> 00:08:14,700
但是，您是否注意到实施后板消除算法本身有多快速和容易

122
00:08:14,990 --> 00:08:19,760
因为使用三行代码，我们只是做了一些复制粘贴，所以我们有一些非常有效的方法。

123
00:08:19,770 --> 00:08:24,450
查看此表，确定我们必须删除哪个独立的Roybal。

124
00:08:24,810 --> 00:08:30,210
而且您知道我们非常有效地删除了每个索引，并且很快就获得了最终的

125
00:08:30,210 --> 00:08:33,810
最终的独立变量最优团队的结果。

126
00:08:33,810 --> 00:08:38,550
因此，恭喜您在Titan上实施了消除偏头痛的工作。

127
00:08:38,550 --> 00:08:40,400
我们现在就要做。

128
00:08:40,560 --> 00:08:46,490
对于那些仍然对我们是否需要取消营销支出有疑问的人。

129
00:08:46,560 --> 00:08:48,060
好吧，不用担心。

130
00:08:48,120 --> 00:08:50,460
我们将使用其他一些强大的指标。

131
00:08:50,540 --> 00:08:55,850
有R平方和平方的调节器，顺便说一下，这里有R平方调节器和

132
00:08:55,910 --> 00:09:01,050
平方，这将帮助我们更加确定地决定是否需要保留。

133
00:09:01,110 --> 00:09:02,380
营销支出。

134
00:09:02,400 --> 00:09:02,760
好吧。

135
00:09:02,760 --> 00:09:04,560
再次恭喜您。

136
00:09:04,560 --> 00:09:09,020
非常感谢您观看本教程，我期待在下一个教程中与您见面。

137
00:09:09,030 --> 00:09:10,710
在那之前享受机器学习

