1
00:00:00,300 --> 00:00:04,440
您好，欢迎您进入回归的最后一轮。

2
00:00:04,440 --> 00:00:10,650
这是最后一轮，因为如您所见，当我们进入数据集时，我们有四个独立变量

3
00:00:10,740 --> 00:00:12,380
和一个因变量

4
00:00:12,390 --> 00:00:18,040
因此，这意味着如果我们想通过绘制图形来添加可视步骤，则需要五个维度

5
00:00:18,070 --> 00:00:18,120
。

6
00:00:18,120 --> 00:00:23,370
所以这很难表示，所以我们不会为该模型绘制图形，但是

7
00:00:23,370 --> 00:00:24,390
成为唯一的一个。

8
00:00:24,600 --> 00:00:29,960
因此，此模型的最后一轮最后一步将是测试的预测

9
00:00:30,000 --> 00:00:31,010
结果。

10
00:00:31,050 --> 00:00:32,490
所以现在就开始吧。

11
00:00:32,490 --> 00:00:34,650
这只会占用我们一行。

12
00:00:34,650 --> 00:00:40,040
实际上与简单回归和任何类型的回归完全相同

13
00:00:40,050 --> 00:00:46,040
因为您最终会看到我们所有的模型代码看起来都一样。

14
00:00:46,050 --> 00:00:52,850
所以确实我们只需要在这里写就是创建一个预测向量，我将其称为y Pred

15
00:00:52,870 --> 00:00:53,130
。

16
00:00:53,400 --> 00:01:02,910
至于简单的回归，然后我将在这里使用回归，并使用预测

17
00:01:03,180 --> 00:01:12,750
这里的方法是预测测试集X检验的观察结果。

18
00:01:12,750 --> 00:01:13,290
好吧。

19
00:01:13,530 --> 00:01:22,020
好的，所以如果我再次进行X测试，这些是自变量，其中两个虚拟变量在此处对应

20
00:01:22,020 --> 00:01:23,030
到国家。

21
00:01:23,190 --> 00:01:28,920
我认为是加利福尼亚和佛罗里达，然后我们将研发支出用于行政管理，

22
00:01:28,920 --> 00:01:30,050
营销支出。

23
00:01:30,090 --> 00:01:37,530
因此，我们将应用我们的回归模型或Predict方法来预测

24
00:01:37,530 --> 00:01:41,940
借助我们在此提供的信息，所有初创公司都能获利。

25
00:01:42,090 --> 00:01:46,550
然后，我们将一些预测利润与实际利润进行比较。

26
00:01:46,650 --> 00:01:51,520
因此，让我们进行确定，然后选择此行并执行。

27
00:01:51,750 --> 00:01:54,620
在这里，我们去往英国和白面包的载体已经准备就绪。

28
00:01:54,810 --> 00:01:56,360
让我们来看一下。

29
00:01:56,370 --> 00:01:57,260
为什么弗雷德。

30
00:01:57,660 --> 00:01:58,260
在这里。

31
00:01:58,260 --> 00:02:05,970
这些都是我们10个观测值的10个预测利润，我也将进行广泛测试

32
00:02:06,060 --> 00:02:11,640
其中包含实际利润，因此我们将比较实际利润和预期利润

33
00:02:11,850 --> 00:02:13,780
对于我们的10个观察中的一些。

34
00:02:13,940 --> 00:02:14,190
好的。

35
00:02:14,190 --> 00:02:21,640
因此，此向量的此列是为什么包含真实利润的测试10起点的利润

36
00:02:21,630 --> 00:02:26,220
测试集的收益，这就是现实生活中产生的利润。

37
00:02:26,400 --> 00:02:32,670
这列是预测的载体，这意味着我们的模型预测的利润。

38
00:02:32,730 --> 00:02:38,490
所以现在我们将比较一些利润，因为这里的每一行都对应于相同的利润

39
00:02:38,550 --> 00:02:39,710
观察。

40
00:02:39,720 --> 00:02:46,980
因此，例如，如果我采取这一行劝阻Spawn，与对索引启动的公司的观察相同

41
00:02:47,100 --> 00:02:48,580
在测试集中乘2。

42
00:02:48,690 --> 00:02:52,560
这是实际利润，这是预测利润。

43
00:02:52,800 --> 00:02:53,070
好的。

44
00:02:53,070 --> 00:02:57,330
因此，让我们看一下第一个索引为零的初创公司。

45
00:02:57,360 --> 00:03:07,300
实际利润是$ 130000，预测利润也是100和$ 3000，这里是282。

46
00:03:07,370 --> 00:03:09,060
这是15。

47
00:03:09,210 --> 00:03:10,140
因此，这非常接近。

48
00:03:10,140 --> 00:03:11,660
这是一个了不起的预测。

49
00:03:11,850 --> 00:03:13,950
因此，祝贺我们的痣。

50
00:03:14,010 --> 00:03:16,050
他在这一方面做得很好。

51
00:03:16,050 --> 00:03:17,640
现在让我们来看第二个。

52
00:03:17,670 --> 00:03:20,940
在测试集中以1索引的第二次启动。

53
00:03:21,090 --> 00:03:27,120
因此，对于此启动而言，实际利润为144.459

54
00:03:27,630 --> 00:03:32,380
预计利润为123.582万。

55
00:03:32,580 --> 00:03:32,910
好的。

56
00:03:32,910 --> 00:03:38,490
这样虽然还不错，但是显然我们为模型过早地祝贺了，因为显然

57
00:03:38,580 --> 00:03:40,460
比第一个准确的预测。

58
00:03:40,620 --> 00:03:45,480
然后第三个是146 000的第三个起点，这里是132。

59
00:03:45,600 --> 00:03:52,650
好的，我们的真实利润为$ 77000，预期利润为$ 71000。

60
00:03:52,740 --> 00:03:56,460
这里还不错，这里也不错。

61
00:03:56,460 --> 00:03:58,620
好的，这里。

62
00:03:58,640 --> 00:04:00,060
好的，这里。

63
00:04:00,060 --> 00:04:00,600
完善。

64
00:04:00,630 --> 00:04:06,440
非常准确的预测，真实利润为$ 97000，预测利润为$ 98000。

65
00:04:06,540 --> 00:04:07,440
那很好。

66
00:04:07,440 --> 00:04:10,560
这对三千美元的差价来说是非常好的。

67
00:04:10,560 --> 00:04:16,830
最后一个也是一个非常准确的预测，差额只有不到$ 2000

68
00:04:17,070 --> 00:04:19,720
在实际利润和预测利润之间。

69
00:04:19,860 --> 00:04:20,160
好的。

70
00:04:20,160 --> 00:04:26,100
因此，通过查看这些测试得出的真实和预测结果，我们可以看到

71
00:04:26,100 --> 00:04:32,640
模型做得很好，而且大多数情况下，我们可以看到

72
00:04:32,960 --> 00:04:36,150
自变量和因变量。

73
00:04:36,300 --> 00:04:42,300
但是，在本部分的最后一部分，我们将学习一些更好的方法来评估我们的

74
00:04:42,300 --> 00:04:48,900
模型性能，我们将使用一些指标来衡量较小的性能，但到目前为止，

75
00:04:48,900 --> 00:04:53,880
我们可以清楚地看到两者之间存在很强的线性关系，因为我们能够

76
00:04:53,880 --> 00:04:58,950
使线性模型适合我们的多个变量数据集。

77
00:04:59,290 --> 00:05:02,850
好的，让我们单击“确定”并表示祝贺。

78
00:05:02,860 --> 00:05:07,030
您现在知道了如何在Python的回归模型中进行多次运算。

79
00:05:07,200 --> 00:05:11,760
因此，在接下来的一个小时内，Toyo将在我们的产品上做同样的事情。您将看到一些事情

80
00:05:11,820 --> 00:05:15,910
将会变得更加简单，而某些事情将会变得更好。

81
00:05:15,930 --> 00:05:21,960
我们将能够非常有效地检查哪些是影响最大的变量

82
00:05:22,140 --> 00:05:23,490
关于自变量。

83
00:05:23,490 --> 00:05:26,550
您将看到我期待着您在RGA的艰辛中见到您。

84
00:05:26,550 --> 00:05:28,320
在那之前享受机器学习

